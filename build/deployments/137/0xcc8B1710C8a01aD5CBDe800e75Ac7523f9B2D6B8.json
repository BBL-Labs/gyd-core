{"allSourcePaths": {"12": "contracts/safety/VaultSafetyMode.sol", "39": "libraries/ConfigHelpers.sol", "40": "libraries/ConfigKeys.sol", "41": "libraries/DataTypes.sol", "8": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "42": "libraries/Errors.sol", "43": "libraries/FixedPoint.sol", "44": "libraries/Flow.sol", "9": "contracts/auth/Governable.sol", "10": "contracts/auth/GovernableBase.sol", "15": "interfaces/IAssetRegistry.sol", "37": "interfaces/oracles/IBatchVaultPriceOracle.sol", "16": "interfaces/ICapAuthentication.sol", "17": "interfaces/IFeeBank.sol", "18": "interfaces/IFeeHandler.sol", "19": "interfaces/IGYDToken.sol", "20": "interfaces/IGovernable.sol", "21": "interfaces/IGyroConfig.sol", "23": "interfaces/IMotherboard.sol", "24": "interfaces/IPAMM.sol", "25": "interfaces/IReserve.sol", "26": "interfaces/IReserveManager.sol", "27": "interfaces/ISafetyCheck.sol", "28": "interfaces/IVaultRegistry.sol", "45": "libraries/LogExpMath.sol", "46": "libraries/StringExtensions.sol"}, "bytecode": "", "bytecodeSha1": "62b0bb07f4513be966d6bde5bbd82c58fac11103", "coverageMap": {"statements": {"12": {"VaultSafetyMode.removeAddressFromWhitelist": {"4": [4943, 4977], "5": [4987, 5030]}, "VaultSafetyMode.isRedeemSafe": {"6": [3730, 3758], "7": [3789, 3818]}, "VaultSafetyMode.addAddressToWhitelist": {"8": [4760, 4788], "9": [4798, 4834]}, "VaultSafetyMode.checkAndPersistRedeem": {"10": [4142, 4187], "11": [4412, 4434], "12": [4473, 4484], "13": [4519, 4546]}, "VaultSafetyMode.getWhitelist": {"14": [4634, 4659]}, "VaultSafetyMode.checkAndPersistMint": {"15": [3033, 3077]}, "VaultSafetyMode.isMintSafe": {"16": [2791, 2819]}, "VaultSafetyMode.activateOracleGuardian": {"20": [5338, 5412], "21": [5643, 5726], "22": [5740, 5811], "23": [5992, 6076], "24": [6090, 6162]}, "VaultSafetyMode._checkFlows": {"26": [6344, 6400], "27": [6776, 6841], "28": [6941, 6975], "29": [6993, 6998], "30": [7474, 7506], "31": [7524, 7529], "32": [7694, 7751], "33": [7780, 7831], "34": [6462, 6465]}, "VaultSafetyMode._updateFlows": {"39": [8290, 8323], "40": [8362, 8396], "41": [8424, 8476], "42": [8490, 8544], "43": [8611, 8689], "44": [8004, 8007]}}, "39": {"ConfigHelpers.getRootSafetyCheck": {"36": [1251, 1331]}}, "40": {}, "41": {}, "8": {"EnumerableSet.remove": {"25": [7952, 8012]}, "EnumerableSet.add": {"35": [7631, 7688]}, "EnumerableSet.contains": {"45": [8196, 8258]}, "EnumerableSet._contains": {"46": [3760, 3791]}, "EnumerableSet._remove": {"47": [3109, 3147], "48": [3221, 3257], "49": [3393, 3410], "50": [3478, 3504], "51": [3519, 3530], "52": [3561, 3573]}, "EnumerableSet._add": {"57": [1751, 1774], "58": [1909, 1949], "59": [1963, 1974], "60": [2005, 2017]}, "EnumerableSet._values": {"61": [5070, 5088]}}, "42": {}, "43": {"FixedPoint.mulDown": {"56": [865, 885]}, "FixedPoint.intPowDown": {"62": [4718, 4748], "63": [4776, 4784], "64": [4798, 4824]}}, "44": {"Flow.updateFlow": {"53": [616, 634], "54": [848, 893], "55": [913, 944]}}, "9": {}, "10": {"GovernableBase.acceptGovernance": {"0": [902, 963], "1": [1017, 1043], "2": [1053, 1081], "3": [1091, 1140]}, "GovernableBase.changeGovernor": {"17": [643, 711], "18": [721, 750], "19": [760, 801]}}, "15": {}, "37": {}, "16": {}, "17": {}, "18": {}, "19": {}, "20": {}, "21": {}, "23": {}, "24": {}, "25": {}, "26": {}, "27": {}, "28": {}, "45": {}, "46": {"StringExtensions.compareStrings": {"37": [382, 394], "38": [414, 465]}}}, "branches": {"12": {"VaultSafetyMode.isRedeemSafe": {"65": [3704, 3714, false]}, "VaultSafetyMode.checkAndPersistRedeem": {"66": [4150, 4161, true], "67": [4280, 4301, false], "68": [4321, 4392, false]}, "VaultSafetyMode.checkAndPersistMint": {"69": [2413, 2467, true], "70": [3041, 3051, true]}, "VaultSafetyMode.isMintSafe": {"71": [2765, 2775, false]}, "VaultSafetyMode.activateOracleGuardian": {"72": [5102, 5130, true], "73": [5346, 5376, true], "74": [5500, 5550, true], "75": [5566, 5618, false], "76": [5848, 5899, true], "77": [5915, 5967, false]}, "VaultSafetyMode._checkFlows": {"78": [6794, 6804, true], "79": [6860, 6870, false], "80": [6874, 6921, false], "81": [7426, 7454, false], "82": [7656, 7674, false]}, "VaultSafetyMode._updateFlows": {"83": [8260, 8270, false], "84": [8562, 8591, false]}}, "39": {}, "40": {}, "41": {}, "8": {"EnumerableSet._remove": {"85": [2439, 2454, false], "86": [2921, 2947, false]}}, "42": {}, "43": {"FixedPoint.intPowDown": {"87": [4686, 4698, false]}}, "44": {"Flow.updateFlow": {"88": [551, 580, true], "89": [584, 600, false], "90": [655, 683, false]}}, "9": {}, "10": {"GovernableBase.acceptGovernance": {"91": [910, 939, true]}, "GovernableBase.changeGovernor": {"92": [651, 685, true]}}, "15": {}, "37": {}, "16": {}, "17": {}, "18": {}, "19": {}, "20": {}, "21": {}, "23": {}, "24": {}, "25": {}, "26": {}, "27": {}, "28": {}, "45": {}, "46": {"StringExtensions.compareStrings": {"93": [332, 366, false]}}}}, "dependencies": ["ConfigHelpers", "ConfigKeys", "DataTypes", "OpenZeppelin/openzeppelin-contracts@4.3.2/EnumerableSet", "Errors", "FixedPoint", "Flow", "Governable", "GovernableBase", "IAssetRegistry", "IBatchVaultPriceOracle", "ICapAuthentication", "IFeeBank", "IFeeHandler", "IGYDToken", "IGovernable", "IGyroConfig", "IMotherboard", "IPAMM", "IReserve", "IReserveManager", "ISafetyCheck", "IVaultRegistry", "LogExpMath", "StringExtensions"], "offset": [973, 8722], "type": "contract", "abi": [{"inputs": [{"internalType": "address", "name": "governor", "type": "address"}, {"internalType": "uint256", "name": "_safetyBlocksAutomatic", "type": "uint256"}, {"internalType": "uint256", "name": "_safetyBlocksGuardian", "type": "uint256"}, {"internalType": "address", "name": "_gyroConfig", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}], "name": "AddedToWhitelist", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChangeRequested", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldGovernor", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "vaultAddress", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "durationOfProtectionInBlocks", "type": "uint256"}, {"indexed": false, "internalType": "bool", "name": "inFlows", "type": "bool"}], "name": "OracleGuardianActivated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}], "name": "RemovedFromWhitelist", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "string", "name": "err", "type": "string"}], "name": "SafetyStatus", "type": "event"}, {"inputs": [], "name": "THRESHOLD_BUFFER", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "acceptGovernance", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "address", "name": "vaultAddress", "type": "address"}, {"internalType": "enum DataTypes.Direction", "name": "direction", "type": "uint8"}], "internalType": "struct DataTypes.GuardedVaults", "name": "vaultToProtect", "type": "tuple"}, {"internalType": "uint256", "name": "blocks", "type": "uint256"}], "name": "activateOracleGuardian", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_addressToAdd", "type": "address"}], "name": "addAddressToWhitelist", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newGovernor", "type": "address"}], "name": "changeGovernor", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "checkAndPersistMint", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "checkAndPersistRedeem", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "getWhitelist", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "governor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "isMintSafe", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "isRedeemSafe", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "pendingGovernor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "persistedFlowData", "outputs": [{"components": [{"internalType": "uint128", "name": "shortFlow", "type": "uint128"}, {"internalType": "uint64", "name": "lastSafetyBlock", "type": "uint64"}, {"internalType": "uint64", "name": "lastSeenBlock", "type": "uint64"}], "internalType": "struct DataTypes.DirectionalFlowData", "name": "inFlow", "type": "tuple"}, {"components": [{"internalType": "uint128", "name": "shortFlow", "type": "uint128"}, {"internalType": "uint64", "name": "lastSafetyBlock", "type": "uint64"}, {"internalType": "uint64", "name": "lastSeenBlock", "type": "uint64"}], "internalType": "struct DataTypes.DirectionalFlowData", "name": "outFlow", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_addressToRemove", "type": "address"}], "name": "removeAddressFromWhitelist", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "safetyBlocksAutomatic", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "safetyBlocksGuardian", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}], "ast": {"absolutePath": "contracts/safety/VaultSafetyMode.sol", "exportedSymbols": {"Address": [5027], "ConfigHelpers": [3986], "ConfigKeys": [5732], "Context": [4730], "DataTypes": [4132], "ERC20": [2028], "EnumerableSet": [2851], "Errors": [1482], "FixedPoint": [4502], "Flow": [4562], "Governable": [2875], "GovernableBase": [5121], "IAsset": [5171], "IAssetRegistry": [1323], "IAuthorizer": [5186], "IBatchVaultPriceOracle": [5683], "ICapAuthentication": [5386], "IERC165": [7066], "IERC20": [4683], "IERC20Metadata": [4708], "IERC721": [5374], "IFeeBank": [5411], "IFeeHandler": [5433], "IFlashLoanRecipient": [5206], "IGYDToken": [5474], "IGovernable": [5158], "IGyroConfig": [2998], "IGyroVault": [3113], "IMotherboard": [5567], "IPAMM": [7139], "IReserve": [5630], "IReserveManager": [5655], "ISafetyCheck": [3149], "ISignaturesValidator": [5224], "ITemporarilyPausable": [5243], "IUSDPriceOracle": [1334], "IVault": [3701], "IVaultRegistry": [3200], "IVaultWeightManager": [7168], "IWETH": [5258], "LogExpMath": [7054], "SafeERC20": [2252], "StringExtensions": [4605], "VaultSafetyMode": [1107], "Vaults": [5167]}, "id": 1108, "license": "LicenseRef-Gyro-1.0", "nodeType": "SourceUnit", "nodes": [{"id": 385, "literals": ["solidity", "^", "0.8", ".4"], "nodeType": "PragmaDirective", "src": "174:23:12"}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 386, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 2253, "src": "199:65:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol", "id": 387, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 2029, "src": "265:55:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol", "id": 388, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 2852, "src": "321:65:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/auth/Governable.sol", "file": "./../auth/Governable.sol", "id": 389, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 2876, "src": "388:34:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/DataTypes.sol", "file": "../../libraries/DataTypes.sol", "id": 390, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 4133, "src": "423:39:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 391, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 2999, "src": "463:42:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IAssetRegistry.sol", "file": "../../interfaces/IAssetRegistry.sol", "id": 392, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 1324, "src": "506:45:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroVault.sol", "file": "../../interfaces/IGyroVault.sol", "id": 393, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 3114, "src": "552:41:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/balancer/IVault.sol", "file": "../../interfaces/balancer/IVault.sol", "id": 394, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 3702, "src": "594:46:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Errors.sol", "file": "../../libraries/Errors.sol", "id": 395, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 1483, "src": "641:36:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/ISafetyCheck.sol", "file": "../../interfaces/ISafetyCheck.sol", "id": 396, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 3150, "src": "678:43:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IVaultRegistry.sol", "file": "../../interfaces/IVaultRegistry.sol", "id": 397, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 3201, "src": "722:45:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/FixedPoint.sol", "file": "../../libraries/FixedPoint.sol", "id": 398, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 4503, "src": "768:40:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Flow.sol", "file": "../../libraries/Flow.sol", "id": 399, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 4563, "src": "809:34:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Errors.sol", "file": "../../libraries/Errors.sol", "id": 400, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 1483, "src": "844:36:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/StringExtensions.sol", "file": "../../libraries/StringExtensions.sol", "id": 401, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 4606, "src": "881:46:12", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ConfigHelpers.sol", "file": "../../libraries/ConfigHelpers.sol", "id": 402, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1108, "sourceUnit": 3987, "src": "928:43:12", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 403, "name": "ISafetyCheck", "nodeType": "IdentifierPath", "referencedDeclaration": 3149, "src": "1001:12:12"}, "id": 404, "nodeType": "InheritanceSpecifier", "src": "1001:12:12"}, {"baseName": {"id": 405, "name": "Governable", "nodeType": "IdentifierPath", "referencedDeclaration": 2875, "src": "1015:10:12"}, "id": 406, "nodeType": "InheritanceSpecifier", "src": "1015:10:12"}], "canonicalName": "VaultSafetyMode", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 1107, "linearizedBaseContracts": [1107, 2875, 5121, 5158, 3149], "name": "VaultSafetyMode", "nameLocation": "982:15:12", "nodeType": "ContractDefinition", "nodes": [{"id": 409, "libraryName": {"id": 407, "name": "FixedPoint", "nodeType": "IdentifierPath", "referencedDeclaration": 4502, "src": "1038:10:12"}, "nodeType": "UsingForDirective", "src": "1032:29:12", "typeName": {"id": 408, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1053:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 412, "libraryName": {"id": 410, "name": "StringExtensions", "nodeType": "IdentifierPath", "referencedDeclaration": 4605, "src": "1072:16:12"}, "nodeType": "UsingForDirective", "src": "1066:34:12", "typeName": {"id": 411, "name": "string", "nodeType": "ElementaryTypeName", "src": "1093:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}}, {"id": 416, "libraryName": {"id": 413, "name": "EnumerableSet", "nodeType": "IdentifierPath", "referencedDeclaration": 2851, "src": "1111:13:12"}, "nodeType": "UsingForDirective", "src": "1105:49:12", "typeName": {"id": 415, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 414, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 2564, "src": "1129:24:12"}, "referencedDeclaration": 2564, "src": "1129:24:12", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$2564_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 420, "libraryName": {"id": 417, "name": "ConfigHelpers", "nodeType": "IdentifierPath", "referencedDeclaration": 3986, "src": "1165:13:12"}, "nodeType": "UsingForDirective", "src": "1159:36:12", "typeName": {"id": 419, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 418, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 2998, "src": "1183:11:12"}, "referencedDeclaration": 2998, "src": "1183:11:12", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2998", "typeString": "contract IGyroConfig"}}}, {"constant": false, "id": 423, "mutability": "mutable", "name": "whitelist", "nameLocation": "1235:9:12", "nodeType": "VariableDeclaration", "scope": 1107, "src": "1201:43:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$2564_storage", "typeString": "struct EnumerableSet.AddressSet"}, "typeName": {"id": 422, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 421, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 2564, "src": "1201:24:12"}, "referencedDeclaration": 2564, "src": "1201:24:12", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$2564_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}, "visibility": "internal"}, {"anonymous": false, "documentation": {"id": 424, "nodeType": "StructuredDocumentation", "src": "1251:45:12", "text": "@notice Emitted when entering safety mode"}, "id": 428, "name": "SafetyStatus", "nameLocation": "1307:12:12", "nodeType": "EventDefinition", "parameters": {"id": 427, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 426, "indexed": false, "mutability": "mutable", "name": "err", "nameLocation": "1327:3:12", "nodeType": "VariableDeclaration", "scope": 428, "src": "1320:10:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 425, "name": "string", "nodeType": "ElementaryTypeName", "src": "1320:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1319:12:12"}, "src": "1301:31:12"}, {"anonymous": false, "documentation": {"id": 429, "nodeType": "StructuredDocumentation", "src": "1338:63:12", "text": "@notice Emitted when a whitelisted address protects a vault"}, "id": 437, "name": "OracleGuardianActivated", "nameLocation": "1412:23:12", "nodeType": "EventDefinition", "parameters": {"id": 436, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 431, "indexed": false, "mutability": "mutable", "name": "vaultAddress", "nameLocation": "1453:12:12", "nodeType": "VariableDeclaration", "scope": 437, "src": "1445:20:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 430, "name": "address", "nodeType": "ElementaryTypeName", "src": "1445:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 433, "indexed": false, "mutability": "mutable", "name": "durationOfProtectionInBlocks", "nameLocation": "1483:28:12", "nodeType": "VariableDeclaration", "scope": 437, "src": "1475:36:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 432, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1475:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 435, "indexed": false, "mutability": "mutable", "name": "inFlows", "nameLocation": "1526:7:12", "nodeType": "VariableDeclaration", "scope": 437, "src": "1521:12:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 434, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1521:4:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1435:104:12"}, "src": "1406:134:12"}, {"anonymous": false, "id": 441, "name": "AddedToWhitelist", "nameLocation": "1552:16:12", "nodeType": "EventDefinition", "parameters": {"id": 440, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 439, "indexed": true, "mutability": "mutable", "name": "account", "nameLocation": "1585:7:12", "nodeType": "VariableDeclaration", "scope": 441, "src": "1569:23:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 438, "name": "address", "nodeType": "ElementaryTypeName", "src": "1569:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1568:25:12"}, "src": "1546:48:12"}, {"anonymous": false, "id": 445, "name": "RemovedFromWhitelist", "nameLocation": "1605:20:12", "nodeType": "EventDefinition", "parameters": {"id": 444, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 443, "indexed": true, "mutability": "mutable", "name": "account", "nameLocation": "1642:7:12", "nodeType": "VariableDeclaration", "scope": 445, "src": "1626:23:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 442, "name": "address", "nodeType": "ElementaryTypeName", "src": "1626:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1625:25:12"}, "src": "1599:52:12"}, {"canonicalName": "VaultSafetyMode.FlowResult", "id": 450, "members": [{"constant": false, "id": 447, "mutability": "mutable", "name": "newFlow", "nameLocation": "1693:7:12", "nodeType": "VariableDeclaration", "scope": 450, "src": "1685:15:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 446, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1685:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 449, "mutability": "mutable", "name": "safetyModeActivated", "nameLocation": "1715:19:12", "nodeType": "VariableDeclaration", "scope": 450, "src": "1710:24:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 448, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1710:4:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "FlowResult", "nameLocation": "1664:10:12", "nodeType": "StructDefinition", "scope": 1107, "src": "1657:84:12", "visibility": "public"}, {"constant": false, "functionSelector": "25aeb092", "id": 455, "mutability": "mutable", "name": "persistedFlowData", "nameLocation": "1793:17:12", "nodeType": "VariableDeclaration", "scope": 1107, "src": "1747:63:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$4045_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData)"}, "typeName": {"id": 454, "keyType": {"id": 451, "name": "address", "nodeType": "ElementaryTypeName", "src": "1755:7:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1747:38:12", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$4045_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData)"}, "valueType": {"id": 453, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 452, "name": "DataTypes.FlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 4045, "src": "1766:18:12"}, "referencedDeclaration": 4045, "src": "1766:18:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "44bbdb55", "id": 458, "mutability": "immutable", "name": "gyroConfig", "nameLocation": "1846:10:12", "nodeType": "VariableDeclaration", "scope": 1107, "src": "1817:39:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2998", "typeString": "contract IGyroConfig"}, "typeName": {"id": 457, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 456, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 2998, "src": "1817:11:12"}, "referencedDeclaration": 2998, "src": "1817:11:12", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2998", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"constant": false, "functionSelector": "c9e959bf", "id": 460, "mutability": "immutable", "name": "safetyBlocksAutomatic", "nameLocation": "1888:21:12", "nodeType": "VariableDeclaration", "scope": 1107, "src": "1863:46:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 459, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1863:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "a036c284", "id": 462, "mutability": "immutable", "name": "safetyBlocksGuardian", "nameLocation": "1940:20:12", "nodeType": "VariableDeclaration", "scope": 1107, "src": "1915:45:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 461, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1915:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": true, "functionSelector": "0bdf8d22", "id": 465, "mutability": "constant", "name": "THRESHOLD_BUFFER", "nameLocation": "1991:16:12", "nodeType": "VariableDeclaration", "scope": 1107, "src": "1967:47:12", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 463, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1967:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "38653137", "id": 464, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2010:4:12", "typeDescriptions": {"typeIdentifier": "t_rational_800000000000000000_by_1", "typeString": "int_const 800000000000000000"}, "value": "8e17"}, "visibility": "public"}, {"body": {"id": 493, "nodeType": "Block", "src": "2194:164:12", "statements": [{"expression": {"id": 481, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 479, "name": "safetyBlocksAutomatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 460, "src": "2204:21:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 480, "name": "_safetyBlocksAutomatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 469, "src": "2228:22:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2204:46:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 482, "nodeType": "ExpressionStatement", "src": "2204:46:12"}, {"expression": {"id": 485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 483, "name": "safetyBlocksGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "2260:20:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 484, "name": "_safetyBlocksGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 471, "src": "2283:21:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2260:44:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 486, "nodeType": "ExpressionStatement", "src": "2260:44:12"}, {"expression": {"id": 491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 487, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 458, "src": "2314:10:12", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2998", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 489, "name": "_gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 473, "src": "2339:11:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 488, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2998, "src": "2327:11:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$2998_$", "typeString": "type(contract IGyroConfig)"}}, "id": 490, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2327:24:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2998", "typeString": "contract IGyroConfig"}}, "src": "2314:37:12", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2998", "typeString": "contract IGyroConfig"}}, "id": 492, "nodeType": "ExpressionStatement", "src": "2314:37:12"}]}, "id": 494, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 476, "name": "governor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 467, "src": "2184:8:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 477, "kind": "baseConstructorSpecifier", "modifierName": {"id": 475, "name": "Governable", "nodeType": "IdentifierPath", "referencedDeclaration": 2875, "src": "2173:10:12"}, "nodeType": "ModifierInvocation", "src": "2173:20:12"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 474, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 467, "mutability": "mutable", "name": "governor", "nameLocation": "2050:8:12", "nodeType": "VariableDeclaration", "scope": 494, "src": "2042:16:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 466, "name": "address", "nodeType": "ElementaryTypeName", "src": "2042:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 469, "mutability": "mutable", "name": "_safetyBlocksAutomatic", "nameLocation": "2076:22:12", "nodeType": "VariableDeclaration", "scope": 494, "src": "2068:30:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 468, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2068:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 471, "mutability": "mutable", "name": "_safetyBlocksGuardian", "nameLocation": "2116:21:12", "nodeType": "VariableDeclaration", "scope": 494, "src": "2108:29:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 470, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2108:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 473, "mutability": "mutable", "name": "_gyroConfig", "nameLocation": "2155:11:12", "nodeType": "VariableDeclaration", "scope": 494, "src": "2147:19:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 472, "name": "address", "nodeType": "ElementaryTypeName", "src": "2147:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2032:140:12"}, "returnParameters": {"id": 478, "nodeType": "ParameterList", "parameters": [], "src": "2194:0:12"}, "scope": 1107, "src": "2021:337:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 511, "nodeType": "Block", "src": "2395:114:12", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 505, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 497, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2413:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 498, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2413:10:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 501, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 458, "src": "2435:10:12", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2998", "typeString": "contract IGyroConfig"}}, "id": 502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRootSafetyCheck", "nodeType": "MemberAccess", "referencedDeclaration": 3754, "src": "2435:29:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$2998_$returns$_t_contract$_ISafetyCheck_$3149_$bound_to$_t_contract$_IGyroConfig_$2998_$", "typeString": "function (contract IGyroConfig) view returns (contract ISafetyCheck)"}}, "id": 503, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2435:31:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$3149", "typeString": "contract ISafetyCheck"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ISafetyCheck_$3149", "typeString": "contract ISafetyCheck"}], "id": 500, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2427:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 499, "name": "address", "nodeType": "ElementaryTypeName", "src": "2427:7:12", "typeDescriptions": {}}}, "id": 504, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2427:40:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2413:54:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 506, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "2469:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "NOT_AUTHORIZED", "nodeType": "MemberAccess", "referencedDeclaration": 1391, "src": "2469:21:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 496, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2405:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 508, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2405:86:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 509, "nodeType": "ExpressionStatement", "src": "2405:86:12"}, {"id": 510, "nodeType": "PlaceholderStatement", "src": "2501:1:12"}]}, "id": 512, "name": "rootSafetyCheckOnly", "nameLocation": "2373:19:12", "nodeType": "ModifierDefinition", "parameters": {"id": 495, "nodeType": "ParameterList", "parameters": [], "src": "2392:2:12"}, "src": "2364:145:12", "virtual": false, "visibility": "internal"}, {"baseFunctions": [3125], "body": {"id": 538, "nodeType": "Block", "src": "2751:145:12", "statements": [{"condition": {"expression": {"id": 521, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 516, "src": "2765:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 522, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 4117, "src": "2765:10:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 536, "nodeType": "Block", "src": "2836:54:12", "statements": [{"expression": {"id": 534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 531, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 519, "src": "2850:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 532, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "2856:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 1394, "src": "2856:23:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2850:29:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 535, "nodeType": "ExpressionStatement", "src": "2850:29:12"}]}, "id": 537, "nodeType": "IfStatement", "src": "2761:129:12", "trueBody": {"id": 530, "nodeType": "Block", "src": "2777:53:12", "statements": [{"expression": {"id": 528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 523, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 519, "src": "2792:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, null], "id": 524, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "2791:7:12", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$__$", "typeString": "tuple(string memory,)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 526, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 516, "src": "2813:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "id": 525, "name": "_checkFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1000, "src": "2801:11:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Order_$4118_memory_ptr_$returns$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view returns (string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 527, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2801:18:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "src": "2791:28:12", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 529, "nodeType": "ExpressionStatement", "src": "2791:28:12"}]}}]}, "documentation": {"id": 513, "nodeType": "StructuredDocumentation", "src": "2515:139:12", "text": "@notice Checks whether a mint operation is safe\n @return err empty string if it is safe, otherwise the reason why it is not safe"}, "functionSelector": "e2cc8679", "id": 539, "implemented": true, "kind": "function", "modifiers": [], "name": "isMintSafe", "nameLocation": "2668:10:12", "nodeType": "FunctionDefinition", "parameters": {"id": 517, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 516, "mutability": "mutable", "name": "order", "nameLocation": "2702:5:12", "nodeType": "VariableDeclaration", "scope": 539, "src": "2679:28:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 515, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 514, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 4118, "src": "2679:15:12"}, "referencedDeclaration": 4118, "src": "2679:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2678:30:12"}, "returnParameters": {"id": 520, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 519, "mutability": "mutable", "name": "err", "nameLocation": "2746:3:12", "nodeType": "VariableDeclaration", "scope": 539, "src": "2732:17:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 518, "name": "string", "nodeType": "ElementaryTypeName", "src": "2732:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2731:19:12"}, "scope": 1107, "src": "2659:237:12", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [3148], "body": {"id": 595, "nodeType": "Block", "src": "3023:420:12", "statements": [{"expression": {"arguments": [{"expression": {"id": 549, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 543, "src": "3041:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 550, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 4117, "src": "3041:10:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 551, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "3053:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 552, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 1394, "src": "3053:23:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 548, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3033:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 553, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3033:44:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 554, "nodeType": "ExpressionStatement", "src": "3033:44:12"}, {"assignments": [556, 560], "declarations": [{"constant": false, "id": 556, "mutability": "mutable", "name": "err", "nameLocation": "3102:3:12", "nodeType": "VariableDeclaration", "scope": 595, "src": "3088:17:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 555, "name": "string", "nodeType": "ElementaryTypeName", "src": "3088:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 560, "mutability": "mutable", "name": "result", "nameLocation": "3127:6:12", "nodeType": "VariableDeclaration", "scope": 595, "src": "3107:26:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}, "typeName": {"baseType": {"id": 558, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 557, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 450, "src": "3107:10:12"}, "referencedDeclaration": 450, "src": "3107:10:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 559, "nodeType": "ArrayTypeName", "src": "3107:12:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}, "visibility": "internal"}], "id": 564, "initialValue": {"arguments": [{"id": 562, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 543, "src": "3149:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "id": 561, "name": "_checkFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1000, "src": "3137:11:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Order_$4118_memory_ptr_$returns$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view returns (string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 563, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3137:18:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "3087:68:12"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 567, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 556, "src": "3176:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 566, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3170:5:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 565, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3170:5:12", "typeDescriptions": {}}}, "id": 568, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3170:10:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 569, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3170:17:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 570, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3190:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3170:21:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 589, "nodeType": "IfStatement", "src": "3166:233:12", "trueBody": {"id": 588, "nodeType": "Block", "src": "3193:206:12", "statements": [{"condition": {"arguments": [{"expression": {"id": 574, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "3230:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED", "nodeType": "MemberAccess", "referencedDeclaration": 1466, "src": "3230:51:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "expression": {"id": 572, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 556, "src": "3211:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "compareStrings", "nodeType": "MemberAccess", "referencedDeclaration": 4604, "src": "3211:18:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$bound_to$_t_string_memory_ptr_$", "typeString": "function (string memory,string memory) pure returns (bool)"}}, "id": 576, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3211:71:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 586, "nodeType": "Block", "src": "3345:44:12", "statements": [{"expression": {"arguments": [{"id": 583, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 556, "src": "3370:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 582, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "3363:6:12", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 584, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3363:11:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 585, "nodeType": "ExpressionStatement", "src": "3363:11:12"}]}, "id": 587, "nodeType": "IfStatement", "src": "3207:182:12", "trueBody": {"id": 581, "nodeType": "Block", "src": "3284:55:12", "statements": [{"eventCall": {"arguments": [{"id": 578, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 556, "src": "3320:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 577, "name": "SafetyStatus", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "3307:12:12", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory)"}}, "id": 579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3307:17:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 580, "nodeType": "EmitStatement", "src": "3302:22:12"}]}}]}}, {"expression": {"arguments": [{"id": 591, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 543, "src": "3422:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, {"id": 592, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 560, "src": "3429:6:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}, {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}], "id": 590, "name": "_updateFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1106, "src": "3409:12:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$4118_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$returns$__$", "typeString": "function (struct DataTypes.Order memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 593, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3409:27:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 594, "nodeType": "ExpressionStatement", "src": "3409:27:12"}]}, "documentation": {"id": 540, "nodeType": "StructuredDocumentation", "src": "2902:28:12", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "d625436c", "id": 596, "implemented": true, "kind": "function", "modifiers": [{"id": 546, "kind": "modifierInvocation", "modifierName": {"id": 545, "name": "rootSafetyCheckOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 512, "src": "3003:19:12"}, "nodeType": "ModifierInvocation", "src": "3003:19:12"}], "name": "checkAndPersistMint", "nameLocation": "2944:19:12", "nodeType": "FunctionDefinition", "parameters": {"id": 544, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 543, "mutability": "mutable", "name": "order", "nameLocation": "2987:5:12", "nodeType": "VariableDeclaration", "scope": 596, "src": "2964:28:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 542, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 541, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 4118, "src": "2964:15:12"}, "referencedDeclaration": 4118, "src": "2964:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2963:30:12"}, "returnParameters": {"id": 547, "nodeType": "ParameterList", "parameters": [], "src": "3023:0:12"}, "scope": 1107, "src": "2935:508:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [3134], "body": {"id": 623, "nodeType": "Block", "src": "3689:146:12", "statements": [{"condition": {"id": 607, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "3703:11:12", "subExpression": {"expression": {"id": 605, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 600, "src": "3704:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 606, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 4117, "src": "3704:10:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 621, "nodeType": "Block", "src": "3775:54:12", "statements": [{"expression": {"id": 619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 616, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 603, "src": "3789:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 617, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "3795:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 1394, "src": "3795:23:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "3789:29:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 620, "nodeType": "ExpressionStatement", "src": "3789:29:12"}]}, "id": 622, "nodeType": "IfStatement", "src": "3699:130:12", "trueBody": {"id": 615, "nodeType": "Block", "src": "3716:53:12", "statements": [{"expression": {"id": 613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 608, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 603, "src": "3731:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, null], "id": 609, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3730:7:12", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$__$", "typeString": "tuple(string memory,)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 611, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 600, "src": "3752:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "id": 610, "name": "_checkFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1000, "src": "3740:11:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Order_$4118_memory_ptr_$returns$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view returns (string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 612, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3740:18:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "src": "3730:28:12", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 614, "nodeType": "ExpressionStatement", "src": "3730:28:12"}]}}]}, "documentation": {"id": 597, "nodeType": "StructuredDocumentation", "src": "3449:141:12", "text": "@notice Checks whether a redeem operation is safe\n @return err empty string if it is safe, otherwise the reason why it is not safe"}, "functionSelector": "6382b296", "id": 624, "implemented": true, "kind": "function", "modifiers": [], "name": "isRedeemSafe", "nameLocation": "3604:12:12", "nodeType": "FunctionDefinition", "parameters": {"id": 601, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 600, "mutability": "mutable", "name": "order", "nameLocation": "3640:5:12", "nodeType": "VariableDeclaration", "scope": 624, "src": "3617:28:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 599, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 598, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 4118, "src": "3617:15:12"}, "referencedDeclaration": 4118, "src": "3617:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "3616:30:12"}, "returnParameters": {"id": 604, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 603, "mutability": "mutable", "name": "err", "nameLocation": "3684:3:12", "nodeType": "VariableDeclaration", "scope": 624, "src": "3670:17:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 602, "name": "string", "nodeType": "ElementaryTypeName", "src": "3670:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "3669:19:12"}, "scope": 1107, "src": "3595:240:12", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [3141], "body": {"id": 681, "nodeType": "Block", "src": "4132:421:12", "statements": [{"expression": {"arguments": [{"id": 636, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "4150:11:12", "subExpression": {"expression": {"id": 634, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 628, "src": "4151:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 635, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 4117, "src": "4151:10:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 637, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "4163:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 1394, "src": "4163:23:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 633, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4142:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 639, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4142:45:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 640, "nodeType": "ExpressionStatement", "src": "4142:45:12"}, {"assignments": [642, 646], "declarations": [{"constant": false, "id": 642, "mutability": "mutable", "name": "err", "nameLocation": "4212:3:12", "nodeType": "VariableDeclaration", "scope": 681, "src": "4198:17:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 641, "name": "string", "nodeType": "ElementaryTypeName", "src": "4198:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 646, "mutability": "mutable", "name": "result", "nameLocation": "4237:6:12", "nodeType": "VariableDeclaration", "scope": 681, "src": "4217:26:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}, "typeName": {"baseType": {"id": 644, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 643, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 450, "src": "4217:10:12"}, "referencedDeclaration": 450, "src": "4217:10:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 645, "nodeType": "ArrayTypeName", "src": "4217:12:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}, "visibility": "internal"}], "id": 650, "initialValue": {"arguments": [{"id": 648, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 628, "src": "4259:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "id": 647, "name": "_checkFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1000, "src": "4247:11:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Order_$4118_memory_ptr_$returns$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view returns (string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4247:18:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "4197:68:12"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 657, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 653, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "4286:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 652, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4280:5:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 651, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4280:5:12", "typeDescriptions": {}}}, "id": 654, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4280:10:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4280:17:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 656, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4300:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4280:21:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 675, "nodeType": "IfStatement", "src": "4276:233:12", "trueBody": {"id": 674, "nodeType": "Block", "src": "4303:206:12", "statements": [{"condition": {"arguments": [{"expression": {"id": 660, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "4340:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED", "nodeType": "MemberAccess", "referencedDeclaration": 1466, "src": "4340:51:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "expression": {"id": 658, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "4321:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 659, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "compareStrings", "nodeType": "MemberAccess", "referencedDeclaration": 4604, "src": "4321:18:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$bound_to$_t_string_memory_ptr_$", "typeString": "function (string memory,string memory) pure returns (bool)"}}, "id": 662, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4321:71:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 672, "nodeType": "Block", "src": "4455:44:12", "statements": [{"expression": {"arguments": [{"id": 669, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "4480:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 668, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "4473:6:12", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4473:11:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 671, "nodeType": "ExpressionStatement", "src": "4473:11:12"}]}, "id": 673, "nodeType": "IfStatement", "src": "4317:182:12", "trueBody": {"id": 667, "nodeType": "Block", "src": "4394:55:12", "statements": [{"eventCall": {"arguments": [{"id": 664, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 642, "src": "4430:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 663, "name": "SafetyStatus", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 428, "src": "4417:12:12", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory)"}}, "id": 665, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4417:17:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 666, "nodeType": "EmitStatement", "src": "4412:22:12"}]}}]}}, {"expression": {"arguments": [{"id": 677, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 628, "src": "4532:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, {"id": 678, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 646, "src": "4539:6:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}, {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}], "id": 676, "name": "_updateFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1106, "src": "4519:12:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$4118_memory_ptr_$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$returns$__$", "typeString": "function (struct DataTypes.Order memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 679, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4519:27:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 680, "nodeType": "ExpressionStatement", "src": "4519:27:12"}]}, "documentation": {"id": 625, "nodeType": "StructuredDocumentation", "src": "3841:196:12", "text": "@notice Checks whether a redeem operation is safe\n This is only called when an actual redeem is performed\n The implementation should store any relevant information for the redeem"}, "functionSelector": "a0763820", "id": 682, "implemented": true, "kind": "function", "modifiers": [{"id": 631, "kind": "modifierInvocation", "modifierName": {"id": 630, "name": "rootSafetyCheckOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 512, "src": "4112:19:12"}, "nodeType": "ModifierInvocation", "src": "4112:19:12"}], "name": "checkAndPersistRedeem", "nameLocation": "4051:21:12", "nodeType": "FunctionDefinition", "parameters": {"id": 629, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 628, "mutability": "mutable", "name": "order", "nameLocation": "4096:5:12", "nodeType": "VariableDeclaration", "scope": 682, "src": "4073:28:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 627, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 626, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 4118, "src": "4073:15:12"}, "referencedDeclaration": 4118, "src": "4073:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "4072:30:12"}, "returnParameters": {"id": 632, "nodeType": "ParameterList", "parameters": [], "src": "4132:0:12"}, "scope": 1107, "src": "4042:511:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 692, "nodeType": "Block", "src": "4624:42:12", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 688, "name": "whitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "4641:9:12", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$2564_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 689, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "values", "nodeType": "MemberAccess", "referencedDeclaration": 2717, "src": "4641:16:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2564_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$2564_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}}, "id": 690, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4641:18:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "functionReturnParameters": 687, "id": 691, "nodeType": "Return", "src": "4634:25:12"}]}, "functionSelector": "d01f63f5", "id": 693, "implemented": true, "kind": "function", "modifiers": [], "name": "getWhitelist", "nameLocation": "4568:12:12", "nodeType": "FunctionDefinition", "parameters": {"id": 683, "nodeType": "ParameterList", "parameters": [], "src": "4580:2:12"}, "returnParameters": {"id": 687, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 686, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 693, "src": "4606:16:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 684, "name": "address", "nodeType": "ElementaryTypeName", "src": "4606:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 685, "nodeType": "ArrayTypeName", "src": "4606:9:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "4605:18:12"}, "scope": 1107, "src": "4559:107:12", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 710, "nodeType": "Block", "src": "4750:91:12", "statements": [{"expression": {"arguments": [{"id": 703, "name": "_addressToAdd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 695, "src": "4774:13:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 700, "name": "whitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "4760:9:12", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$2564_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 702, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 2591, "src": "4760:13:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2564_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2564_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 704, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4760:28:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 705, "nodeType": "ExpressionStatement", "src": "4760:28:12"}, {"eventCall": {"arguments": [{"id": 707, "name": "_addressToAdd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 695, "src": "4820:13:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 706, "name": "AddedToWhitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 441, "src": "4803:16:12", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4803:31:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 709, "nodeType": "EmitStatement", "src": "4798:36:12"}]}, "functionSelector": "7b9417c8", "id": 711, "implemented": true, "kind": "function", "modifiers": [{"id": 698, "kind": "modifierInvocation", "modifierName": {"id": 697, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 5052, "src": "4735:14:12"}, "nodeType": "ModifierInvocation", "src": "4735:14:12"}], "name": "addAddressToWhitelist", "nameLocation": "4681:21:12", "nodeType": "FunctionDefinition", "parameters": {"id": 696, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 695, "mutability": "mutable", "name": "_addressToAdd", "nameLocation": "4711:13:12", "nodeType": "VariableDeclaration", "scope": 711, "src": "4703:21:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 694, "name": "address", "nodeType": "ElementaryTypeName", "src": "4703:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4702:23:12"}, "returnParameters": {"id": 699, "nodeType": "ParameterList", "parameters": [], "src": "4750:0:12"}, "scope": 1107, "src": "4672:169:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 728, "nodeType": "Block", "src": "4933:104:12", "statements": [{"expression": {"arguments": [{"id": 721, "name": "_addressToRemove", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 713, "src": "4960:16:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 718, "name": "whitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "4943:9:12", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$2564_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 720, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "remove", "nodeType": "MemberAccess", "referencedDeclaration": 2618, "src": "4943:16:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2564_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2564_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 722, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4943:34:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 723, "nodeType": "ExpressionStatement", "src": "4943:34:12"}, {"eventCall": {"arguments": [{"id": 725, "name": "_addressToRemove", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 713, "src": "5013:16:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 724, "name": "RemovedFromWhitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 445, "src": "4992:20:12", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 726, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4992:38:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 727, "nodeType": "EmitStatement", "src": "4987:43:12"}]}, "functionSelector": "286dd3f5", "id": 729, "implemented": true, "kind": "function", "modifiers": [{"id": 716, "kind": "modifierInvocation", "modifierName": {"id": 715, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 5052, "src": "4918:14:12"}, "nodeType": "ModifierInvocation", "src": "4918:14:12"}], "name": "removeAddressFromWhitelist", "nameLocation": "4856:26:12", "nodeType": "FunctionDefinition", "parameters": {"id": 714, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 713, "mutability": "mutable", "name": "_addressToRemove", "nameLocation": "4891:16:12", "nodeType": "VariableDeclaration", "scope": 729, "src": "4883:24:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 712, "name": "address", "nodeType": "ElementaryTypeName", "src": "4883:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4882:26:12"}, "returnParameters": {"id": 717, "nodeType": "ParameterList", "parameters": [], "src": "4933:0:12"}, "scope": 1107, "src": "4847:190:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 743, "nodeType": "Block", "src": "5084:88:12", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 736, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 731, "src": "5121:8:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 734, "name": "whitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 423, "src": "5102:9:12", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$2564_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 735, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contains", "nodeType": "MemberAccess", "referencedDeclaration": 2645, "src": "5102:18:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2564_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2564_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}}, "id": 737, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5102:28:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 738, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "5132:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 739, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "NOT_AUTHORIZED", "nodeType": "MemberAccess", "referencedDeclaration": 1391, "src": "5132:21:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 733, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5094:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 740, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5094:60:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 741, "nodeType": "ExpressionStatement", "src": "5094:60:12"}, {"id": 742, "nodeType": "PlaceholderStatement", "src": "5164:1:12"}]}, "id": 744, "name": "isWhitelisted", "nameLocation": "5052:13:12", "nodeType": "ModifierDefinition", "parameters": {"id": 732, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 731, "mutability": "mutable", "name": "_address", "nameLocation": "5074:8:12", "nodeType": "VariableDeclaration", "scope": 744, "src": "5066:16:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 730, "name": "address", "nodeType": "ElementaryTypeName", "src": "5066:7:12", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5065:18:12"}, "src": "5043:129:12", "virtual": false, "visibility": "internal"}, {"body": {"id": 836, "nodeType": "Block", "src": "5328:851:12", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 757, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 749, "src": "5346:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 758, "name": "safetyBlocksGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "5356:20:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5346:30:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 760, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "5378:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 761, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ORACLE_GUARDIAN_TIME_LIMIT", "nodeType": "MemberAccess", "referencedDeclaration": 1469, "src": "5378:33:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 756, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5338:7:12", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 762, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5338:74:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 763, "nodeType": "ExpressionStatement", "src": "5338:74:12"}, {"assignments": [765], "declarations": [{"constant": false, "id": 765, "mutability": "mutable", "name": "targetBlock", "nameLocation": "5430:11:12", "nodeType": "VariableDeclaration", "scope": 836, "src": "5423:18:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}, "typeName": {"id": 764, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "5423:6:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "visibility": "internal"}], "id": 773, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 771, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 768, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "5451:5:12", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 769, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "5451:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 770, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 749, "src": "5466:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5451:21:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 767, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5444:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint64_$", "typeString": "type(uint64)"}, "typeName": {"id": 766, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "5444:6:12", "typeDescriptions": {}}}, "id": 772, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5444:29:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "VariableDeclarationStatement", "src": "5423:50:12"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 786, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}, "id": 779, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 774, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "5500:14:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 775, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "direction", "nodeType": "MemberAccess", "referencedDeclaration": 4054, "src": "5500:24:12", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 776, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4132, "src": "5528:9:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$4132_$", "typeString": "type(library DataTypes)"}}, "id": 777, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 4049, "src": "5528:19:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$4049_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 778, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "In", "nodeType": "MemberAccess", "referencedDeclaration": 4046, "src": "5528:22:12", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}}, "src": "5500:50:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}, "id": 785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 780, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "5566:14:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 781, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "direction", "nodeType": "MemberAccess", "referencedDeclaration": 4054, "src": "5566:24:12", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 782, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4132, "src": "5594:9:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$4132_$", "typeString": "type(library DataTypes)"}}, "id": 783, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 4049, "src": "5594:19:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$4049_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 784, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Both", "nodeType": "MemberAccess", "referencedDeclaration": 4048, "src": "5594:24:12", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}}, "src": "5566:52:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5500:118:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 804, "nodeType": "IfStatement", "src": "5483:339:12", "trueBody": {"id": 803, "nodeType": "Block", "src": "5629:193:12", "statements": [{"expression": {"id": 794, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"expression": {"baseExpression": {"id": 787, "name": "persistedFlowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "5643:17:12", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$4045_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData storage ref)"}}, "id": 790, "indexExpression": {"expression": {"id": 788, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "5661:14:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 789, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultAddress", "nodeType": "MemberAccess", "referencedDeclaration": 4051, "src": "5661:27:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5643:46:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage", "typeString": "struct DataTypes.FlowData storage ref"}}, "id": 791, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "inFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4041, "src": "5643:53:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "id": 792, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastSafetyBlock", "nodeType": "MemberAccess", "referencedDeclaration": 4035, "src": "5643:69:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 793, "name": "targetBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "5715:11:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "5643:83:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 795, "nodeType": "ExpressionStatement", "src": "5643:83:12"}, {"eventCall": {"arguments": [{"expression": {"id": 797, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "5769:14:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 798, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultAddress", "nodeType": "MemberAccess", "referencedDeclaration": 4051, "src": "5769:27:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 799, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 749, "src": "5798:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 800, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5806:4:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 796, "name": "OracleGuardianActivated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 437, "src": "5745:23:12", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$", "typeString": "function (address,uint256,bool)"}}, "id": 801, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5745:66:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 802, "nodeType": "EmitStatement", "src": "5740:71:12"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 817, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}, "id": 810, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 805, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "5848:14:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 806, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "direction", "nodeType": "MemberAccess", "referencedDeclaration": 4054, "src": "5848:24:12", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 807, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4132, "src": "5876:9:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$4132_$", "typeString": "type(library DataTypes)"}}, "id": 808, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 4049, "src": "5876:19:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$4049_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 809, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Out", "nodeType": "MemberAccess", "referencedDeclaration": 4047, "src": "5876:23:12", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}}, "src": "5848:51:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}, "id": 816, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 811, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "5915:14:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 812, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "direction", "nodeType": "MemberAccess", "referencedDeclaration": 4054, "src": "5915:24:12", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 813, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4132, "src": "5943:9:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$4132_$", "typeString": "type(library DataTypes)"}}, "id": 814, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 4049, "src": "5943:19:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$4049_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 815, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Both", "nodeType": "MemberAccess", "referencedDeclaration": 4048, "src": "5943:24:12", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$4049", "typeString": "enum DataTypes.Direction"}}, "src": "5915:52:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5848:119:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 835, "nodeType": "IfStatement", "src": "5831:342:12", "trueBody": {"id": 834, "nodeType": "Block", "src": "5978:195:12", "statements": [{"expression": {"id": 825, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"expression": {"baseExpression": {"id": 818, "name": "persistedFlowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "5992:17:12", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$4045_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData storage ref)"}}, "id": 821, "indexExpression": {"expression": {"id": 819, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "6010:14:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 820, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultAddress", "nodeType": "MemberAccess", "referencedDeclaration": 4051, "src": "6010:27:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5992:46:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage", "typeString": "struct DataTypes.FlowData storage ref"}}, "id": 822, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "outFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4044, "src": "5992:54:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "id": 823, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastSafetyBlock", "nodeType": "MemberAccess", "referencedDeclaration": 4035, "src": "5992:70:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 824, "name": "targetBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 765, "src": "6065:11:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "5992:84:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 826, "nodeType": "ExpressionStatement", "src": "5992:84:12"}, {"eventCall": {"arguments": [{"expression": {"id": 828, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "6119:14:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 829, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultAddress", "nodeType": "MemberAccess", "referencedDeclaration": 4051, "src": "6119:27:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 830, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 749, "src": "6148:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 831, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6156:5:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 827, "name": "OracleGuardianActivated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 437, "src": "6095:23:12", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$", "typeString": "function (address,uint256,bool)"}}, "id": 832, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6095:67:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 833, "nodeType": "EmitStatement", "src": "6090:72:12"}]}}]}, "functionSelector": "fc283b86", "id": 837, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"expression": {"id": 752, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5312:3:12", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 753, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5312:10:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 754, "kind": "modifierInvocation", "modifierName": {"id": 751, "name": "isWhitelisted", "nodeType": "IdentifierPath", "referencedDeclaration": 744, "src": "5298:13:12"}, "nodeType": "ModifierInvocation", "src": "5298:25:12"}], "name": "activateOracleGuardian", "nameLocation": "5187:22:12", "nodeType": "FunctionDefinition", "parameters": {"id": 750, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 747, "mutability": "mutable", "name": "vaultToProtect", "nameLocation": "5241:14:12", "nodeType": "VariableDeclaration", "scope": 837, "src": "5210:45:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_memory_ptr", "typeString": "struct DataTypes.GuardedVaults"}, "typeName": {"id": 746, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 745, "name": "DataTypes.GuardedVaults", "nodeType": "IdentifierPath", "referencedDeclaration": 4055, "src": "5210:23:12"}, "referencedDeclaration": 4055, "src": "5210:23:12", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$4055_storage_ptr", "typeString": "struct DataTypes.GuardedVaults"}}, "visibility": "internal"}, {"constant": false, "id": 749, "mutability": "mutable", "name": "blocks", "nameLocation": "5265:6:12", "nodeType": "VariableDeclaration", "scope": 837, "src": "5257:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 748, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5257:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5209:63:12"}, "returnParameters": {"id": 755, "nodeType": "ParameterList", "parameters": [], "src": "5328:0:12"}, "scope": 1107, "src": "5178:1001:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 999, "nodeType": "Block", "src": "6334:1514:12", "statements": [{"expression": {"id": 858, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 849, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 847, "src": "6344:6:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"expression": {"id": 854, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "6370:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 855, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 4115, "src": "6370:22:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$4124_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 856, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6370:29:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 853, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "6353:16:12", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct VaultSafetyMode.FlowResult memory[] memory)"}, "typeName": {"baseType": {"id": 851, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 850, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 450, "src": "6357:10:12"}, "referencedDeclaration": 450, "src": "6357:10:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 852, "nodeType": "ArrayTypeName", "src": "6357:12:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}}, "id": 857, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6353:47:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "src": "6344:56:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "id": 859, "nodeType": "ExpressionStatement", "src": "6344:56:12"}, {"body": {"id": 997, "nodeType": "Block", "src": "6467:1375:12", "statements": [{"assignments": [872], "declarations": [{"constant": false, "id": 872, "mutability": "mutable", "name": "amount", "nameLocation": "6489:6:12", "nodeType": "VariableDeclaration", "scope": 997, "src": "6481:14:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 871, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6481:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 878, "initialValue": {"expression": {"baseExpression": {"expression": {"id": 873, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "6498:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 874, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 4115, "src": "6498:22:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$4124_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 876, "indexExpression": {"id": 875, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 861, "src": "6521:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6498:25:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultWithAmount_$4124_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory"}}, "id": 877, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 4123, "src": "6498:32:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6481:49:12"}, {"assignments": [883], "declarations": [{"constant": false, "id": 883, "mutability": "mutable", "name": "vault", "nameLocation": "6571:5:12", "nodeType": "VariableDeclaration", "scope": 997, "src": "6544:32:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_memory_ptr", "typeString": "struct DataTypes.VaultInfo"}, "typeName": {"id": 882, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 881, "name": "DataTypes.VaultInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 4077, "src": "6544:19:12"}, "referencedDeclaration": 4077, "src": "6544:19:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_storage_ptr", "typeString": "struct DataTypes.VaultInfo"}}, "visibility": "internal"}], "id": 889, "initialValue": {"expression": {"baseExpression": {"expression": {"id": 884, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "6579:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 885, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 4115, "src": "6579:22:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$4124_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 887, "indexExpression": {"id": 886, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 861, "src": "6602:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6579:25:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultWithAmount_$4124_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory"}}, "id": 888, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultInfo", "nodeType": "MemberAccess", "referencedDeclaration": 4121, "src": "6579:35:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6544:70:12"}, {"assignments": [894], "declarations": [{"constant": false, "id": 894, "mutability": "mutable", "name": "flowData", "nameLocation": "6655:8:12", "nodeType": "VariableDeclaration", "scope": 997, "src": "6628:35:12", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData"}, "typeName": {"id": 893, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 892, "name": "DataTypes.FlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 4045, "src": "6628:18:12"}, "referencedDeclaration": 4045, "src": "6628:18:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData"}}, "visibility": "internal"}], "id": 899, "initialValue": {"baseExpression": {"id": 895, "name": "persistedFlowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "6666:17:12", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$4045_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData storage ref)"}}, "id": 898, "indexExpression": {"expression": {"id": 896, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 883, "src": "6684:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "id": 897, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vault", "nodeType": "MemberAccess", "referencedDeclaration": 4057, "src": "6684:11:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6666:30:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage", "typeString": "struct DataTypes.FlowData storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "6628:68:12"}, {"assignments": [904], "declarations": [{"constant": false, "id": 904, "mutability": "mutable", "name": "directionalData", "nameLocation": "6747:15:12", "nodeType": "VariableDeclaration", "scope": 997, "src": "6710:52:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData"}, "typeName": {"id": 903, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 902, "name": "DataTypes.DirectionalFlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 4038, "src": "6710:29:12"}, "referencedDeclaration": 4038, "src": "6710:29:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData"}}, "visibility": "internal"}], "id": 905, "nodeType": "VariableDeclarationStatement", "src": "6710:52:12"}, {"expression": {"id": 914, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 906, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 904, "src": "6776:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"expression": {"id": 907, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "6794:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 908, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 4117, "src": "6794:10:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 911, "name": "flowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 894, "src": "6825:8:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData storage pointer"}}, "id": 912, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "outFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4044, "src": "6825:16:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "id": 913, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6794:47:12", "trueExpression": {"expression": {"id": 909, "name": "flowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 894, "src": "6807:8:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData storage pointer"}}, "id": 910, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "inFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4041, "src": "6807:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "src": "6776:65:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "id": 915, "nodeType": "ExpressionStatement", "src": "6776:65:12"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 924, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 918, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 916, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 872, "src": "6860:6:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 917, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6869:1:12", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6860:10:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 923, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 919, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "6874:5:12", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 920, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "6874:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"id": 921, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 904, "src": "6890:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "id": 922, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastSafetyBlock", "nodeType": "MemberAccess", "referencedDeclaration": 4035, "src": "6890:31:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "6874:47:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6860:61:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 932, "nodeType": "IfStatement", "src": "6856:157:12", "trueBody": {"id": 931, "nodeType": "Block", "src": "6923:90:12", "statements": [{"expression": {"id": 928, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 925, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 843, "src": "6941:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 926, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "6947:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 927, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SAFETY_MODE_ACTIVATED", "nodeType": "MemberAccess", "referencedDeclaration": 1478, "src": "6947:28:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "6941:34:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 929, "nodeType": "ExpressionStatement", "src": "6941:34:12"}, {"id": 930, "nodeType": "Break", "src": "6993:5:12"}]}}, {"assignments": [934], "declarations": [{"constant": false, "id": 934, "mutability": "mutable", "name": "shortFlowThreshold", "nameLocation": "7035:18:12", "nodeType": "VariableDeclaration", "scope": 997, "src": "7027:26:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 933, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7027:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 938, "initialValue": {"expression": {"expression": {"id": 935, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 883, "src": "7056:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "id": 936, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "persistedMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 4066, "src": "7056:23:12", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$4031_memory_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata memory"}}, "id": 937, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "shortFlowThreshold", "nodeType": "MemberAccess", "referencedDeclaration": 4030, "src": "7056:42:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7027:71:12"}, {"assignments": [940], "declarations": [{"constant": false, "id": 940, "mutability": "mutable", "name": "newFlow", "nameLocation": "7120:7:12", "nodeType": "VariableDeclaration", "scope": 997, "src": "7112:15:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 939, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7112:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 959, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 958, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"expression": {"id": 941, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "7130:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 942, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 4115, "src": "7130:22:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$4124_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 944, "indexExpression": {"id": 943, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 861, "src": "7153:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7130:25:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultWithAmount_$4124_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory"}}, "id": 945, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 4123, "src": "7130:32:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [{"expression": {"id": 948, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 904, "src": "7218:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "id": 949, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "shortFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4033, "src": "7218:25:12", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"expression": {"id": 950, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7265:5:12", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 951, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "7265:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 952, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 904, "src": "7299:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "id": 953, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastSeenBlock", "nodeType": "MemberAccess", "referencedDeclaration": 4037, "src": "7299:29:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, {"expression": {"expression": {"id": 954, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 883, "src": "7350:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "id": 955, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "persistedMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 4066, "src": "7350:23:12", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$4031_memory_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata memory"}}, "id": 956, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "shortFlowMemory", "nodeType": "MemberAccess", "referencedDeclaration": 4028, "src": "7350:39:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint64", "typeString": "uint64"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 946, "name": "Flow", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4562, "src": "7181:4:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Flow_$4562_$", "typeString": "type(library Flow)"}}, "id": 947, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "updateFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4561, "src": "7181:15:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 957, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7181:226:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7130:277:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7112:295:12"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 962, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 960, "name": "newFlow", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 940, "src": "7426:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 961, "name": "shortFlowThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 934, "src": "7436:18:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7426:28:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 970, "nodeType": "IfStatement", "src": "7422:122:12", "trueBody": {"id": 969, "nodeType": "Block", "src": "7456:88:12", "statements": [{"expression": {"id": 966, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 963, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 843, "src": "7474:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 964, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "7480:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 965, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "VAULT_FLOW_TOO_HIGH", "nodeType": "MemberAccess", "referencedDeclaration": 1463, "src": "7480:26:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "7474:32:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 967, "nodeType": "ExpressionStatement", "src": "7474:32:12"}, {"id": 968, "nodeType": "Break", "src": "7524:5:12"}]}}, {"assignments": [972], "declarations": [{"constant": false, "id": 972, "mutability": "mutable", "name": "activateSafetyMode", "nameLocation": "7563:18:12", "nodeType": "VariableDeclaration", "scope": 997, "src": "7558:23:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 971, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7558:4:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 979, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 978, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 973, "name": "newFlow", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 940, "src": "7584:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"arguments": [{"id": 976, "name": "shortFlowThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 934, "src": "7619:18:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 974, "name": "THRESHOLD_BUFFER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 465, "src": "7594:16:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 975, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 4186, "src": "7594:24:12", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7594:44:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7584:54:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "7558:80:12"}, {"condition": {"id": 980, "name": "activateSafetyMode", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 972, "src": "7656:18:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 987, "nodeType": "IfStatement", "src": "7652:114:12", "trueBody": {"id": 986, "nodeType": "Block", "src": "7676:90:12", "statements": [{"expression": {"id": 984, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 981, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 843, "src": "7694:3:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 982, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1482, "src": "7700:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1482_$", "typeString": "type(library Errors)"}}, "id": 983, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED", "nodeType": "MemberAccess", "referencedDeclaration": 1466, "src": "7700:51:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "7694:57:12", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 985, "nodeType": "ExpressionStatement", "src": "7694:57:12"}]}}, {"expression": {"id": 995, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 988, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 847, "src": "7780:6:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "id": 990, "indexExpression": {"id": 989, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 861, "src": "7787:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7780:9:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 992, "name": "newFlow", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 940, "src": "7803:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 993, "name": "activateSafetyMode", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 972, "src": "7812:18:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 991, "name": "FlowResult", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 450, "src": "7792:10:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_FlowResult_$450_storage_ptr_$", "typeString": "type(struct VaultSafetyMode.FlowResult storage pointer)"}}, "id": 994, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7792:39:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "src": "7780:51:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "id": 996, "nodeType": "ExpressionStatement", "src": "7780:51:12"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 867, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 863, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 861, "src": "6427:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"expression": {"id": 864, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 840, "src": "6431:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 865, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 4115, "src": "6431:22:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$4124_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 866, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6431:29:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6427:33:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 998, "initializationExpression": {"assignments": [861], "declarations": [{"constant": false, "id": 861, "mutability": "mutable", "name": "i", "nameLocation": "6424:1:12", "nodeType": "VariableDeclaration", "scope": 998, "src": "6416:9:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 860, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6416:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 862, "nodeType": "VariableDeclarationStatement", "src": "6416:9:12"}, "loopExpression": {"expression": {"id": 869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6462:3:12", "subExpression": {"id": 868, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 861, "src": "6462:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 870, "nodeType": "ExpressionStatement", "src": "6462:3:12"}, "nodeType": "ForStatement", "src": "6411:1431:12"}]}, "id": 1000, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkFlows", "nameLocation": "6194:11:12", "nodeType": "FunctionDefinition", "parameters": {"id": 841, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 840, "mutability": "mutable", "name": "order", "nameLocation": "6229:5:12", "nodeType": "VariableDeclaration", "scope": 1000, "src": "6206:28:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 839, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 838, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 4118, "src": "6206:15:12"}, "referencedDeclaration": 4118, "src": "6206:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "6205:30:12"}, "returnParameters": {"id": 848, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 843, "mutability": "mutable", "name": "err", "nameLocation": "6297:3:12", "nodeType": "VariableDeclaration", "scope": 1000, "src": "6283:17:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 842, "name": "string", "nodeType": "ElementaryTypeName", "src": "6283:6:12", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 847, "mutability": "mutable", "name": "result", "nameLocation": "6322:6:12", "nodeType": "VariableDeclaration", "scope": 1000, "src": "6302:26:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}, "typeName": {"baseType": {"id": 845, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 844, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 450, "src": "6302:10:12"}, "referencedDeclaration": 450, "src": "6302:10:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 846, "nodeType": "ArrayTypeName", "src": "6302:12:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}, "visibility": "internal"}], "src": "6282:47:12"}, "scope": 1107, "src": "6185:1663:12", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 1105, "nodeType": "Block", "src": "7943:777:12", "statements": [{"body": {"id": 1103, "nodeType": "Block", "src": "8009:705:12", "statements": [{"assignments": [1025], "declarations": [{"constant": false, "id": 1025, "mutability": "mutable", "name": "vault", "nameLocation": "8050:5:12", "nodeType": "VariableDeclaration", "scope": 1103, "src": "8023:32:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_memory_ptr", "typeString": "struct DataTypes.VaultInfo"}, "typeName": {"id": 1024, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1023, "name": "DataTypes.VaultInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 4077, "src": "8023:19:12"}, "referencedDeclaration": 4077, "src": "8023:19:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_storage_ptr", "typeString": "struct DataTypes.VaultInfo"}}, "visibility": "internal"}], "id": 1031, "initialValue": {"expression": {"baseExpression": {"expression": {"id": 1026, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1003, "src": "8058:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 1027, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 4115, "src": "8058:22:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$4124_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 1029, "indexExpression": {"id": 1028, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1011, "src": "8081:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8058:25:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultWithAmount_$4124_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory"}}, "id": 1030, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultInfo", "nodeType": "MemberAccess", "referencedDeclaration": 4121, "src": "8058:35:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "nodeType": "VariableDeclarationStatement", "src": "8023:70:12"}, {"assignments": [1036], "declarations": [{"constant": false, "id": 1036, "mutability": "mutable", "name": "flowData", "nameLocation": "8134:8:12", "nodeType": "VariableDeclaration", "scope": 1103, "src": "8107:35:12", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData"}, "typeName": {"id": 1035, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1034, "name": "DataTypes.FlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 4045, "src": "8107:18:12"}, "referencedDeclaration": 4045, "src": "8107:18:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData"}}, "visibility": "internal"}], "id": 1041, "initialValue": {"baseExpression": {"id": 1037, "name": "persistedFlowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "8145:17:12", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$4045_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData storage ref)"}}, "id": 1040, "indexExpression": {"expression": {"id": 1038, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1025, "src": "8163:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$4077_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "id": 1039, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vault", "nodeType": "MemberAccess", "referencedDeclaration": 4057, "src": "8163:11:12", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8145:30:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage", "typeString": "struct DataTypes.FlowData storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "8107:68:12"}, {"assignments": [1046], "declarations": [{"constant": false, "id": 1046, "mutability": "mutable", "name": "directionalData", "nameLocation": "8227:15:12", "nodeType": "VariableDeclaration", "scope": 1103, "src": "8189:53:12", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData"}, "typeName": {"id": 1045, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1044, "name": "DataTypes.DirectionalFlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 4038, "src": "8189:29:12"}, "referencedDeclaration": 4038, "src": "8189:29:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData"}}, "visibility": "internal"}], "id": 1047, "nodeType": "VariableDeclarationStatement", "src": "8189:53:12"}, {"condition": {"expression": {"id": 1048, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1003, "src": "8260:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 1049, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 4117, "src": "8260:10:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1061, "nodeType": "Block", "src": "8344:67:12", "statements": [{"expression": {"id": 1059, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1056, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1046, "src": "8362:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 1057, "name": "flowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1036, "src": "8380:8:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData storage pointer"}}, "id": 1058, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "outFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4044, "src": "8380:16:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "src": "8362:34:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 1060, "nodeType": "ExpressionStatement", "src": "8362:34:12"}]}, "id": 1062, "nodeType": "IfStatement", "src": "8256:155:12", "trueBody": {"id": 1055, "nodeType": "Block", "src": "8272:66:12", "statements": [{"expression": {"id": 1053, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1050, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1046, "src": "8290:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 1051, "name": "flowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1036, "src": "8308:8:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$4045_storage_ptr", "typeString": "struct DataTypes.FlowData storage pointer"}}, "id": 1052, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "inFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4041, "src": "8308:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "src": "8290:33:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 1054, "nodeType": "ExpressionStatement", "src": "8290:33:12"}]}}, {"expression": {"id": 1071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1063, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1046, "src": "8424:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 1065, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastSeenBlock", "nodeType": "MemberAccess", "referencedDeclaration": 4037, "src": "8424:29:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 1068, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "8463:5:12", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1069, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "8463:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1067, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8456:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint64_$", "typeString": "type(uint64)"}, "typeName": {"id": 1066, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "8456:6:12", "typeDescriptions": {}}}, "id": 1070, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8456:20:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "8424:52:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 1072, "nodeType": "ExpressionStatement", "src": "8424:52:12"}, {"expression": {"id": 1083, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1073, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1046, "src": "8490:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 1075, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "shortFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4033, "src": "8490:25:12", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"baseExpression": {"id": 1078, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1007, "src": "8526:6:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "id": 1080, "indexExpression": {"id": 1079, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1011, "src": "8533:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8526:9:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "id": 1081, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "newFlow", "nodeType": "MemberAccess", "referencedDeclaration": 447, "src": "8526:17:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1077, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8518:7:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 1076, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "8518:7:12", "typeDescriptions": {}}}, "id": 1082, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8518:26:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "8490:54:12", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 1084, "nodeType": "ExpressionStatement", "src": "8490:54:12"}, {"condition": {"expression": {"baseExpression": {"id": 1085, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1007, "src": "8562:6:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "id": 1087, "indexExpression": {"id": 1086, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1011, "src": "8569:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8562:9:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "id": 1088, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "safetyModeActivated", "nodeType": "MemberAccess", "referencedDeclaration": 449, "src": "8562:29:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1102, "nodeType": "IfStatement", "src": "8558:146:12", "trueBody": {"id": 1101, "nodeType": "Block", "src": "8593:111:12", "statements": [{"expression": {"id": 1099, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1089, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1046, "src": "8611:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$4038_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 1091, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastSafetyBlock", "nodeType": "MemberAccess", "referencedDeclaration": 4035, "src": "8611:31:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1094, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "8652:5:12", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1095, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "8652:12:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 1096, "name": "safetyBlocksAutomatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 460, "src": "8667:21:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8652:36:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1093, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8645:6:12", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint64_$", "typeString": "type(uint64)"}, "typeName": {"id": 1092, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "8645:6:12", "typeDescriptions": {}}}, "id": 1098, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8645:44:12", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "8611:78:12", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 1100, "nodeType": "ExpressionStatement", "src": "8611:78:12"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1017, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1013, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1011, "src": "7969:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"expression": {"id": 1014, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1003, "src": "7973:5:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 1015, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 4115, "src": "7973:22:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$4124_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 1016, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "7973:29:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7969:33:12", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1104, "initializationExpression": {"assignments": [1011], "declarations": [{"constant": false, "id": 1011, "mutability": "mutable", "name": "i", "nameLocation": "7966:1:12", "nodeType": "VariableDeclaration", "scope": 1104, "src": "7958:9:12", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1010, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7958:7:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1012, "nodeType": "VariableDeclarationStatement", "src": "7958:9:12"}, "loopExpression": {"expression": {"id": 1019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "8004:3:12", "subExpression": {"id": 1018, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1011, "src": "8004:1:12", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1020, "nodeType": "ExpressionStatement", "src": "8004:3:12"}, "nodeType": "ForStatement", "src": "7953:761:12"}]}, "id": 1106, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateFlows", "nameLocation": "7863:12:12", "nodeType": "FunctionDefinition", "parameters": {"id": 1008, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1003, "mutability": "mutable", "name": "order", "nameLocation": "7899:5:12", "nodeType": "VariableDeclaration", "scope": 1106, "src": "7876:28:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 1002, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1001, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 4118, "src": "7876:15:12"}, "referencedDeclaration": 4118, "src": "7876:15:12", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$4118_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}, {"constant": false, "id": 1007, "mutability": "mutable", "name": "result", "nameLocation": "7926:6:12", "nodeType": "VariableDeclaration", "scope": 1106, "src": "7906:26:12", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}, "typeName": {"baseType": {"id": 1005, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1004, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 450, "src": "7906:10:12"}, "referencedDeclaration": 450, "src": "7906:10:12", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$450_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 1006, "nodeType": "ArrayTypeName", "src": "7906:12:12", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$450_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}, "visibility": "internal"}], "src": "7875:58:12"}, "returnParameters": {"id": 1009, "nodeType": "ParameterList", "parameters": [], "src": "7943:0:12"}, "scope": 1107, "src": "7854:866:12", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 1108, "src": "973:7749:12", "usedErrors": []}], "src": "174:8549:12"}, "compiler": {"version": "0.8.10+commit.fc410830", "evm_version": "london", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "VaultSafetyMode", "deployedBytecode": "", "deployedSourceMap": "973:7749:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1967:47;;2010:4;1967:47;;;;;160:25:48;;;148:2;133:18;1967:47:12;;;;;;;;325:32:10;;;;;-1:-1:-1;;;;;325:32:10;;;;;;-1:-1:-1;;;;;360:32:48;;;342:51;;330:2;315:18;325:32:10;196:203:48;846:301:10;;;:::i;:::-;;1747:63:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1747:63:12;;;;;-1:-1:-1;;;;;;;;1747:63:12;;;;;;;;;-1:-1:-1;;;1747:63:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4847:190::-;;;;;;:::i;:::-;;:::i;1817:39::-;;;;;3595:240;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4672:169::-;;;;;;:::i;:::-;;:::i;1915:45::-;;;;;4042:511;;;;;;:::i;:::-;;:::i;1863:46::-;;;;;4559:107;;;:::i;:::-;;;;;;;:::i;2935:508::-;;;;;;:::i;:::-;;:::i;2659:237::-;;;;;;:::i;:::-;;:::i;363:39:10:-;;;;;-1:-1:-1;;;;;363:39:10;;;555:253;;;;;;:::i;:::-;;:::i;5178:1001:12:-;;;;;;:::i;:::-;;:::i;846:301:10:-;924:15;;941:21;;;;;;;;;;;;-1:-1:-1;;;941:21:10;;;;;-1:-1:-1;;;;;924:15:10;910:10;:29;902:61;;;;-1:-1:-1;;;902:61:10;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;973:23:10;999:8;;;1028:15;;-1:-1:-1;;;;;;1017:26:10;;;-1:-1:-1;;;;;1028:15:10;;;1017:26;;;;;;;1053:28;;;1096:44;;;999:8;;;;10315:34:48;;;1129:10:10;10380:2:48;10365:18;;10358:43;999:8:10;1096:44;;10250:18:48;1096:44:10;;;;;;;;892:255;846:301::o;4847:190:12:-;467:8:10;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:10;;;;;-1:-1:-1;;;;;467:8:10;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:10;;;;;;;;:::i;:::-;-1:-1:-1;4943:34:12::1;:9;4960:16:::0;4943::::1;:34::i;:::-;-1:-1:-1::0;4992:38:12::1;::::0;-1:-1:-1;;;;;4992:38:12;::::1;::::0;::::1;::::0;;;::::1;4847:190:::0;:::o;3595:240::-;3670:17;3704:5;:10;;;3699:130;;3740:18;3752:5;3740:11;:18::i;:::-;-1:-1:-1;3730:28:12;3595:240;-1:-1:-1;;3595:240:12:o;3699:130::-;-1:-1:-1;3795:23:12;;;;;;;;;;;;-1:-1:-1;;;3795:23:12;;;;3699:130;3595:240;;;:::o;4672:169::-;467:8:10;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:10;;;;;-1:-1:-1;;;;;467:8:10;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:10;;;;;;;;:::i;:::-;-1:-1:-1;4760:28:12::1;:9;4774:13:::0;4760::::1;:28::i;:::-;-1:-1:-1::0;4803:31:12::1;::::0;-1:-1:-1;;;;;4803:31:12;::::1;::::0;::::1;::::0;;;::::1;4672:169:::0;:::o;4042:511::-;2435:31;:10;-1:-1:-1;;;;;2435:29:12;;:31::i;:::-;-1:-1:-1;;;;;2413:54:12;:10;-1:-1:-1;;;;;2413:54:12;;2469:21;;;;;;;;;;;;;-1:-1:-1;;;2469:21:12;;;2405:86;;;;;-1:-1:-1;;;2405:86:12;;;;;;;;:::i;:::-;;4151:5:::1;:10;;;4150:11;4163:23;;;;;;;;;;;;;-1:-1:-1::0;;;4163:23:12::1;;::::0;4142:45:::1;;;;;-1:-1:-1::0;;;4142:45:12::1;;;;;;;;:::i;:::-;;4198:17;4217:26:::0;4247:18:::1;4259:5;4247:11;:18::i;:::-;4280:17:::0;;4197:68;;-1:-1:-1;4197:68:12;-1:-1:-1;4280:21:12;4276:233:::1;;4340:51;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4340:51:12::1;::::0;::::1;::::0;4321:71:::1;::::0;:3;;:18:::1;:71::i;:::-;4317:182;;;4417:17;4430:3;4417:17;;;;;;:::i;:::-;;;;;;;;4317:182;;;4480:3;4473:11;;-1:-1:-1::0;;;4473:11:12::1;;;;;;;;:::i;4317:182::-;4519:27;4532:5;4539:6;4519:12;:27::i;:::-;4132:421;;4042:511:::0;:::o;4559:107::-;4606:16;4641:18;:9;:16;:18::i;:::-;4634:25;;4559:107;:::o;2935:508::-;2435:31;:10;-1:-1:-1;;;;;2435:29:12;;:31::i;:::-;-1:-1:-1;;;;;2413:54:12;:10;-1:-1:-1;;;;;2413:54:12;;2469:21;;;;;;;;;;;;;-1:-1:-1;;;2469:21:12;;;2405:86;;;;;-1:-1:-1;;;2405:86:12;;;;;;;;:::i;:::-;;3041:5:::1;:10;;;3053:23;;;;;;;;;;;;;-1:-1:-1::0;;;3053:23:12::1;;::::0;3033:44:::1;;;;;-1:-1:-1::0;;;3033:44:12::1;;;;;;;;:::i;2659:237::-:0;2732:17;2765:5;:10;;;2761:129;;;2801:18;2813:5;2801:11;:18::i;555:253:10:-;467:8;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:10;;;;;-1:-1:-1;;;;;467:8:10;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:10;;;;;;;;:::i;:::-;-1:-1:-1;687:23:10::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;687:23:10::1;::::0;::::1;::::0;-1:-1:-1;;;;;651:34:10;::::1;643:68;;;;-1:-1:-1::0;;;643:68:10::1;;;;;;;;:::i;:::-;-1:-1:-1::0;721:15:10::1;:29:::0;;-1:-1:-1;;;;;;721:29:10::1;-1:-1:-1::0;;;;;721:29:10;::::1;::::0;;::::1;::::0;;;765:36:::1;::::0;342:51:48;;;765:36:10::1;::::0;330:2:48;315:18;765:36:10::1;196:203:48::0;5178:1001:12;5312:10;5102:28;:9;5312:10;5102:18;:28::i;:::-;5132:21;;;;;;;;;;;;;-1:-1:-1;;;5132:21:12;;;5094:60;;;;;-1:-1:-1;;;5094:60:12;;;;;;;;:::i;:::-;-1:-1:-1;5378:33:12::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;5378:33:12::1;::::0;::::1;::::0;5356:20:::1;5346:30:::0;::::1;;5338:74;;;;-1:-1:-1::0;;;5338:74:12::1;;;;;;;;:::i;:::-;-1:-1:-1::0;5423:18:12::1;5451:21;5466:6:::0;5451:12:::1;:21;:::i;:::-;5423:50:::0;-1:-1:-1;5528:22:12::1;5500:14;:24;;;:50;;;;;;;;:::i;:::-;;:118;;;-1:-1:-1::0;5594:24:12::1;5566:14;:24;;;:52;;;;;;;;:::i;:::-;;5500:118;5483:339;;;5661:27:::0;;-1:-1:-1;;;;;5643:46:12;;::::1;;::::0;;;:17:::1;:46;::::0;;;;;;;;:83;;-1:-1:-1;;;;5643:83:12::1;-1:-1:-1::0;;;;;;;;5643:83:12;::::1;;;::::0;;5769:27;;5745:66;;11023:32:48;;11005:51;;11072:18;;11065:34;;;-1:-1:-1;11115:18:48;;;11108:50;5745:66:12::1;::::0;10993:2:48;10978:18;5745:66:12::1;;;;;;;5483:339;5876:23;5848:14;:24;;;:51;;;;;;;;:::i;:::-;;:119;;;-1:-1:-1::0;5943:24:12::1;5915:14;:24;;;:52;;;;;;;;:::i;:::-;;5848:119;5831:342;;;6010:27:::0;;-1:-1:-1;;;;;5992:46:12;;::::1;;::::0;;;:17:::1;:46;::::0;;;;;;;:54:::1;;:84:::0;;-1:-1:-1;;;;5992:84:12::1;-1:-1:-1::0;;;;;;;;5992:84:12;::::1;;;::::0;;6119:27;;6095:67;;11023:32:48;;11005:51;;11072:18;;;11065:34;;;11115:18;;11108:50;6095:67:12::1;::::0;10993:2:48;10978:18;6095:67:12::1;;;;;;;5831:342;5328:851;5178:1001:::0;;;:::o;7863:156:8:-;7936:4;7959:53;7967:3;-1:-1:-1;;;;;7987:23:8;;7959:7;:53::i;:::-;7952:60;;7863:156;;;;;:::o;6185:1663:12:-;6283:17;6302:26;6370:5;:22;;;:29;-1:-1:-1;;;;;6353:47:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;6353:47:12;;;;;;;;;;;;;;;;6344:56;;6416:9;6411:1431;6431:22;;:29;6427:33;;6411:1431;;;6481:14;6498:5;:22;;;6521:1;6498:25;;;;;;;;:::i;:::-;;;;;;;:32;;;6481:49;;6544:32;6579:5;:22;;;6602:1;6579:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;6684:11;;-1:-1:-1;;;;;6666:30:12;6579:35;6666:30;;;:17;:30;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;6579:35:12;;-1:-1:-1;6666:30:12;6794:5;:10;;;:47;;6825:8;:16;;6794:47;;;6807:8;6794:47;6776:65;;;;;;;;;;-1:-1:-1;;;;;6776:65:12;;;;-1:-1:-1;;;;;;;;6776:65:12;;;;;;;;-1:-1:-1;;;6776:65:12;;;;;;;;;-1:-1:-1;6860:10:12;;;;;:61;;;6890:15;:31;;;-1:-1:-1;;;;;6874:47:12;:12;:47;;6860:61;6856:157;;;6947:28;;;;;;;;;;;;;-1:-1:-1;;;6947:28:12;;;6941:34;;6993:5;;;;;;6856:157;7027:26;7056:5;:23;;;:42;;;7027:71;;7112:15;7181:226;7218:15;:25;;;-1:-1:-1;;;;;7181:226:12;7265:12;7299:15;:29;;;-1:-1:-1;;;;;7181:226:12;7350:5;:23;;;:39;;;7181:15;:226::i;:::-;7130:22;;:25;;7153:1;;7130:25;;;;;;:::i;:::-;;;;;;;:32;;;:277;;;;:::i;:::-;7112:295;;7436:18;7426:7;:28;7422:122;;;7480:26;;;;;;;;;;;;;-1:-1:-1;;;7480:26:12;;;7474:32;;7524:5;;;;;;;;7422:122;7558:23;7594:44;2010:4;7619:18;7594:24;:44::i;:::-;7584:7;:54;7558:80;;7656:18;7652:114;;;7700:51;;;;;;;;;;;;;-1:-1:-1;;;7700:51:12;;;7694:57;;7652:114;7792:39;;;;;;;;7803:7;7792:39;;;;7812:18;7792:39;;;;;7780:6;7787:1;7780:9;;;;;;;;:::i;:::-;;;;;;:51;;;;6467:1375;;;;;;;6462:3;;;;;:::i;:::-;;;;6411:1431;;;;6185:1663;;;:::o;7545:150:8:-;7615:4;7638:50;7643:3;-1:-1:-1;;;;;7663:23:8;;7638:4;:50::i;1152:186:39:-;1271:59;;-1:-1:-1;;;1271:59:39;;1293:36;1271:59;;;160:25:48;1227:12:39;;-1:-1:-1;;;;;1271:21:39;;;;;133:18:48;;1271:59:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;231:241:46:-;312:4;357:1;351:15;338:1;332:15;:34;328:77;;-1:-1:-1;389:5:46;382:12;;328:77;-1:-1:-1;445:19:46;;;;;;;422;;;;;;;;;;:42;;231:241::o;7854:866:12:-;7958:9;7953:761;7973:22;;:29;7969:33;;7953:761;;;8023:32;8058:5;:22;;;8081:1;8058:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;8163:11;;-1:-1:-1;;;;;8145:30:12;8058:35;8145:30;;;:17;:30;;;;;8260:10;;;;8058:35;;-1:-1:-1;8058:35:12;8256:155;;;-1:-1:-1;8308:8:12;8256:155;;;-1:-1:-1;8380:16:12;;;8256:155;8424:52;;-1:-1:-1;;;;;8424:52:12;-1:-1:-1;;;8463:12:12;-1:-1:-1;;;;;8424:52:12;;;;;8526:9;;;;8533:1;;8526:9;;;;;;:::i;:::-;;;;;;;;;;;:17;8490:54;;-1:-1:-1;;8490:54:12;-1:-1:-1;;;;;8490:54:12;;;;;;8562:9;;;;8569:1;;8562:9;;;;;;:::i;:::-;;;;;;;:29;;;8558:146;;;8652:36;8667:21;8652:12;:36;:::i;:::-;8611:78;;-1:-1:-1;;;;;8611:78:12;;;;-1:-1:-1;;;8611:78:12;-1:-1:-1;;;;8611:78:12;;;;;;8558:146;8009:705;;;8004:3;;;;;:::i;:::-;;;;7953:761;;9499:257:8;9562:16;9590:22;9615:19;9623:3;9615:7;:19::i;:::-;9590:44;9499:257;-1:-1:-1;;;9499:257:8:o;8100:165::-;-1:-1:-1;;;;;8233:23:8;;8180:4;3767:19;;;:12;;;:19;;;;;;:24;;8203:55;3671:127;2202:1388;2268:4;2405:19;;;:12;;;:19;;;;;;2439:15;;2435:1149;;2808:21;2832:14;2845:1;2832:10;:14;:::i;:::-;2880:18;;2808:38;;-1:-1:-1;2860:17:8;;2880:22;;2901:1;;2880:22;:::i;:::-;2860:42;;2934:13;2921:9;:26;2917:398;;2967:17;2987:3;:11;;2999:9;2987:22;;;;;;;;:::i;:::-;;;;;;;;;2967:42;;3138:9;3109:3;:11;;3121:13;3109:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3221:23;;;:12;;;:23;;;;;:36;;;2917:398;3393:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3485:3;:12;;:19;3498:5;3485:19;;;;;;;;;;;3478:26;;;3526:4;3519:11;;;;;;;2435:1149;3568:5;3561:12;;;;;360:591:44;528:7;568:12;551:13;:29;:49;;;-1:-1:-1;584:16:44;;551:49;547:357;;;-1:-1:-1;623:11:44;616:18;;547:357;671:12;655:13;:28;651:253;;;699:23;725:28;740:13;725:12;:28;:::i;:::-;699:54;-1:-1:-1;767:25:44;795:39;:11;699:54;795:22;:39::i;:::-;767:67;-1:-1:-1;855:38:44;:11;767:67;855:19;:38::i;:::-;848:45;;;;;;651:253;920:23;;;;;;;;;;;-1:-1:-1;;;920:23:44;;;;913:31;;-1:-1:-1;;;913:31:44;;;;920:23;913:31;;;:::i;360:591::-;;;;;;;:::o;750:142:43:-;812:7;;849:5;853:1;849;:5;:::i;:::-;831:23;-1:-1:-1;872:13:43;364:4;831:23;872:13;:::i;1630:404:8:-;1693:4;3767:19;;;:12;;;:19;;;;;;1709:319;;-1:-1:-1;1751:23:8;;;;;;;;:11;:23;;;;;;;;;;;;;1931:18;;1909:19;;;:12;;;:19;;;;;;:40;;;;1963:11;;1709:319;-1:-1:-1;2012:5:8;2005:12;;4986:109;5042:16;5077:3;:11;;5070:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4986:109;;;:::o;4522:342:43:-;4592:7;364:4;4652:183;4659:7;;4652:183;;4686:7;4692:1;4686:3;:7;:::i;:::-;4697:1;4686:12;4682:81;;;4727:21;4735:6;4743:4;4727:7;:21::i;:::-;4718:30;;4682:81;4776:8;4783:1;4776:8;;:::i;:::-;;;4805:19;4813:4;4819;4805:7;:19::i;:::-;4798:26;;4652:183;;404:131:48;-1:-1:-1;;;;;479:31:48;;469:42;;459:70;;525:1;522;515:12;459:70;404:131;:::o;540:134::-;608:20;;637:31;608:20;637:31;:::i;679:247::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;846:9;833:23;865:31;890:5;865:31;:::i;1289:459::-;1599:3;1584:19;;1612:56;1588:9;1650:6;1020:12;;-1:-1:-1;;;;;1016:53:48;1004:66;;1116:4;1105:16;;;1099:23;-1:-1:-1;;;;;1191:21:48;;;1175:14;;;1168:45;;;;1266:4;1255:16;;;1249:23;1245:32;1229:14;;1222:56;931:353;1612:56;1020:12;;-1:-1:-1;;;;;1016:53:48;1738:2;1723:18;;1004:66;1116:4;1105:16;;1099:23;-1:-1:-1;;;;;1191:21:48;;;1175:14;;;1168:45;1266:4;1255:16;;1249:23;1245:32;1229:14;;;1222:56;1677:65;931:353;1981:127;2042:10;2037:3;2033:20;2030:1;2023:31;2073:4;2070:1;2063:15;2097:4;2094:1;2087:15;2113:253;2185:2;2179:9;2227:4;2215:17;;-1:-1:-1;;;;;2247:34:48;;2283:22;;;2244:62;2241:88;;;2309:18;;:::i;:::-;2345:2;2338:22;2113:253;:::o;2371:257::-;2443:4;2437:11;;;2475:17;;-1:-1:-1;;;;;2507:34:48;;2543:22;;;2504:62;2501:88;;;2569:18;;:::i;2633:255::-;2705:2;2699:9;2747:6;2735:19;;-1:-1:-1;;;;;2769:34:48;;2805:22;;;2766:62;2763:88;;;2831:18;;:::i;2893:275::-;2964:2;2958:9;3029:2;3010:13;;-1:-1:-1;;3006:27:48;2994:40;;-1:-1:-1;;;;;3049:34:48;;3085:22;;;3046:62;3043:88;;;3111:18;;:::i;:::-;3147:2;3140:22;2893:275;;-1:-1:-1;2893:275:48:o;3173:198::-;3248:4;-1:-1:-1;;;;;3273:6:48;3270:30;3267:56;;;3303:18;;:::i;:::-;-1:-1:-1;3348:1:48;3344:14;3360:4;3340:25;;3173:198::o;3376:156::-;3442:20;;3502:4;3491:16;;3481:27;;3471:55;;3522:1;3519;3512:12;3537:619;3606:5;3654:4;3642:9;3637:3;3633:19;3629:30;3626:50;;;3672:1;3669;3662:12;3626:50;3705:2;3699:9;3747:4;3739:6;3735:17;3818:6;3806:10;3803:22;-1:-1:-1;;;;;3770:10:48;3767:34;3764:62;3761:88;;;3829:18;;:::i;:::-;3869:10;3865:2;3858:22;;3898:6;3889:15;;3941:9;3928:23;3920:6;3913:39;4013:2;4002:9;3998:18;3985:32;3980:2;3972:6;3968:15;3961:57;4079:2;4068:9;4064:18;4051:32;4046:2;4038:6;4034:15;4027:57;4145:2;4134:9;4130:18;4117:32;4112:2;4104:6;4100:15;4093:57;;3537:619;;;;:::o;4161:160::-;4226:20;;4282:13;;4275:21;4265:32;;4255:60;;4311:1;4308;4301:12;4326:1153;4391:5;4444:3;4437:4;4429:6;4425:17;4421:27;4411:55;;4462:1;4459;4452:12;4411:55;4498:6;4485:20;4524:4;4548:75;4564:58;4619:2;4564:58;:::i;:::-;4548:75;:::i;:::-;4657:15;;;4719:4;4762:11;;;4750:24;;4746:33;;;4688:12;;;;4645:3;4791:15;;;4788:35;;;4819:1;4816;4809:12;4788:35;4855:2;4847:6;4843:15;4867:583;4883:6;4878:3;4875:15;4867:583;;;4959:2;4953:3;4948;4944:13;4940:22;4937:112;;;5003:1;5032:2;5028;5021:14;4937:112;5075:22;;:::i;:::-;5138:3;5125:17;5155:33;5180:7;5155:33;:::i;:::-;5201:22;;5259:29;5275:12;;;5259:29;:::i;:::-;5243:14;;;5236:53;5312:2;5363:12;;;5350:26;5334:14;;;5327:50;5390:18;;5428:12;;;;4900;;4867:583;;;-1:-1:-1;5468:5:48;;4326:1153;-1:-1:-1;;;;;;;4326:1153:48:o;5484:2707::-;5566:6;5619:2;5607:9;5598:7;5594:23;5590:32;5587:52;;;5635:1;5632;5625:12;5587:52;-1:-1:-1;;;;;5716:2:48;5704:9;5691:23;5688:31;5685:51;;;5732:1;5729;5722:12;5685:51;5807:4;5793:9;5780:23;5769:9;5765:39;5756:7;5752:53;5748:64;5745:84;;;5825:1;5822;5815:12;5745:84;5851:22;;:::i;:::-;5943:2;5929:9;5916:23;5905:9;5901:39;5888:53;5885:61;5882:81;;;5959:1;5956;5949:12;5882:81;6055:23;;6040:39;;6027:53;;5982:99;6112:4;6104:13;;6100:27;-1:-1:-1;6090:55:48;;6141:1;6138;6131:12;6090:55;6165:89;6181:72;6249:2;6236:16;6181:72;:::i;6165:89::-;6300:16;;6288:29;;;6342:2;6333:12;;;;6276:3;6376:1;6372:24;6364:33;;6360:42;6357:55;-1:-1:-1;6354:75:48;;;6425:1;6422;6415:12;6354:75;6457:2;6453;6449:11;6469:1565;6532:2;6525;6512:16;6509:1;6505:24;6501:2;6497:33;6493:42;6488:3;6485:51;6469:1565;;;6616:2;6610:3;6597:17;6594:25;6591:45;;;6632:1;6629;6622:12;6591:45;6667:17;;6659:26;;-1:-1:-1;;6762:4:48;6739:16;;;6735:25;;6731:36;6728:56;;;6780:1;6777;6770:12;6728:56;6812:22;;:::i;:::-;6880:2;6874;6870;6866:11;6853:25;6850:33;6847:53;;;6896:1;6893;6886:12;6847:53;6952:2;6948;6944:11;6931:25;6927:2;6923:34;7004:6;6999:2;6994;6985:7;6981:16;6977:25;6973:38;6970:58;;;7024:1;7021;7014:12;6970:58;7056:22;;:::i;:::-;7041:37;;7107:31;7134:2;7130;7126:11;7107:31;:::i;:::-;7098:7;7091:48;7177:31;7202:4;7198:2;7194:13;7177:31;:::i;:::-;7172:2;7163:7;7159:16;7152:57;7249:31;7276:2;7272;7268:11;7249:31;:::i;:::-;7242:4;7233:7;7229:18;7222:59;7340:3;7336:2;7332:12;7319:26;7314:2;7305:7;7301:16;7294:52;7385:63;7440:7;7434:3;7430:2;7426:12;7385:63;:::i;:::-;7379:3;7370:7;7366:17;7359:90;7509:3;7505:2;7501:12;7488:26;7482:3;7473:7;7469:17;7462:53;7576:3;7572:2;7568:12;7555:26;7548:4;7539:7;7535:18;7528:54;7643:3;7639:2;7635:12;7622:26;7615:4;7606:7;7602:18;7595:54;7699:2;7689:6;7685:2;7681:15;7668:29;7665:37;7662:57;;;7715:1;7712;7705:12;7662:57;7758:97;7847:7;7842:2;7831:6;7827:2;7823:15;7810:29;7806:2;7802:38;7798:47;7758:97;:::i;:::-;7752:3;7739:17;;7732:124;-1:-1:-1;7869:24:48;;;7952:4;7944:13;;;;7931:27;7926:2;7913:16;;;7906:53;;;;7972:20;;;8012:12;;;;6554;6469:1565;;;-1:-1:-1;8043:20:48;;-1:-1:-1;8095:65:48;;-1:-1:-1;8130:23:48;;8115:39;;8156:2;8111:48;8095:65;:::i;:::-;8090:2;8079:14;;8072:89;8083:5;5484:2707;-1:-1:-1;;;;5484:2707:48:o;8196:597::-;8308:4;8337:2;8366;8355:9;8348:21;8398:6;8392:13;8441:6;8436:2;8425:9;8421:18;8414:34;8466:1;8476:140;8490:6;8487:1;8484:13;8476:140;;;8585:14;;;8581:23;;8575:30;8551:17;;;8570:2;8547:26;8540:66;8505:10;;8476:140;;;8634:6;8631:1;8628:13;8625:91;;;8704:1;8699:2;8690:6;8679:9;8675:22;8671:31;8664:42;8625:91;-1:-1:-1;8777:2:48;8756:15;-1:-1:-1;;8752:29:48;8737:45;;;;8784:2;8733:54;;8196:597;-1:-1:-1;;;8196:597:48:o;8798:658::-;8969:2;9021:21;;;9091:13;;8994:18;;;9113:22;;;8940:4;;8969:2;9192:15;;;;9166:2;9151:18;;;8940:4;9235:195;9249:6;9246:1;9243:13;9235:195;;;9314:13;;-1:-1:-1;;;;;9310:39:48;9298:52;;9405:15;;;;9370:12;;;;9346:1;9264:9;9235:195;;;-1:-1:-1;9447:3:48;;8798:658;-1:-1:-1;;;;;;8798:658:48:o;9461:637::-;9560:6;9568;9612:9;9603:7;9599:23;9642:2;9638;9634:11;9631:31;;;9658:1;9655;9648:12;9631:31;9682:4;9678:2;9674:13;9671:33;;;9700:1;9697;9690:12;9671:33;;9726:22;;:::i;:::-;9785:9;9772:23;9804:33;9829:7;9804:33;:::i;:::-;9846:22;;9920:2;9905:18;;9892:32;9955:1;9943:14;;9933:42;;9971:1;9968;9961:12;9933:42;10002:2;9991:14;;9984:31;9995:5;10086:4;10071:20;;;;10058:34;;-1:-1:-1;;;9461:637:48:o;10412:127::-;10473:10;10468:3;10464:20;10461:1;10454:31;10504:4;10501:1;10494:15;10528:4;10525:1;10518:15;10544:128;10584:3;10615:1;10611:6;10608:1;10605:13;10602:39;;;10621:18;;:::i;:::-;-1:-1:-1;10657:9:48;;10544:128::o;10677:127::-;10738:10;10733:3;10729:20;10726:1;10719:31;10769:4;10766:1;10759:15;10793:4;10790:1;10783:15;11169:127;11230:10;11225:3;11221:20;11218:1;11211:31;11261:4;11258:1;11251:15;11285:4;11282:1;11275:15;11301:135;11340:3;-1:-1:-1;;11361:17:48;;11358:43;;;11381:18;;:::i;:::-;-1:-1:-1;11428:1:48;11417:13;;11301:135::o;11623:251::-;11693:6;11746:2;11734:9;11725:7;11721:23;11717:32;11714:52;;;11762:1;11759;11752:12;11714:52;11794:9;11788:16;11813:31;11838:5;11813:31;:::i;11879:125::-;11919:4;11947:1;11944;11941:8;11938:34;;;11952:18;;:::i;:::-;-1:-1:-1;11989:9:48;;11879:125::o;12009:127::-;12070:10;12065:3;12061:20;12058:1;12051:31;12101:4;12098:1;12091:15;12125:4;12122:1;12115:15;12141:168;12181:7;12247:1;12243;12239:6;12235:14;12232:1;12229:21;12224:1;12217:9;12210:17;12206:45;12203:71;;;12254:18;;:::i;:::-;-1:-1:-1;12294:9:48;;12141:168::o;12314:127::-;12375:10;12370:3;12366:20;12363:1;12356:31;12406:4;12403:1;12396:15;12430:4;12427:1;12420:15;12446:120;12486:1;12512;12502:35;;12517:18;;:::i;:::-;-1:-1:-1;12551:9:48;;12446:120::o;12571:112::-;12603:1;12629;12619:35;;12634:18;;:::i;:::-;-1:-1:-1;12668:9:48;;12571:112::o", "language": "Solidity", "natspec": {"methods": {"isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a mint operation is safe", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a redeem operation is safe", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a redeem operation is safe This is only called when an actual redeem is performed The implementation should store any relevant information for the redeem"}, "pendingGovernor()": {"notice": "Returns the pending governor"}, "governor()": {"notice": "Returns the current governor"}, "acceptGovernance()": {"notice": "Called by the pending governor to approve the change"}, "checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a mint operation is safe and reverts otherwise This is only called when an actual mint is performed The implementation should store any relevant information for the mint"}, "changeGovernor(address)": {"notice": "Changes the governor can only be called by the current governor"}}, "events": {"GovernorChangeRequested(address)": {"notice": "Emmited when the governor is change is requested"}, "GovernorChanged(address,address)": {"notice": "Emmited when the governor is changed"}, "OracleGuardianActivated(address,uint256,bool)": {"notice": "Emitted when a whitelisted address protects a vault"}, "SafetyStatus(string)": {"notice": "Emitted when entering safety mode"}}, "kind": "dev", "version": 1}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA036C284 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD625436C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD625436C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xE2CC8679 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xFC283B86 EQ PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA036C284 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xA0763820 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xC9E959BF EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xD01F63F5 EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x286DD3F5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x286DD3F5 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x6382B296 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x7B9417C8 EQ PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBDF8D22 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x25AEB092 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH8 0xB1A2BC2EC500000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x145 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x129 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x342 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP5 DIV DUP3 AND DUP7 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP5 SWAP1 DIV DUP3 AND DUP7 DUP11 ADD MSTORE DUP9 MLOAD SWAP5 DUP6 ADD DUP10 MSTORE PUSH1 0x1 SWAP1 SWAP7 ADD SLOAD SWAP2 DUP3 AND DUP5 MSTORE SWAP5 DUP2 DIV DUP6 AND SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP3 SWAP2 SWAP1 PUSH2 0x129C JUMP JUMPDEST PUSH2 0x165 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x145 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x165 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x11F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH2 0x11F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1750 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x24D PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x145 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP6 SSTORE AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP2 AND DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xDE4B3F61490B74C0ED6237523974FE299126BBBF8A8A7482FD220104C59B0C84 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP PUSH2 0x44C PUSH1 0x2 DUP3 PUSH2 0xA9E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCDD2E9B91A56913D370075169CEFA1602BA36BE5301664F752192BB1709DF757 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x49F JUMPI PUSH2 0x498 DUP3 PUSH2 0xABC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP PUSH2 0x510 PUSH1 0x2 DUP3 PUSH2 0xD72 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA850AE9193F515CBAE8D35E8925BD2BE26627FC91BCE650B8652ED254E9CAB03 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x57A PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x614 DUP4 PUSH2 0xABC JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP4 POP SWAP2 POP ISZERO PUSH2 0x69F JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3631 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x644 SWAP1 DUP4 SWAP1 PUSH2 0xE12 JUMP JUMPDEST ISZERO PUSH2 0x685 JUMPI PUSH32 0x135E6DD29EFA875112189ADD0769ED7F19CD6DB71EEFE10BF040C499F5AAB344 DUP3 PUSH1 0x40 MLOAD PUSH2 0x678 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x69F JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x6A9 DUP4 DUP3 PUSH2 0xE3C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6BA PUSH1 0x2 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x49F JUMPI PUSH2 0x498 DUP3 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x67235BA2E63C748A35B95C4F92A3BBC2A1389938170A5CE6C9ADD5D0B03A314A SWAP1 PUSH1 0x20 ADD PUSH2 0x3F0 JUMP JUMPDEST CALLER PUSH2 0x873 PUSH1 0x2 DUP3 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x1B19 PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP4 GT ISZERO PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x914 DUP4 NUMBER PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x92E JUMPI PUSH2 0x92E PUSH2 0x1828 JUMP JUMPDEST EQ DUP1 PUSH2 0x94F JUMPI POP PUSH1 0x2 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x94D JUMPI PUSH2 0x94D PUSH2 0x1828 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x9D7 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND MUL OR SWAP1 SSTORE DUP7 MLOAD DUP3 MLOAD SWAP4 AND DUP4 MSTORE DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 DUP3 ADD MSTORE PUSH32 0xD3A9973922556AA8A1D3200840E7B0ADC7851CB170484C2C7001999AE794ABC4 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9EF PUSH2 0x1828 JUMP JUMPDEST EQ DUP1 PUSH2 0xA10 JUMPI POP PUSH1 0x2 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA0E JUMPI PUSH2 0xA0E PUSH2 0x1828 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xA98 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND MUL OR SWAP1 SSTORE DUP8 MLOAD DUP2 MLOAD SWAP5 AND DUP5 MSTORE SWAP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0xD3A9973922556AA8A1D3200840E7B0ADC7851CB170484C2C7001999AE794ABC4 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x0 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xADC JUMPI PUSH2 0xADC PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB21 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAFA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB49 JUMPI PUSH2 0xB49 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB6F JUMPI PUSH2 0xB6F PUSH2 0x183E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP4 DUP2 MSTORE SWAP5 DUP6 ADD DUP4 SWAP1 MSTORE SWAP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 POP SWAP1 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0xBC3 JUMPI DUP2 PUSH1 0x1 ADD PUSH2 0xBC5 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD MSTORE SWAP1 POP DUP4 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC1E JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND NUMBER GT ISZERO JUMPDEST ISZERO PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3635 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP7 POP POP POP POP POP PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xC86 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND NUMBER DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x10B7 JUMP JUMPDEST DUP11 MLOAD DUP1 MLOAD DUP10 SWAP1 DUP2 LT PUSH2 0xC9A JUMPI PUSH2 0xC9A PUSH2 0x183E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0xCB0 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF6 PUSH8 0xB1A2BC2EC500000 DUP5 PUSH2 0x1140 JUMP JUMPDEST DUP3 GT SWAP1 POP DUP1 ISZERO PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3631 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP10 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0xD47 JUMPI PUSH2 0xD47 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP POP POP POP POP POP DUP1 DUP1 PUSH2 0xD64 SWAP1 PUSH2 0x1854 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB27 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x524F4F545F5341464554595F434845434B5F4144445245535300000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x186F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE25 JUMPI POP PUSH1 0x0 PUSH2 0xAB6 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 DUP8 ADD MLOAD SWAP2 SWAP4 POP SWAP1 ISZERO PUSH2 0xE9A JUMPI POP DUP1 PUSH2 0xEA0 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL NUMBER PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR DUP2 SSTORE DUP5 MLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xED2 JUMPI PUSH2 0xED2 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MLOAD DUP2 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE DUP5 MLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xF15 JUMPI PUSH2 0xF15 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0xF78 JUMPI PUSH2 0xF50 PUSH32 0x0 NUMBER PUSH2 0x1810 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xF86 SWAP1 PUSH2 0x1854 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF9B DUP4 PUSH2 0x11B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x10AD JUMPI PUSH1 0x0 PUSH2 0xFE8 PUSH1 0x1 DUP4 PUSH2 0x188C JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFFC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x188C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1061 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x101C JUMPI PUSH2 0x101C PUSH2 0x183E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x103F JUMPI PUSH2 0x103F PUSH2 0x183E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1072 JUMPI PUSH2 0x1072 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 EQ DUP1 PUSH2 0x10C5 JUMPI POP DUP5 ISZERO JUMPDEST ISZERO PUSH2 0x10D1 JUMPI POP DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x1108 JUMPI PUSH1 0x0 PUSH2 0x10E5 DUP5 DUP7 PUSH2 0x188C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10F3 DUP5 DUP4 PUSH2 0x120C JUMP JUMPDEST SWAP1 POP PUSH2 0x10FF DUP8 DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH2 0x387 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x114D DUP4 DUP6 PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1138 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x18EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x11A8 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xAB6 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x11EC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 JUMPDEST DUP3 ISZERO PUSH2 0xAB3 JUMPI PUSH2 0x1229 PUSH1 0x2 DUP5 PUSH2 0x1902 JUMP JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x123E JUMPI PUSH2 0x123B DUP2 DUP6 PUSH2 0x1140 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1249 PUSH1 0x2 DUP5 PUSH2 0x18EE JUMP JUMPDEST SWAP3 POP PUSH2 0x1255 DUP5 DUP6 PUSH2 0x1140 JUMP JUMPDEST SWAP4 POP PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x4BA DUP2 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAB3 DUP2 PUSH2 0x125C JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x12D6 DUP3 DUP6 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xF9B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1343 JUMPI PUSH2 0x1343 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x13B6 JUMPI PUSH2 0x13B6 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x13D7 JUMPI PUSH2 0x13D7 PUSH2 0x130B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x1426 JUMPI PUSH2 0x1426 PUSH2 0x130B JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x148D PUSH2 0x1488 DUP4 PUSH2 0x13BE JUMP JUMPDEST PUSH2 0x138E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 SWAP3 DUP4 MUL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP3 ADD SWAP2 SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x14AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1503 JUMPI DUP2 DUP2 DUP11 SUB SLT ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x14D0 PUSH2 0x1321 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14DB DUP2 PUSH2 0x125C JUMP JUMPDEST DUP2 MSTORE PUSH2 0x14E8 DUP3 DUP8 ADD PUSH2 0x1457 JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0x14B0 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 CALLDATALOAD GT ISZERO PUSH2 0x1538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP4 CALLDATALOAD DUP5 ADD DUP6 SUB SLT ISZERO PUSH2 0x154B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1553 PUSH2 0x1349 JUMP JUMPDEST DUP2 DUP5 CALLDATALOAD DUP6 ADD CALLDATALOAD GT ISZERO PUSH2 0x1564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD DUP5 ADD DUP1 CALLDATALOAD ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x157A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1587 PUSH2 0x1488 DUP3 CALLDATALOAD PUSH2 0x13BE JUMP JUMPDEST DUP2 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 SWAP2 PUSH1 0x5 SHL DUP5 ADD ADD DUP9 LT ISZERO PUSH2 0x15A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD JUMPDEST PUSH1 0x20 DUP5 CALLDATALOAD PUSH1 0x5 SHL DUP6 ADD ADD DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP6 DUP2 CALLDATALOAD GT ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP5 ADD PUSH1 0x1F NOT PUSH1 0x40 DUP3 DUP13 SUB DUP3 ADD SLT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15EA PUSH2 0x1349 JUMP JUMPDEST DUP9 PUSH1 0x20 DUP5 ADD CALLDATALOAD GT ISZERO PUSH2 0x15FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP4 ADD PUSH2 0x180 DUP4 DUP3 DUP16 SUB ADD SLT ISZERO PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161D PUSH2 0x136B JUMP JUMPDEST SWAP3 POP PUSH2 0x162B PUSH1 0x20 DUP3 ADD PUSH2 0x1274 JUMP JUMPDEST DUP4 MSTORE PUSH2 0x1639 PUSH1 0x40 DUP3 ADD PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x164A PUSH1 0x60 DUP3 ADD PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1666 DUP14 PUSH1 0xA0 DUP4 ADD PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x140 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE DUP10 PUSH2 0x180 DUP3 ADD CALLDATALOAD GT ISZERO PUSH2 0x169E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B2 DUP14 PUSH1 0x20 PUSH2 0x180 DUP5 ADD CALLDATALOAD DUP5 ADD ADD PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE POP SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP5 MSTORE SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x15AA JUMP JUMPDEST POP DUP4 MSTORE POP PUSH2 0x16EE SWAP1 POP DUP5 CALLDATALOAD DUP6 ADD PUSH1 0x20 ADD PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1728 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x170C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x173A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1791 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x176C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB PUSH1 0x60 DUP2 SLT ISZERO PUSH2 0x17B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 SLT ISZERO PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C8 PUSH2 0x1349 JUMP JUMPDEST DUP4 CALLDATALOAD PUSH2 0x17D3 DUP2 PUSH2 0x125C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x17E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP5 PUSH1 0x40 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1823 JUMPI PUSH2 0x1823 PUSH2 0x17FA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1868 JUMPI PUSH2 0x1868 PUSH2 0x17FA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAB3 DUP2 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x189E JUMPI PUSH2 0x189E PUSH2 0x17FA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D3 PUSH2 0x17FA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18FD JUMPI PUSH2 0x18FD PUSH2 0x18D8 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1911 JUMPI PUSH2 0x1911 PUSH2 0x18D8 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SIGNEXTEND 0xA6 0x28 0x2B DUP15 DIFFICULTY MSTORE8 PUSH20 0xE924BB502CCF7E7B8859209860E883ED2C457AA4 PUSH16 0x26E964736F6C634300080A0033000000 ", "sha1": "c5eedead158305071080957cfaf14680154235ef", "source": "// SPDX-License-Identifier: LicenseRef-Gyro-1.0\n// for information on licensing please see the README in the GitHub repository <https://github.com/gyrostable/core-protocol>.\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./../auth/Governable.sol\";\nimport \"../../libraries/DataTypes.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../interfaces/IAssetRegistry.sol\";\nimport \"../../interfaces/IGyroVault.sol\";\nimport \"../../interfaces/balancer/IVault.sol\";\nimport \"../../libraries/Errors.sol\";\nimport \"../../interfaces/ISafetyCheck.sol\";\nimport \"../../interfaces/IVaultRegistry.sol\";\nimport \"../../libraries/FixedPoint.sol\";\nimport \"../../libraries/Flow.sol\";\nimport \"../../libraries/Errors.sol\";\nimport \"../../libraries/StringExtensions.sol\";\nimport \"../../libraries/ConfigHelpers.sol\";\n\ncontract VaultSafetyMode is ISafetyCheck, Governable {\n    using FixedPoint for uint256;\n    using StringExtensions for string;\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using ConfigHelpers for IGyroConfig;\n\n    EnumerableSet.AddressSet internal whitelist;\n\n    /// @notice Emitted when entering safety mode\n    event SafetyStatus(string err);\n\n    /// @notice Emitted when a whitelisted address protects a vault\n    event OracleGuardianActivated(\n        address vaultAddress,\n        uint256 durationOfProtectionInBlocks,\n        bool inFlows\n    );\n\n    event AddedToWhitelist(address indexed account);\n    event RemovedFromWhitelist(address indexed account);\n\n    struct FlowResult {\n        uint256 newFlow;\n        bool safetyModeActivated;\n    }\n\n    mapping(address => DataTypes.FlowData) public persistedFlowData;\n\n    IGyroConfig public immutable gyroConfig;\n\n    uint256 public immutable safetyBlocksAutomatic;\n    uint256 public immutable safetyBlocksGuardian;\n\n    uint256 public constant THRESHOLD_BUFFER = 8e17;\n\n    constructor(\n        address governor,\n        uint256 _safetyBlocksAutomatic,\n        uint256 _safetyBlocksGuardian,\n        address _gyroConfig\n    ) Governable(governor) {\n        safetyBlocksAutomatic = _safetyBlocksAutomatic;\n        safetyBlocksGuardian = _safetyBlocksGuardian;\n        gyroConfig = IGyroConfig(_gyroConfig);\n    }\n\n    modifier rootSafetyCheckOnly() {\n        require(msg.sender == address(gyroConfig.getRootSafetyCheck()), Errors.NOT_AUTHORIZED);\n        _;\n    }\n\n    /// @notice Checks whether a mint operation is safe\n    /// @return err empty string if it is safe, otherwise the reason why it is not safe\n    function isMintSafe(DataTypes.Order memory order) external view returns (string memory err) {\n        if (order.mint) {\n            (err, ) = _checkFlows(order);\n        } else {\n            err = Errors.INVALID_ARGUMENT;\n        }\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function checkAndPersistMint(DataTypes.Order memory order) external rootSafetyCheckOnly {\n        require(order.mint, Errors.INVALID_ARGUMENT);\n        (string memory err, FlowResult[] memory result) = _checkFlows(order);\n\n        if (bytes(err).length > 0) {\n            if (err.compareStrings(Errors.OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED)) {\n                emit SafetyStatus(err);\n            } else {\n                revert(err);\n            }\n        }\n\n        _updateFlows(order, result);\n    }\n\n    /// @notice Checks whether a redeem operation is safe\n    /// @return err empty string if it is safe, otherwise the reason why it is not safe\n    function isRedeemSafe(DataTypes.Order memory order) external view returns (string memory err) {\n        if (!order.mint) {\n            (err, ) = _checkFlows(order);\n        } else {\n            err = Errors.INVALID_ARGUMENT;\n        }\n    }\n\n    /// @notice Checks whether a redeem operation is safe\n    /// This is only called when an actual redeem is performed\n    /// The implementation should store any relevant information for the redeem\n    function checkAndPersistRedeem(DataTypes.Order memory order) external rootSafetyCheckOnly {\n        require(!order.mint, Errors.INVALID_ARGUMENT);\n        (string memory err, FlowResult[] memory result) = _checkFlows(order);\n\n        if (bytes(err).length > 0) {\n            if (err.compareStrings(Errors.OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED)) {\n                emit SafetyStatus(err);\n            } else {\n                revert(err);\n            }\n        }\n\n        _updateFlows(order, result);\n    }\n\n    function getWhitelist() external view returns (address[] memory) {\n        return whitelist.values();\n    }\n\n    function addAddressToWhitelist(address _addressToAdd) external governanceOnly {\n        whitelist.add(_addressToAdd);\n        emit AddedToWhitelist(_addressToAdd);\n    }\n\n    function removeAddressFromWhitelist(address _addressToRemove) external governanceOnly {\n        whitelist.remove(_addressToRemove);\n        emit RemovedFromWhitelist(_addressToRemove);\n    }\n\n    modifier isWhitelisted(address _address) {\n        require(whitelist.contains(_address), Errors.NOT_AUTHORIZED);\n        _;\n    }\n\n    function activateOracleGuardian(DataTypes.GuardedVaults memory vaultToProtect, uint256 blocks)\n        external\n        isWhitelisted(msg.sender)\n    {\n        require(blocks <= safetyBlocksGuardian, Errors.ORACLE_GUARDIAN_TIME_LIMIT);\n\n        uint64 targetBlock = uint64(block.number + blocks);\n        if (\n            vaultToProtect.direction == DataTypes.Direction.In ||\n            vaultToProtect.direction == DataTypes.Direction.Both\n        ) {\n            persistedFlowData[vaultToProtect.vaultAddress].inFlow.lastSafetyBlock = targetBlock;\n            emit OracleGuardianActivated(vaultToProtect.vaultAddress, blocks, true);\n        }\n        if (\n            vaultToProtect.direction == DataTypes.Direction.Out ||\n            vaultToProtect.direction == DataTypes.Direction.Both\n        ) {\n            persistedFlowData[vaultToProtect.vaultAddress].outFlow.lastSafetyBlock = targetBlock;\n            emit OracleGuardianActivated(vaultToProtect.vaultAddress, blocks, false);\n        }\n    }\n\n    function _checkFlows(DataTypes.Order memory order)\n        internal\n        view\n        returns (string memory err, FlowResult[] memory result)\n    {\n        result = new FlowResult[](order.vaultsWithAmount.length);\n\n        for (uint256 i; i < order.vaultsWithAmount.length; i++) {\n            uint256 amount = order.vaultsWithAmount[i].amount;\n            DataTypes.VaultInfo memory vault = order.vaultsWithAmount[i].vaultInfo;\n            DataTypes.FlowData storage flowData = persistedFlowData[vault.vault];\n            DataTypes.DirectionalFlowData memory directionalData;\n            directionalData = order.mint ? flowData.inFlow : flowData.outFlow;\n\n            if (amount > 0 && block.number <= directionalData.lastSafetyBlock) {\n                err = Errors.SAFETY_MODE_ACTIVATED;\n                break;\n            }\n\n            uint256 shortFlowThreshold = vault.persistedMetadata.shortFlowThreshold;\n            uint256 newFlow = order.vaultsWithAmount[i].amount +\n                Flow.updateFlow(\n                    directionalData.shortFlow,\n                    block.number,\n                    directionalData.lastSeenBlock,\n                    vault.persistedMetadata.shortFlowMemory\n                );\n\n            if (newFlow > shortFlowThreshold) {\n                err = Errors.VAULT_FLOW_TOO_HIGH;\n                break;\n            }\n\n            bool activateSafetyMode = newFlow > THRESHOLD_BUFFER.mulDown(shortFlowThreshold);\n            if (activateSafetyMode) {\n                err = Errors.OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED;\n            }\n\n            result[i] = FlowResult(newFlow, activateSafetyMode);\n        }\n    }\n\n    function _updateFlows(DataTypes.Order memory order, FlowResult[] memory result) internal {\n        for (uint256 i; i < order.vaultsWithAmount.length; i++) {\n            DataTypes.VaultInfo memory vault = order.vaultsWithAmount[i].vaultInfo;\n            DataTypes.FlowData storage flowData = persistedFlowData[vault.vault];\n            DataTypes.DirectionalFlowData storage directionalData;\n            if (order.mint) {\n                directionalData = flowData.inFlow;\n            } else {\n                directionalData = flowData.outFlow;\n            }\n            directionalData.lastSeenBlock = uint64(block.number);\n            directionalData.shortFlow = uint128(result[i].newFlow);\n            if (result[i].safetyModeActivated) {\n                directionalData.lastSafetyBlock = uint64(block.number + safetyBlocksAutomatic);\n            }\n        }\n    }\n}\n", "sourceMap": "973:7749:12:-:0;;;2021:337;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;316:8:9;:20;;-1:-1:-1;;;;;;316:20:9;-1:-1:-1;;;;;316:20:9;;;;;;;351:38;;;829:34:48;;;894:2;879:18;;872:43;;;;316:20:9;;351:38;;764:18:48;351:38:9;;;;;;;-1:-1:-1;2204:46:12::1;::::0;;;;2260:44:::1;::::0;-1:-1:-1;;;;;2314:37:12::1;;::::0;-1:-1:-1;973:7749:12;;14:177:48;93:13;;-1:-1:-1;;;;;135:31:48;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;490:2;479:9;475:18;469:25;459:35;;534:2;523:9;519:18;513:25;503:35;;557:49;602:2;591:9;587:18;557:49;:::i;:::-;547:59;;196:416;;;;;;;:::o;617:304::-;973:7749:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/safety/VaultSafetyMode.sol", "deployment": {"address": "0xcc8B1710C8a01aD5CBDe800e75Ac7523f9B2D6B8", "chainid": "137", "blockHeight": 37996206}}