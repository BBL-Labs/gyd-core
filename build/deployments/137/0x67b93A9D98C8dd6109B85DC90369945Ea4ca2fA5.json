{"abi": [{"inputs": [{"internalType": "address", "name": "governor", "type": "address"}, {"internalType": "uint256", "name": "_safetyBlocksAutomatic", "type": "uint256"}, {"internalType": "uint256", "name": "_safetyBlocksGuardian", "type": "uint256"}, {"internalType": "address", "name": "_gyroConfig", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}], "name": "AddedToWhitelist", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChangeRequested", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldGovernor", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "vaultAddress", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "durationOfProtectionInBlocks", "type": "uint256"}, {"indexed": false, "internalType": "bool", "name": "inFlows", "type": "bool"}], "name": "OracleGuardianActivated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "account", "type": "address"}], "name": "RemovedFromWhitelist", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "string", "name": "err", "type": "string"}], "name": "SafetyStatus", "type": "event"}, {"inputs": [], "name": "THRESHOLD_BUFFER", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "acceptGovernance", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"internalType": "address", "name": "vaultAddress", "type": "address"}, {"internalType": "enum DataTypes.Direction", "name": "direction", "type": "uint8"}], "internalType": "struct DataTypes.GuardedVaults", "name": "vaultToProtect", "type": "tuple"}, {"internalType": "uint256", "name": "blocks", "type": "uint256"}], "name": "activateOracleGuardian", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_addressToAdd", "type": "address"}], "name": "addAddressToWhitelist", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newGovernor", "type": "address"}], "name": "changeGovernor", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "checkAndPersistMint", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "checkAndPersistRedeem", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "getWhitelist", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "governor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "isMintSafe", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "isRedeemSafe", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "depositsOnly", "type": "bool"}], "name": "pauseProtocol", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "pendingGovernor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "persistedFlowData", "outputs": [{"components": [{"internalType": "uint128", "name": "shortFlow", "type": "uint128"}, {"internalType": "uint64", "name": "lastSafetyBlock", "type": "uint64"}, {"internalType": "uint64", "name": "lastSeenBlock", "type": "uint64"}], "internalType": "struct DataTypes.DirectionalFlowData", "name": "inFlow", "type": "tuple"}, {"components": [{"internalType": "uint128", "name": "shortFlow", "type": "uint128"}, {"internalType": "uint64", "name": "lastSafetyBlock", "type": "uint64"}, {"internalType": "uint64", "name": "lastSeenBlock", "type": "uint64"}], "internalType": "struct DataTypes.DirectionalFlowData", "name": "outFlow", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_addressToRemove", "type": "address"}], "name": "removeAddressFromWhitelist", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "safetyBlocksAutomatic", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "safetyBlocksGuardian", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"10": "contracts/auth/GovernableBase.sol", "11": "contracts/safety/VaultSafetyMode.sol", "12": "interfaces/IAssetRegistry.sol", "13": "interfaces/ICapAuthentication.sol", "14": "interfaces/IFeeBank.sol", "15": "interfaces/IFeeHandler.sol", "16": "interfaces/IGYDToken.sol", "17": "interfaces/IGovernable.sol", "18": "interfaces/IGyroConfig.sol", "20": "interfaces/IMotherboard.sol", "21": "interfaces/IPAMM.sol", "22": "interfaces/IReserve.sol", "23": "interfaces/IReserveManager.sol", "24": "interfaces/ISafetyCheck.sol", "25": "interfaces/IVaultRegistry.sol", "34": "interfaces/oracles/IBatchVaultPriceOracle.sol", "36": "libraries/ConfigHelpers.sol", "37": "libraries/ConfigKeys.sol", "38": "libraries/DataTypes.sol", "39": "libraries/Errors.sol", "40": "libraries/FixedPoint.sol", "41": "libraries/Flow.sol", "42": "libraries/LogExpMath.sol", "43": "libraries/StringExtensions.sol", "8": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "9": "contracts/auth/Governable.sol"}, "ast": {"absolutePath": "contracts/safety/VaultSafetyMode.sol", "exportedSymbols": {"Address": [4606], "ConfigHelpers": [3417], "ConfigKeys": [5311], "Context": [4309], "DataTypes": [3563], "ERC20": [1358], "EnumerableSet": [2181], "Errors": [3711], "FixedPoint": [4081], "Flow": [4141], "Governable": [2205], "GovernableBase": [4700], "IAsset": [4750], "IAssetRegistry": [2306], "IAuthorizer": [4765], "IBatchVaultPriceOracle": [5262], "ICapAuthentication": [4965], "IERC165": [6645], "IERC20": [4262], "IERC20Metadata": [4287], "IERC721": [4953], "IFeeBank": [4990], "IFeeHandler": [5012], "IFlashLoanRecipient": [4785], "IGYDToken": [5053], "IGovernable": [4737], "IGyroConfig": [2429], "IGyroVault": [2544], "IMotherboard": [5146], "IPAMM": [6718], "IReserve": [5209], "IReserveManager": [5234], "ISafetyCheck": [2580], "ISignaturesValidator": [4803], "ITemporarilyPausable": [4822], "IUSDPriceOracle": [6758], "IVault": [3132], "IVaultRegistry": [2631], "IVaultWeightManager": [6747], "IWETH": [4837], "LogExpMath": [6633], "SafeERC20": [1582], "StringExtensions": [4184], "VaultSafetyMode": [812], "Vaults": [4746]}, "id": 813, "license": "LicenseRef-Gyro-1.0", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".4"], "nodeType": "PragmaDirective", "src": "174:23:11"}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 1583, "src": "199:65:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/ERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 1359, "src": "265:55:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 2182, "src": "321:65:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/auth/Governable.sol", "file": "./../auth/Governable.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 2206, "src": "388:34:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/DataTypes.sol", "file": "../../libraries/DataTypes.sol", "id": 6, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 3564, "src": "423:39:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 7, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 2430, "src": "463:42:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IAssetRegistry.sol", "file": "../../interfaces/IAssetRegistry.sol", "id": 8, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 2307, "src": "506:45:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroVault.sol", "file": "../../interfaces/IGyroVault.sol", "id": 9, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 2545, "src": "552:41:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/balancer/IVault.sol", "file": "../../interfaces/balancer/IVault.sol", "id": 10, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 3133, "src": "594:46:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Errors.sol", "file": "../../libraries/Errors.sol", "id": 11, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 3712, "src": "641:36:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/ISafetyCheck.sol", "file": "../../interfaces/ISafetyCheck.sol", "id": 12, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 2581, "src": "678:43:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IVaultRegistry.sol", "file": "../../interfaces/IVaultRegistry.sol", "id": 13, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 2632, "src": "722:45:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/FixedPoint.sol", "file": "../../libraries/FixedPoint.sol", "id": 14, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 4082, "src": "768:40:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Flow.sol", "file": "../../libraries/Flow.sol", "id": 15, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 4142, "src": "809:34:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Errors.sol", "file": "../../libraries/Errors.sol", "id": 16, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 3712, "src": "844:36:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/StringExtensions.sol", "file": "../../libraries/StringExtensions.sol", "id": 17, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 4185, "src": "881:46:11", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ConfigHelpers.sol", "file": "../../libraries/ConfigHelpers.sol", "id": 18, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 813, "sourceUnit": 3418, "src": "928:43:11", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 19, "name": "ISafetyCheck", "nodeType": "IdentifierPath", "referencedDeclaration": 2580, "src": "1001:12:11"}, "id": 20, "nodeType": "InheritanceSpecifier", "src": "1001:12:11"}, {"baseName": {"id": 21, "name": "Governable", "nodeType": "IdentifierPath", "referencedDeclaration": 2205, "src": "1015:10:11"}, "id": 22, "nodeType": "InheritanceSpecifier", "src": "1015:10:11"}], "canonicalName": "VaultSafetyMode", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 812, "linearizedBaseContracts": [812, 2205, 4700, 4737, 2580], "name": "VaultSafetyMode", "nameLocation": "982:15:11", "nodeType": "ContractDefinition", "nodes": [{"id": 25, "libraryName": {"id": 23, "name": "FixedPoint", "nodeType": "IdentifierPath", "referencedDeclaration": 4081, "src": "1038:10:11"}, "nodeType": "UsingForDirective", "src": "1032:29:11", "typeName": {"id": 24, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1053:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 28, "libraryName": {"id": 26, "name": "StringExtensions", "nodeType": "IdentifierPath", "referencedDeclaration": 4184, "src": "1072:16:11"}, "nodeType": "UsingForDirective", "src": "1066:34:11", "typeName": {"id": 27, "name": "string", "nodeType": "ElementaryTypeName", "src": "1093:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}}, {"id": 32, "libraryName": {"id": 29, "name": "EnumerableSet", "nodeType": "IdentifierPath", "referencedDeclaration": 2181, "src": "1111:13:11"}, "nodeType": "UsingForDirective", "src": "1105:49:11", "typeName": {"id": 31, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 30, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 1894, "src": "1129:24:11"}, "referencedDeclaration": 1894, "src": "1129:24:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$1894_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 36, "libraryName": {"id": 33, "name": "ConfigHelpers", "nodeType": "IdentifierPath", "referencedDeclaration": 3417, "src": "1165:13:11"}, "nodeType": "UsingForDirective", "src": "1159:36:11", "typeName": {"id": 35, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 34, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 2429, "src": "1183:11:11"}, "referencedDeclaration": 2429, "src": "1183:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2429", "typeString": "contract IGyroConfig"}}}, {"constant": false, "id": 39, "mutability": "mutable", "name": "whitelist", "nameLocation": "1235:9:11", "nodeType": "VariableDeclaration", "scope": 812, "src": "1201:43:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$1894_storage", "typeString": "struct EnumerableSet.AddressSet"}, "typeName": {"id": 38, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 37, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 1894, "src": "1201:24:11"}, "referencedDeclaration": 1894, "src": "1201:24:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$1894_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}, "visibility": "internal"}, {"anonymous": false, "documentation": {"id": 40, "nodeType": "StructuredDocumentation", "src": "1251:45:11", "text": "@notice Emitted when entering safety mode"}, "id": 44, "name": "SafetyStatus", "nameLocation": "1307:12:11", "nodeType": "EventDefinition", "parameters": {"id": 43, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 42, "indexed": false, "mutability": "mutable", "name": "err", "nameLocation": "1327:3:11", "nodeType": "VariableDeclaration", "scope": 44, "src": "1320:10:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 41, "name": "string", "nodeType": "ElementaryTypeName", "src": "1320:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1319:12:11"}, "src": "1301:31:11"}, {"anonymous": false, "documentation": {"id": 45, "nodeType": "StructuredDocumentation", "src": "1338:63:11", "text": "@notice Emitted when a whitelisted address protects a vault"}, "id": 53, "name": "OracleGuardianActivated", "nameLocation": "1412:23:11", "nodeType": "EventDefinition", "parameters": {"id": 52, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 47, "indexed": false, "mutability": "mutable", "name": "vaultAddress", "nameLocation": "1453:12:11", "nodeType": "VariableDeclaration", "scope": 53, "src": "1445:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 46, "name": "address", "nodeType": "ElementaryTypeName", "src": "1445:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 49, "indexed": false, "mutability": "mutable", "name": "durationOfProtectionInBlocks", "nameLocation": "1483:28:11", "nodeType": "VariableDeclaration", "scope": 53, "src": "1475:36:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 48, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1475:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 51, "indexed": false, "mutability": "mutable", "name": "inFlows", "nameLocation": "1526:7:11", "nodeType": "VariableDeclaration", "scope": 53, "src": "1521:12:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 50, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1521:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1435:104:11"}, "src": "1406:134:11"}, {"anonymous": false, "id": 57, "name": "AddedToWhitelist", "nameLocation": "1552:16:11", "nodeType": "EventDefinition", "parameters": {"id": 56, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 55, "indexed": true, "mutability": "mutable", "name": "account", "nameLocation": "1585:7:11", "nodeType": "VariableDeclaration", "scope": 57, "src": "1569:23:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 54, "name": "address", "nodeType": "ElementaryTypeName", "src": "1569:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1568:25:11"}, "src": "1546:48:11"}, {"anonymous": false, "id": 61, "name": "RemovedFromWhitelist", "nameLocation": "1605:20:11", "nodeType": "EventDefinition", "parameters": {"id": 60, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 59, "indexed": true, "mutability": "mutable", "name": "account", "nameLocation": "1642:7:11", "nodeType": "VariableDeclaration", "scope": 61, "src": "1626:23:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 58, "name": "address", "nodeType": "ElementaryTypeName", "src": "1626:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1625:25:11"}, "src": "1599:52:11"}, {"canonicalName": "VaultSafetyMode.FlowResult", "id": 66, "members": [{"constant": false, "id": 63, "mutability": "mutable", "name": "newFlow", "nameLocation": "1693:7:11", "nodeType": "VariableDeclaration", "scope": 66, "src": "1685:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 62, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1685:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 65, "mutability": "mutable", "name": "safetyModeActivated", "nameLocation": "1715:19:11", "nodeType": "VariableDeclaration", "scope": 66, "src": "1710:24:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 64, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1710:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "name": "FlowResult", "nameLocation": "1664:10:11", "nodeType": "StructDefinition", "scope": 812, "src": "1657:84:11", "visibility": "public"}, {"constant": false, "functionSelector": "25aeb092", "id": 71, "mutability": "mutable", "name": "persistedFlowData", "nameLocation": "1793:17:11", "nodeType": "VariableDeclaration", "scope": 812, "src": "1747:63:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$3476_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData)"}, "typeName": {"id": 70, "keyType": {"id": 67, "name": "address", "nodeType": "ElementaryTypeName", "src": "1755:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1747:38:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$3476_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData)"}, "valueType": {"id": 69, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 68, "name": "DataTypes.FlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 3476, "src": "1766:18:11"}, "referencedDeclaration": 3476, "src": "1766:18:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "44bbdb55", "id": 74, "mutability": "immutable", "name": "gyroConfig", "nameLocation": "1846:10:11", "nodeType": "VariableDeclaration", "scope": 812, "src": "1817:39:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2429", "typeString": "contract IGyroConfig"}, "typeName": {"id": 73, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 72, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 2429, "src": "1817:11:11"}, "referencedDeclaration": 2429, "src": "1817:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2429", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"constant": false, "functionSelector": "c9e959bf", "id": 76, "mutability": "immutable", "name": "safetyBlocksAutomatic", "nameLocation": "1888:21:11", "nodeType": "VariableDeclaration", "scope": 812, "src": "1863:46:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 75, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1863:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "a036c284", "id": 78, "mutability": "immutable", "name": "safetyBlocksGuardian", "nameLocation": "1940:20:11", "nodeType": "VariableDeclaration", "scope": 812, "src": "1915:45:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 77, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1915:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": true, "functionSelector": "0bdf8d22", "id": 81, "mutability": "constant", "name": "THRESHOLD_BUFFER", "nameLocation": "1991:16:11", "nodeType": "VariableDeclaration", "scope": 812, "src": "1967:47:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 79, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1967:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "38653137", "id": 80, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2010:4:11", "typeDescriptions": {"typeIdentifier": "t_rational_800000000000000000_by_1", "typeString": "int_const 800000000000000000"}, "value": "8e17"}, "visibility": "public"}, {"body": {"id": 109, "nodeType": "Block", "src": "2194:164:11", "statements": [{"expression": {"id": 97, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 95, "name": "safetyBlocksAutomatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "2204:21:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 96, "name": "_safetyBlocksAutomatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 85, "src": "2228:22:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2204:46:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 98, "nodeType": "ExpressionStatement", "src": "2204:46:11"}, {"expression": {"id": 101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 99, "name": "safetyBlocksGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "2260:20:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 100, "name": "_safetyBlocksGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87, "src": "2283:21:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2260:44:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 102, "nodeType": "ExpressionStatement", "src": "2260:44:11"}, {"expression": {"id": 107, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 103, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74, "src": "2314:10:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2429", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 105, "name": "_gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 89, "src": "2339:11:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 104, "name": "IGyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2429, "src": "2327:11:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IGyroConfig_$2429_$", "typeString": "type(contract IGyroConfig)"}}, "id": 106, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2327:24:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2429", "typeString": "contract IGyroConfig"}}, "src": "2314:37:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2429", "typeString": "contract IGyroConfig"}}, "id": 108, "nodeType": "ExpressionStatement", "src": "2314:37:11"}]}, "id": 110, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 92, "name": "governor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 83, "src": "2184:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 93, "kind": "baseConstructorSpecifier", "modifierName": {"id": 91, "name": "Governable", "nodeType": "IdentifierPath", "referencedDeclaration": 2205, "src": "2173:10:11"}, "nodeType": "ModifierInvocation", "src": "2173:20:11"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 90, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 83, "mutability": "mutable", "name": "governor", "nameLocation": "2050:8:11", "nodeType": "VariableDeclaration", "scope": 110, "src": "2042:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 82, "name": "address", "nodeType": "ElementaryTypeName", "src": "2042:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 85, "mutability": "mutable", "name": "_safetyBlocksAutomatic", "nameLocation": "2076:22:11", "nodeType": "VariableDeclaration", "scope": 110, "src": "2068:30:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 84, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2068:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 87, "mutability": "mutable", "name": "_safetyBlocksGuardian", "nameLocation": "2116:21:11", "nodeType": "VariableDeclaration", "scope": 110, "src": "2108:29:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 86, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2108:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 89, "mutability": "mutable", "name": "_gyroConfig", "nameLocation": "2155:11:11", "nodeType": "VariableDeclaration", "scope": 110, "src": "2147:19:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 88, "name": "address", "nodeType": "ElementaryTypeName", "src": "2147:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2032:140:11"}, "returnParameters": {"id": 94, "nodeType": "ParameterList", "parameters": [], "src": "2194:0:11"}, "scope": 812, "src": "2021:337:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 127, "nodeType": "Block", "src": "2395:114:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 121, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 113, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2413:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2413:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 117, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74, "src": "2435:10:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2429", "typeString": "contract IGyroConfig"}}, "id": 118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRootSafetyCheck", "nodeType": "MemberAccess", "referencedDeclaration": 3185, "src": "2435:29:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$2429_$returns$_t_contract$_ISafetyCheck_$2580_$bound_to$_t_contract$_IGyroConfig_$2429_$", "typeString": "function (contract IGyroConfig) view returns (contract ISafetyCheck)"}}, "id": 119, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2435:31:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$2580", "typeString": "contract ISafetyCheck"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ISafetyCheck_$2580", "typeString": "contract ISafetyCheck"}], "id": 116, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2427:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 115, "name": "address", "nodeType": "ElementaryTypeName", "src": "2427:7:11", "typeDescriptions": {}}}, "id": 120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2427:40:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2413:54:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 122, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "2469:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 123, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "NOT_AUTHORIZED", "nodeType": "MemberAccess", "referencedDeclaration": 3620, "src": "2469:21:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 112, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2405:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 124, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2405:86:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 125, "nodeType": "ExpressionStatement", "src": "2405:86:11"}, {"id": 126, "nodeType": "PlaceholderStatement", "src": "2501:1:11"}]}, "id": 128, "name": "rootSafetyCheckOnly", "nameLocation": "2373:19:11", "nodeType": "ModifierDefinition", "parameters": {"id": 111, "nodeType": "ParameterList", "parameters": [], "src": "2392:2:11"}, "src": "2364:145:11", "virtual": false, "visibility": "internal"}, {"baseFunctions": [2556], "body": {"id": 154, "nodeType": "Block", "src": "2751:145:11", "statements": [{"condition": {"expression": {"id": 137, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 132, "src": "2765:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 138, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 3548, "src": "2765:10:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 152, "nodeType": "Block", "src": "2836:54:11", "statements": [{"expression": {"id": 150, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 147, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "2850:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 148, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "2856:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 149, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 3623, "src": "2856:23:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2850:29:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 151, "nodeType": "ExpressionStatement", "src": "2850:29:11"}]}, "id": 153, "nodeType": "IfStatement", "src": "2761:129:11", "trueBody": {"id": 146, "nodeType": "Block", "src": "2777:53:11", "statements": [{"expression": {"id": 144, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 139, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "2792:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, null], "id": 140, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "2791:7:11", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$__$", "typeString": "tuple(string memory,)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 142, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 132, "src": "2813:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "id": 141, "name": "_checkFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 616, "src": "2801:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Order_$3549_memory_ptr_$returns$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view returns (string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 143, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2801:18:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "src": "2791:28:11", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 145, "nodeType": "ExpressionStatement", "src": "2791:28:11"}]}}]}, "documentation": {"id": 129, "nodeType": "StructuredDocumentation", "src": "2515:139:11", "text": "@notice Checks whether a mint operation is safe\n @return err empty string if it is safe, otherwise the reason why it is not safe"}, "functionSelector": "e2cc8679", "id": 155, "implemented": true, "kind": "function", "modifiers": [], "name": "isMintSafe", "nameLocation": "2668:10:11", "nodeType": "FunctionDefinition", "parameters": {"id": 133, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 132, "mutability": "mutable", "name": "order", "nameLocation": "2702:5:11", "nodeType": "VariableDeclaration", "scope": 155, "src": "2679:28:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 131, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 130, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 3549, "src": "2679:15:11"}, "referencedDeclaration": 3549, "src": "2679:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2678:30:11"}, "returnParameters": {"id": 136, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 135, "mutability": "mutable", "name": "err", "nameLocation": "2746:3:11", "nodeType": "VariableDeclaration", "scope": 155, "src": "2732:17:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 134, "name": "string", "nodeType": "ElementaryTypeName", "src": "2732:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2731:19:11"}, "scope": 812, "src": "2659:237:11", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [2579], "body": {"id": 211, "nodeType": "Block", "src": "3023:420:11", "statements": [{"expression": {"arguments": [{"expression": {"id": 165, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "3041:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 166, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 3548, "src": "3041:10:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 167, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "3053:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 3623, "src": "3053:23:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 164, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3033:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 169, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3033:44:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 170, "nodeType": "ExpressionStatement", "src": "3033:44:11"}, {"assignments": [172, 176], "declarations": [{"constant": false, "id": 172, "mutability": "mutable", "name": "err", "nameLocation": "3102:3:11", "nodeType": "VariableDeclaration", "scope": 211, "src": "3088:17:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 171, "name": "string", "nodeType": "ElementaryTypeName", "src": "3088:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 176, "mutability": "mutable", "name": "result", "nameLocation": "3127:6:11", "nodeType": "VariableDeclaration", "scope": 211, "src": "3107:26:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}, "typeName": {"baseType": {"id": 174, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 173, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 66, "src": "3107:10:11"}, "referencedDeclaration": 66, "src": "3107:10:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 175, "nodeType": "ArrayTypeName", "src": "3107:12:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}, "visibility": "internal"}], "id": 180, "initialValue": {"arguments": [{"id": 178, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "3149:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "id": 177, "name": "_checkFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 616, "src": "3137:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Order_$3549_memory_ptr_$returns$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view returns (string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 179, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3137:18:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "3087:68:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 187, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 183, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 172, "src": "3176:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 182, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3170:5:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 181, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3170:5:11", "typeDescriptions": {}}}, "id": 184, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3170:10:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3170:17:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 186, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3190:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3170:21:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 205, "nodeType": "IfStatement", "src": "3166:233:11", "trueBody": {"id": 204, "nodeType": "Block", "src": "3193:206:11", "statements": [{"condition": {"arguments": [{"expression": {"id": 190, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "3230:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED", "nodeType": "MemberAccess", "referencedDeclaration": 3695, "src": "3230:51:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "expression": {"id": 188, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 172, "src": "3211:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "compareStrings", "nodeType": "MemberAccess", "referencedDeclaration": 4183, "src": "3211:18:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$bound_to$_t_string_memory_ptr_$", "typeString": "function (string memory,string memory) pure returns (bool)"}}, "id": 192, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3211:71:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 202, "nodeType": "Block", "src": "3345:44:11", "statements": [{"expression": {"arguments": [{"id": 199, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 172, "src": "3370:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 198, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "3363:6:11", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 200, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3363:11:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 201, "nodeType": "ExpressionStatement", "src": "3363:11:11"}]}, "id": 203, "nodeType": "IfStatement", "src": "3207:182:11", "trueBody": {"id": 197, "nodeType": "Block", "src": "3284:55:11", "statements": [{"eventCall": {"arguments": [{"id": 194, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 172, "src": "3320:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 193, "name": "SafetyStatus", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44, "src": "3307:12:11", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory)"}}, "id": 195, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3307:17:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 196, "nodeType": "EmitStatement", "src": "3302:22:11"}]}}]}}, {"expression": {"arguments": [{"id": 207, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "3422:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, {"id": 208, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 176, "src": "3429:6:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}, {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}], "id": 206, "name": "_updateFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "3409:12:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$3549_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$returns$__$", "typeString": "function (struct DataTypes.Order memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3409:27:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 210, "nodeType": "ExpressionStatement", "src": "3409:27:11"}]}, "documentation": {"id": 156, "nodeType": "StructuredDocumentation", "src": "2902:28:11", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "d625436c", "id": 212, "implemented": true, "kind": "function", "modifiers": [{"id": 162, "kind": "modifierInvocation", "modifierName": {"id": 161, "name": "rootSafetyCheckOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 128, "src": "3003:19:11"}, "nodeType": "ModifierInvocation", "src": "3003:19:11"}], "name": "checkAndPersistMint", "nameLocation": "2944:19:11", "nodeType": "FunctionDefinition", "parameters": {"id": 160, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 159, "mutability": "mutable", "name": "order", "nameLocation": "2987:5:11", "nodeType": "VariableDeclaration", "scope": 212, "src": "2964:28:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 158, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 157, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 3549, "src": "2964:15:11"}, "referencedDeclaration": 3549, "src": "2964:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2963:30:11"}, "returnParameters": {"id": 163, "nodeType": "ParameterList", "parameters": [], "src": "3023:0:11"}, "scope": 812, "src": "2935:508:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [2565], "body": {"id": 239, "nodeType": "Block", "src": "3689:146:11", "statements": [{"condition": {"id": 223, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "3703:11:11", "subExpression": {"expression": {"id": 221, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 216, "src": "3704:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 222, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 3548, "src": "3704:10:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 237, "nodeType": "Block", "src": "3775:54:11", "statements": [{"expression": {"id": 235, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 232, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 219, "src": "3789:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 233, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "3795:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 234, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 3623, "src": "3795:23:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "3789:29:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 236, "nodeType": "ExpressionStatement", "src": "3789:29:11"}]}, "id": 238, "nodeType": "IfStatement", "src": "3699:130:11", "trueBody": {"id": 231, "nodeType": "Block", "src": "3716:53:11", "statements": [{"expression": {"id": 229, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 224, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 219, "src": "3731:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, null], "id": 225, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3730:7:11", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$__$", "typeString": "tuple(string memory,)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 227, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 216, "src": "3752:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "id": 226, "name": "_checkFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 616, "src": "3740:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Order_$3549_memory_ptr_$returns$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view returns (string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 228, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3740:18:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "src": "3730:28:11", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 230, "nodeType": "ExpressionStatement", "src": "3730:28:11"}]}}]}, "documentation": {"id": 213, "nodeType": "StructuredDocumentation", "src": "3449:141:11", "text": "@notice Checks whether a redeem operation is safe\n @return err empty string if it is safe, otherwise the reason why it is not safe"}, "functionSelector": "6382b296", "id": 240, "implemented": true, "kind": "function", "modifiers": [], "name": "isRedeemSafe", "nameLocation": "3604:12:11", "nodeType": "FunctionDefinition", "parameters": {"id": 217, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 216, "mutability": "mutable", "name": "order", "nameLocation": "3640:5:11", "nodeType": "VariableDeclaration", "scope": 240, "src": "3617:28:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 215, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 214, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 3549, "src": "3617:15:11"}, "referencedDeclaration": 3549, "src": "3617:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "3616:30:11"}, "returnParameters": {"id": 220, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 219, "mutability": "mutable", "name": "err", "nameLocation": "3684:3:11", "nodeType": "VariableDeclaration", "scope": 240, "src": "3670:17:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 218, "name": "string", "nodeType": "ElementaryTypeName", "src": "3670:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "3669:19:11"}, "scope": 812, "src": "3595:240:11", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [2572], "body": {"id": 297, "nodeType": "Block", "src": "4132:421:11", "statements": [{"expression": {"arguments": [{"id": 252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "4150:11:11", "subExpression": {"expression": {"id": 250, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "4151:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 251, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 3548, "src": "4151:10:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 253, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "4163:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 254, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 3623, "src": "4163:23:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 249, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4142:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 255, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4142:45:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 256, "nodeType": "ExpressionStatement", "src": "4142:45:11"}, {"assignments": [258, 262], "declarations": [{"constant": false, "id": 258, "mutability": "mutable", "name": "err", "nameLocation": "4212:3:11", "nodeType": "VariableDeclaration", "scope": 297, "src": "4198:17:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 257, "name": "string", "nodeType": "ElementaryTypeName", "src": "4198:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 262, "mutability": "mutable", "name": "result", "nameLocation": "4237:6:11", "nodeType": "VariableDeclaration", "scope": 297, "src": "4217:26:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}, "typeName": {"baseType": {"id": 260, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 259, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 66, "src": "4217:10:11"}, "referencedDeclaration": 66, "src": "4217:10:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 261, "nodeType": "ArrayTypeName", "src": "4217:12:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}, "visibility": "internal"}], "id": 266, "initialValue": {"arguments": [{"id": 264, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "4259:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "id": 263, "name": "_checkFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 616, "src": "4247:11:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_Order_$3549_memory_ptr_$returns$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view returns (string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 265, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4247:18:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(string memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "4197:68:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 269, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "4286:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 268, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4280:5:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 267, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4280:5:11", "typeDescriptions": {}}}, "id": 270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4280:10:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 271, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4280:17:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 272, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4300:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4280:21:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 291, "nodeType": "IfStatement", "src": "4276:233:11", "trueBody": {"id": 290, "nodeType": "Block", "src": "4303:206:11", "statements": [{"condition": {"arguments": [{"expression": {"id": 276, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "4340:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 277, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED", "nodeType": "MemberAccess", "referencedDeclaration": 3695, "src": "4340:51:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "expression": {"id": 274, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "4321:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 275, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "compareStrings", "nodeType": "MemberAccess", "referencedDeclaration": 4183, "src": "4321:18:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$bound_to$_t_string_memory_ptr_$", "typeString": "function (string memory,string memory) pure returns (bool)"}}, "id": 278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4321:71:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 288, "nodeType": "Block", "src": "4455:44:11", "statements": [{"expression": {"arguments": [{"id": 285, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "4480:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 284, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "4473:6:11", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 286, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4473:11:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 287, "nodeType": "ExpressionStatement", "src": "4473:11:11"}]}, "id": 289, "nodeType": "IfStatement", "src": "4317:182:11", "trueBody": {"id": 283, "nodeType": "Block", "src": "4394:55:11", "statements": [{"eventCall": {"arguments": [{"id": 280, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 258, "src": "4430:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 279, "name": "SafetyStatus", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 44, "src": "4417:12:11", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory)"}}, "id": 281, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4417:17:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 282, "nodeType": "EmitStatement", "src": "4412:22:11"}]}}]}}, {"expression": {"arguments": [{"id": 293, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "4532:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, {"id": 294, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 262, "src": "4539:6:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}, {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}], "id": 292, "name": "_updateFlows", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 722, "src": "4519:12:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$3549_memory_ptr_$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$returns$__$", "typeString": "function (struct DataTypes.Order memory,struct VaultSafetyMode.FlowResult memory[] memory)"}}, "id": 295, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4519:27:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 296, "nodeType": "ExpressionStatement", "src": "4519:27:11"}]}, "documentation": {"id": 241, "nodeType": "StructuredDocumentation", "src": "3841:196:11", "text": "@notice Checks whether a redeem operation is safe\n This is only called when an actual redeem is performed\n The implementation should store any relevant information for the redeem"}, "functionSelector": "a0763820", "id": 298, "implemented": true, "kind": "function", "modifiers": [{"id": 247, "kind": "modifierInvocation", "modifierName": {"id": 246, "name": "rootSafetyCheckOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 128, "src": "4112:19:11"}, "nodeType": "ModifierInvocation", "src": "4112:19:11"}], "name": "checkAndPersistRedeem", "nameLocation": "4051:21:11", "nodeType": "FunctionDefinition", "parameters": {"id": 245, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 244, "mutability": "mutable", "name": "order", "nameLocation": "4096:5:11", "nodeType": "VariableDeclaration", "scope": 298, "src": "4073:28:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 243, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 242, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 3549, "src": "4073:15:11"}, "referencedDeclaration": 3549, "src": "4073:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "4072:30:11"}, "returnParameters": {"id": 248, "nodeType": "ParameterList", "parameters": [], "src": "4132:0:11"}, "scope": 812, "src": "4042:511:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 308, "nodeType": "Block", "src": "4624:42:11", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 304, "name": "whitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "4641:9:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$1894_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 305, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "values", "nodeType": "MemberAccess", "referencedDeclaration": 2047, "src": "4641:16:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1894_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$1894_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}}, "id": 306, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4641:18:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "functionReturnParameters": 303, "id": 307, "nodeType": "Return", "src": "4634:25:11"}]}, "functionSelector": "d01f63f5", "id": 309, "implemented": true, "kind": "function", "modifiers": [], "name": "getWhitelist", "nameLocation": "4568:12:11", "nodeType": "FunctionDefinition", "parameters": {"id": 299, "nodeType": "ParameterList", "parameters": [], "src": "4580:2:11"}, "returnParameters": {"id": 303, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 302, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 309, "src": "4606:16:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 300, "name": "address", "nodeType": "ElementaryTypeName", "src": "4606:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 301, "nodeType": "ArrayTypeName", "src": "4606:9:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "4605:18:11"}, "scope": 812, "src": "4559:107:11", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 326, "nodeType": "Block", "src": "4750:91:11", "statements": [{"expression": {"arguments": [{"id": 319, "name": "_addressToAdd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "4774:13:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 316, "name": "whitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "4760:9:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$1894_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 318, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 1921, "src": "4760:13:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1894_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1894_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4760:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 321, "nodeType": "ExpressionStatement", "src": "4760:28:11"}, {"eventCall": {"arguments": [{"id": 323, "name": "_addressToAdd", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 311, "src": "4820:13:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 322, "name": "AddedToWhitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "4803:16:11", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 324, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4803:31:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 325, "nodeType": "EmitStatement", "src": "4798:36:11"}]}, "functionSelector": "7b9417c8", "id": 327, "implemented": true, "kind": "function", "modifiers": [{"id": 314, "kind": "modifierInvocation", "modifierName": {"id": 313, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 4631, "src": "4735:14:11"}, "nodeType": "ModifierInvocation", "src": "4735:14:11"}], "name": "addAddressToWhitelist", "nameLocation": "4681:21:11", "nodeType": "FunctionDefinition", "parameters": {"id": 312, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 311, "mutability": "mutable", "name": "_addressToAdd", "nameLocation": "4711:13:11", "nodeType": "VariableDeclaration", "scope": 327, "src": "4703:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 310, "name": "address", "nodeType": "ElementaryTypeName", "src": "4703:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4702:23:11"}, "returnParameters": {"id": 315, "nodeType": "ParameterList", "parameters": [], "src": "4750:0:11"}, "scope": 812, "src": "4672:169:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 344, "nodeType": "Block", "src": "4933:104:11", "statements": [{"expression": {"arguments": [{"id": 337, "name": "_addressToRemove", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "4960:16:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 334, "name": "whitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "4943:9:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$1894_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 336, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "remove", "nodeType": "MemberAccess", "referencedDeclaration": 1948, "src": "4943:16:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1894_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1894_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 338, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4943:34:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 339, "nodeType": "ExpressionStatement", "src": "4943:34:11"}, {"eventCall": {"arguments": [{"id": 341, "name": "_addressToRemove", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 329, "src": "5013:16:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 340, "name": "RemovedFromWhitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 61, "src": "4992:20:11", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 342, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4992:38:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 343, "nodeType": "EmitStatement", "src": "4987:43:11"}]}, "functionSelector": "286dd3f5", "id": 345, "implemented": true, "kind": "function", "modifiers": [{"id": 332, "kind": "modifierInvocation", "modifierName": {"id": 331, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 4631, "src": "4918:14:11"}, "nodeType": "ModifierInvocation", "src": "4918:14:11"}], "name": "removeAddressFromWhitelist", "nameLocation": "4856:26:11", "nodeType": "FunctionDefinition", "parameters": {"id": 330, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 329, "mutability": "mutable", "name": "_addressToRemove", "nameLocation": "4891:16:11", "nodeType": "VariableDeclaration", "scope": 345, "src": "4883:24:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 328, "name": "address", "nodeType": "ElementaryTypeName", "src": "4883:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4882:26:11"}, "returnParameters": {"id": 333, "nodeType": "ParameterList", "parameters": [], "src": "4933:0:11"}, "scope": 812, "src": "4847:190:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 359, "nodeType": "Block", "src": "5084:88:11", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 352, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 347, "src": "5121:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 350, "name": "whitelist", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "5102:9:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$1894_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 351, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contains", "nodeType": "MemberAccess", "referencedDeclaration": 1975, "src": "5102:18:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1894_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1894_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}}, "id": 353, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5102:28:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 354, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "5132:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 355, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "NOT_AUTHORIZED", "nodeType": "MemberAccess", "referencedDeclaration": 3620, "src": "5132:21:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 349, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5094:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 356, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5094:60:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 357, "nodeType": "ExpressionStatement", "src": "5094:60:11"}, {"id": 358, "nodeType": "PlaceholderStatement", "src": "5164:1:11"}]}, "id": 360, "name": "isWhitelisted", "nameLocation": "5052:13:11", "nodeType": "ModifierDefinition", "parameters": {"id": 348, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 347, "mutability": "mutable", "name": "_address", "nameLocation": "5074:8:11", "nodeType": "VariableDeclaration", "scope": 360, "src": "5066:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 346, "name": "address", "nodeType": "ElementaryTypeName", "src": "5066:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5065:18:11"}, "src": "5043:129:11", "virtual": false, "visibility": "internal"}, {"body": {"id": 377, "nodeType": "Block", "src": "5328:64:11", "statements": [{"expression": {"arguments": [{"id": 373, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 363, "src": "5362:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, {"id": 374, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 365, "src": "5378:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 372, "name": "_activateOracleGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 811, "src": "5338:23:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GuardedVaults_$3486_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (struct DataTypes.GuardedVaults memory,uint256)"}}, "id": 375, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5338:47:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 376, "nodeType": "ExpressionStatement", "src": "5338:47:11"}]}, "functionSelector": "fc283b86", "id": 378, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"expression": {"id": 368, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5312:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 369, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5312:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 370, "kind": "modifierInvocation", "modifierName": {"id": 367, "name": "isWhitelisted", "nodeType": "IdentifierPath", "referencedDeclaration": 360, "src": "5298:13:11"}, "nodeType": "ModifierInvocation", "src": "5298:25:11"}], "name": "activateOracleGuardian", "nameLocation": "5187:22:11", "nodeType": "FunctionDefinition", "parameters": {"id": 366, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 363, "mutability": "mutable", "name": "vaultToProtect", "nameLocation": "5241:14:11", "nodeType": "VariableDeclaration", "scope": 378, "src": "5210:45:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults"}, "typeName": {"id": 362, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 361, "name": "DataTypes.GuardedVaults", "nodeType": "IdentifierPath", "referencedDeclaration": 3486, "src": "5210:23:11"}, "referencedDeclaration": 3486, "src": "5210:23:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_storage_ptr", "typeString": "struct DataTypes.GuardedVaults"}}, "visibility": "internal"}, {"constant": false, "id": 365, "mutability": "mutable", "name": "blocks", "nameLocation": "5265:6:11", "nodeType": "VariableDeclaration", "scope": 378, "src": "5257:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 364, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5257:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5209:63:11"}, "returnParameters": {"id": 371, "nodeType": "ParameterList", "parameters": [], "src": "5328:0:11"}, "scope": 812, "src": "5178:214:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 452, "nodeType": "Block", "src": "5475:614:11", "statements": [{"assignments": [389], "declarations": [{"constant": false, "id": 389, "mutability": "mutable", "name": "vaultRegistry", "nameLocation": "5500:13:11", "nodeType": "VariableDeclaration", "scope": 452, "src": "5485:28:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IVaultRegistry_$2631", "typeString": "contract IVaultRegistry"}, "typeName": {"id": 388, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 387, "name": "IVaultRegistry", "nodeType": "IdentifierPath", "referencedDeclaration": 2631, "src": "5485:14:11"}, "referencedDeclaration": 2631, "src": "5485:14:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IVaultRegistry_$2631", "typeString": "contract IVaultRegistry"}}, "visibility": "internal"}], "id": 393, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 390, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74, "src": "5516:10:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$2429", "typeString": "contract IGyroConfig"}}, "id": 391, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getVaultRegistry", "nodeType": "MemberAccess", "referencedDeclaration": 3203, "src": "5516:27:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$2429_$returns$_t_contract$_IVaultRegistry_$2631_$bound_to$_t_contract$_IGyroConfig_$2429_$", "typeString": "function (contract IGyroConfig) view returns (contract IVaultRegistry)"}}, "id": 392, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5516:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IVaultRegistry_$2631", "typeString": "contract IVaultRegistry"}}, "nodeType": "VariableDeclarationStatement", "src": "5485:60:11"}, {"assignments": [398], "declarations": [{"constant": false, "id": 398, "mutability": "mutable", "name": "vaults", "nameLocation": "5572:6:11", "nodeType": "VariableDeclaration", "scope": 452, "src": "5555:23:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 396, "name": "address", "nodeType": "ElementaryTypeName", "src": "5555:7:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 397, "nodeType": "ArrayTypeName", "src": "5555:9:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "id": 402, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 399, "name": "vaultRegistry", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 389, "src": "5581:13:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IVaultRegistry_$2631", "typeString": "contract IVaultRegistry"}}, "id": 400, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "listVaults", "nodeType": "MemberAccess", "referencedDeclaration": 2607, "src": "5581:24:11", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function () view external returns (address[] memory)"}}, "id": 401, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5581:26:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5555:52:11"}, {"assignments": [407], "declarations": [{"constant": false, "id": 407, "mutability": "mutable", "name": "direction", "nameLocation": "5637:9:11", "nodeType": "VariableDeclaration", "scope": 452, "src": "5617:29:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}, "typeName": {"id": 406, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 405, "name": "DataTypes.Direction", "nodeType": "IdentifierPath", "referencedDeclaration": 3480, "src": "5617:19:11"}, "referencedDeclaration": 3480, "src": "5617:19:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "visibility": "internal"}], "id": 416, "initialValue": {"condition": {"id": 408, "name": "depositsOnly", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 380, "src": "5649:12:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"expression": {"id": 412, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "5713:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$3563_$", "typeString": "type(library DataTypes)"}}, "id": 413, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 3480, "src": "5713:19:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$3480_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 414, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Both", "nodeType": "MemberAccess", "referencedDeclaration": 3479, "src": "5713:24:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "id": 415, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "5649:88:11", "trueExpression": {"expression": {"expression": {"id": 409, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "5676:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$3563_$", "typeString": "type(library DataTypes)"}}, "id": 410, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 3480, "src": "5676:19:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$3480_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 411, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "In", "nodeType": "MemberAccess", "referencedDeclaration": 3477, "src": "5676:22:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "nodeType": "VariableDeclarationStatement", "src": "5617:120:11"}, {"assignments": [418], "declarations": [{"constant": false, "id": 418, "mutability": "mutable", "name": "blocksToActivate", "nameLocation": "5755:16:11", "nodeType": "VariableDeclaration", "scope": 452, "src": "5747:24:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 417, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5747:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 420, "initialValue": {"id": 419, "name": "safetyBlocksGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "5774:20:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5747:47:11"}, {"body": {"id": 450, "nodeType": "Block", "src": "5848:235:11", "statements": [{"assignments": [436], "declarations": [{"constant": false, "id": 436, "mutability": "mutable", "name": "vaultToProtect", "nameLocation": "5893:14:11", "nodeType": "VariableDeclaration", "scope": 450, "src": "5862:45:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults"}, "typeName": {"id": 435, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 434, "name": "DataTypes.GuardedVaults", "nodeType": "IdentifierPath", "referencedDeclaration": 3486, "src": "5862:23:11"}, "referencedDeclaration": 3486, "src": "5862:23:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_storage_ptr", "typeString": "struct DataTypes.GuardedVaults"}}, "visibility": "internal"}], "id": 444, "initialValue": {"arguments": [{"baseExpression": {"id": 439, "name": "vaults", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 398, "src": "5951:6:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 441, "indexExpression": {"id": 440, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "5958:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5951:9:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 442, "name": "direction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 407, "src": "5978:9:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}], "expression": {"id": 437, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "5910:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$3563_$", "typeString": "type(library DataTypes)"}}, "id": 438, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "GuardedVaults", "nodeType": "MemberAccess", "referencedDeclaration": 3486, "src": "5910:23:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_GuardedVaults_$3486_storage_ptr_$", "typeString": "type(struct DataTypes.GuardedVaults storage pointer)"}}, "id": 443, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5910:91:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5862:139:11"}, {"expression": {"arguments": [{"id": 446, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 436, "src": "6039:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, {"id": 447, "name": "blocksToActivate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 418, "src": "6055:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 445, "name": "_activateOracleGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 811, "src": "6015:23:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GuardedVaults_$3486_memory_ptr_$_t_uint256_$returns$__$", "typeString": "function (struct DataTypes.GuardedVaults memory,uint256)"}}, "id": 448, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6015:57:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 449, "nodeType": "ExpressionStatement", "src": "6015:57:11"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 425, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "5824:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 426, "name": "vaults", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 398, "src": "5828:6:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 427, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5828:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5824:17:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 451, "initializationExpression": {"assignments": [422], "declarations": [{"constant": false, "id": 422, "mutability": "mutable", "name": "i", "nameLocation": "5817:1:11", "nodeType": "VariableDeclaration", "scope": 451, "src": "5809:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 421, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5809:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 424, "initialValue": {"hexValue": "30", "id": 423, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5821:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5809:13:11"}, "loopExpression": {"expression": {"id": 430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5843:3:11", "subExpression": {"id": 429, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "5843:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 431, "nodeType": "ExpressionStatement", "src": "5843:3:11"}, "nodeType": "ForStatement", "src": "5804:279:11"}]}, "functionSelector": "ef2933ec", "id": 453, "implemented": true, "kind": "function", "modifiers": [{"arguments": [{"expression": {"id": 383, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5463:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5463:10:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 385, "kind": "modifierInvocation", "modifierName": {"id": 382, "name": "isWhitelisted", "nodeType": "IdentifierPath", "referencedDeclaration": 360, "src": "5449:13:11"}, "nodeType": "ModifierInvocation", "src": "5449:25:11"}], "name": "pauseProtocol", "nameLocation": "5407:13:11", "nodeType": "FunctionDefinition", "parameters": {"id": 381, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 380, "mutability": "mutable", "name": "depositsOnly", "nameLocation": "5426:12:11", "nodeType": "VariableDeclaration", "scope": 453, "src": "5421:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 379, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5421:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5420:19:11"}, "returnParameters": {"id": 386, "nodeType": "ParameterList", "parameters": [], "src": "5475:0:11"}, "scope": 812, "src": "5398:691:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 615, "nodeType": "Block", "src": "6244:1514:11", "statements": [{"expression": {"id": 474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 465, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 463, "src": "6254:6:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"expression": {"id": 470, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "6280:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 471, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 3546, "src": "6280:22:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$3555_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6280:29:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 469, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "6263:16:11", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct VaultSafetyMode.FlowResult memory[] memory)"}, "typeName": {"baseType": {"id": 467, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 466, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 66, "src": "6267:10:11"}, "referencedDeclaration": 66, "src": "6267:10:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 468, "nodeType": "ArrayTypeName", "src": "6267:12:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}}, "id": 473, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6263:47:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "src": "6254:56:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "id": 475, "nodeType": "ExpressionStatement", "src": "6254:56:11"}, {"body": {"id": 613, "nodeType": "Block", "src": "6377:1375:11", "statements": [{"assignments": [488], "declarations": [{"constant": false, "id": 488, "mutability": "mutable", "name": "amount", "nameLocation": "6399:6:11", "nodeType": "VariableDeclaration", "scope": 613, "src": "6391:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 487, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6391:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 494, "initialValue": {"expression": {"baseExpression": {"expression": {"id": 489, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "6408:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 490, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 3546, "src": "6408:22:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$3555_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 492, "indexExpression": {"id": 491, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "6431:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6408:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultWithAmount_$3555_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory"}}, "id": 493, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 3554, "src": "6408:32:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6391:49:11"}, {"assignments": [499], "declarations": [{"constant": false, "id": 499, "mutability": "mutable", "name": "vault", "nameLocation": "6481:5:11", "nodeType": "VariableDeclaration", "scope": 613, "src": "6454:32:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_memory_ptr", "typeString": "struct DataTypes.VaultInfo"}, "typeName": {"id": 498, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 497, "name": "DataTypes.VaultInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 3508, "src": "6454:19:11"}, "referencedDeclaration": 3508, "src": "6454:19:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_storage_ptr", "typeString": "struct DataTypes.VaultInfo"}}, "visibility": "internal"}], "id": 505, "initialValue": {"expression": {"baseExpression": {"expression": {"id": 500, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "6489:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 501, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 3546, "src": "6489:22:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$3555_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 503, "indexExpression": {"id": 502, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "6512:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6489:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultWithAmount_$3555_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory"}}, "id": 504, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultInfo", "nodeType": "MemberAccess", "referencedDeclaration": 3552, "src": "6489:35:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6454:70:11"}, {"assignments": [510], "declarations": [{"constant": false, "id": 510, "mutability": "mutable", "name": "flowData", "nameLocation": "6565:8:11", "nodeType": "VariableDeclaration", "scope": 613, "src": "6538:35:11", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData"}, "typeName": {"id": 509, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 508, "name": "DataTypes.FlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 3476, "src": "6538:18:11"}, "referencedDeclaration": 3476, "src": "6538:18:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData"}}, "visibility": "internal"}], "id": 515, "initialValue": {"baseExpression": {"id": 511, "name": "persistedFlowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "6576:17:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$3476_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData storage ref)"}}, "id": 514, "indexExpression": {"expression": {"id": 512, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 499, "src": "6594:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "id": 513, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vault", "nodeType": "MemberAccess", "referencedDeclaration": 3488, "src": "6594:11:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6576:30:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage", "typeString": "struct DataTypes.FlowData storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "6538:68:11"}, {"assignments": [520], "declarations": [{"constant": false, "id": 520, "mutability": "mutable", "name": "directionalData", "nameLocation": "6657:15:11", "nodeType": "VariableDeclaration", "scope": 613, "src": "6620:52:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData"}, "typeName": {"id": 519, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 518, "name": "DataTypes.DirectionalFlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 3469, "src": "6620:29:11"}, "referencedDeclaration": 3469, "src": "6620:29:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData"}}, "visibility": "internal"}], "id": 521, "nodeType": "VariableDeclarationStatement", "src": "6620:52:11"}, {"expression": {"id": 530, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 522, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "6686:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"condition": {"expression": {"id": 523, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "6704:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 524, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 3548, "src": "6704:10:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 527, "name": "flowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "6735:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData storage pointer"}}, "id": 528, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "outFlow", "nodeType": "MemberAccess", "referencedDeclaration": 3475, "src": "6735:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "id": 529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "6704:47:11", "trueExpression": {"expression": {"id": 525, "name": "flowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "6717:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData storage pointer"}}, "id": 526, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "inFlow", "nodeType": "MemberAccess", "referencedDeclaration": 3472, "src": "6717:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "src": "6686:65:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "id": 531, "nodeType": "ExpressionStatement", "src": "6686:65:11"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 540, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 532, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "6770:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 533, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6779:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6770:10:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 535, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "6784:5:11", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 536, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "6784:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"id": 537, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "6800:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "id": 538, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastSafetyBlock", "nodeType": "MemberAccess", "referencedDeclaration": 3466, "src": "6800:31:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "6784:47:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "6770:61:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 548, "nodeType": "IfStatement", "src": "6766:157:11", "trueBody": {"id": 547, "nodeType": "Block", "src": "6833:90:11", "statements": [{"expression": {"id": 544, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 541, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 459, "src": "6851:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 542, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "6857:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 543, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "SAFETY_MODE_ACTIVATED", "nodeType": "MemberAccess", "referencedDeclaration": 3707, "src": "6857:28:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "6851:34:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 545, "nodeType": "ExpressionStatement", "src": "6851:34:11"}, {"id": 546, "nodeType": "Break", "src": "6903:5:11"}]}}, {"assignments": [550], "declarations": [{"constant": false, "id": 550, "mutability": "mutable", "name": "shortFlowThreshold", "nameLocation": "6945:18:11", "nodeType": "VariableDeclaration", "scope": 613, "src": "6937:26:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 549, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6937:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 554, "initialValue": {"expression": {"expression": {"id": 551, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 499, "src": "6966:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "id": 552, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "persistedMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 3497, "src": "6966:23:11", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$3462_memory_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata memory"}}, "id": 553, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "shortFlowThreshold", "nodeType": "MemberAccess", "referencedDeclaration": 3461, "src": "6966:42:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6937:71:11"}, {"assignments": [556], "declarations": [{"constant": false, "id": 556, "mutability": "mutable", "name": "newFlow", "nameLocation": "7030:7:11", "nodeType": "VariableDeclaration", "scope": 613, "src": "7022:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 555, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7022:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 575, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"expression": {"id": 557, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "7040:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 558, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 3546, "src": "7040:22:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$3555_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 560, "indexExpression": {"id": 559, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "7063:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7040:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultWithAmount_$3555_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory"}}, "id": 561, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "amount", "nodeType": "MemberAccess", "referencedDeclaration": 3554, "src": "7040:32:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [{"expression": {"id": 564, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "7128:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "id": 565, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "shortFlow", "nodeType": "MemberAccess", "referencedDeclaration": 3464, "src": "7128:25:11", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, {"expression": {"id": 566, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7175:5:11", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "7175:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 568, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 520, "src": "7209:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_memory_ptr", "typeString": "struct DataTypes.DirectionalFlowData memory"}}, "id": 569, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastSeenBlock", "nodeType": "MemberAccess", "referencedDeclaration": 3468, "src": "7209:29:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, {"expression": {"expression": {"id": 570, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 499, "src": "7260:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "id": 571, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "persistedMetadata", "nodeType": "MemberAccess", "referencedDeclaration": 3497, "src": "7260:23:11", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$3462_memory_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata memory"}}, "id": 572, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "shortFlowMemory", "nodeType": "MemberAccess", "referencedDeclaration": 3459, "src": "7260:39:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint64", "typeString": "uint64"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 562, "name": "Flow", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4141, "src": "7091:4:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Flow_$4141_$", "typeString": "type(library Flow)"}}, "id": 563, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "updateFlow", "nodeType": "MemberAccess", "referencedDeclaration": 4140, "src": "7091:15:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"}}, "id": 573, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7091:226:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7040:277:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7022:295:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 578, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 576, "name": "newFlow", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 556, "src": "7336:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 577, "name": "shortFlowThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 550, "src": "7346:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7336:28:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 586, "nodeType": "IfStatement", "src": "7332:122:11", "trueBody": {"id": 585, "nodeType": "Block", "src": "7366:88:11", "statements": [{"expression": {"id": 582, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 579, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 459, "src": "7384:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 580, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "7390:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "VAULT_FLOW_TOO_HIGH", "nodeType": "MemberAccess", "referencedDeclaration": 3692, "src": "7390:26:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "7384:32:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 583, "nodeType": "ExpressionStatement", "src": "7384:32:11"}, {"id": 584, "nodeType": "Break", "src": "7434:5:11"}]}}, {"assignments": [588], "declarations": [{"constant": false, "id": 588, "mutability": "mutable", "name": "activateSafetyMode", "nameLocation": "7473:18:11", "nodeType": "VariableDeclaration", "scope": 613, "src": "7468:23:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 587, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7468:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 595, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 594, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 589, "name": "newFlow", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 556, "src": "7494:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"arguments": [{"id": 592, "name": "shortFlowThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 550, "src": "7529:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 590, "name": "THRESHOLD_BUFFER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 81, "src": "7504:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 591, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 3765, "src": "7504:24:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 593, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7504:44:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7494:54:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "7468:80:11"}, {"condition": {"id": 596, "name": "activateSafetyMode", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "7566:18:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 603, "nodeType": "IfStatement", "src": "7562:114:11", "trueBody": {"id": 602, "nodeType": "Block", "src": "7586:90:11", "statements": [{"expression": {"id": 600, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 597, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 459, "src": "7604:3:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 598, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "7610:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 599, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED", "nodeType": "MemberAccess", "referencedDeclaration": 3695, "src": "7610:51:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "7604:57:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 601, "nodeType": "ExpressionStatement", "src": "7604:57:11"}]}}, {"expression": {"id": 611, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 604, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 463, "src": "7690:6:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "id": 606, "indexExpression": {"id": 605, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "7697:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7690:9:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 608, "name": "newFlow", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 556, "src": "7713:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 609, "name": "activateSafetyMode", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 588, "src": "7722:18:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 607, "name": "FlowResult", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 66, "src": "7702:10:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_FlowResult_$66_storage_ptr_$", "typeString": "type(struct VaultSafetyMode.FlowResult storage pointer)"}}, "id": 610, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7702:39:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "src": "7690:51:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "id": 612, "nodeType": "ExpressionStatement", "src": "7690:51:11"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 479, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "6337:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"expression": {"id": 480, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "6341:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 481, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 3546, "src": "6341:22:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$3555_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 482, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "6341:29:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6337:33:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 614, "initializationExpression": {"assignments": [477], "declarations": [{"constant": false, "id": 477, "mutability": "mutable", "name": "i", "nameLocation": "6334:1:11", "nodeType": "VariableDeclaration", "scope": 614, "src": "6326:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 476, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6326:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 478, "nodeType": "VariableDeclarationStatement", "src": "6326:9:11"}, "loopExpression": {"expression": {"id": 485, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "6372:3:11", "subExpression": {"id": 484, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 477, "src": "6372:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 486, "nodeType": "ExpressionStatement", "src": "6372:3:11"}, "nodeType": "ForStatement", "src": "6321:1431:11"}]}, "id": 616, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkFlows", "nameLocation": "6104:11:11", "nodeType": "FunctionDefinition", "parameters": {"id": 457, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 456, "mutability": "mutable", "name": "order", "nameLocation": "6139:5:11", "nodeType": "VariableDeclaration", "scope": 616, "src": "6116:28:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 455, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 454, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 3549, "src": "6116:15:11"}, "referencedDeclaration": 3549, "src": "6116:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "6115:30:11"}, "returnParameters": {"id": 464, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 459, "mutability": "mutable", "name": "err", "nameLocation": "6207:3:11", "nodeType": "VariableDeclaration", "scope": 616, "src": "6193:17:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 458, "name": "string", "nodeType": "ElementaryTypeName", "src": "6193:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 463, "mutability": "mutable", "name": "result", "nameLocation": "6232:6:11", "nodeType": "VariableDeclaration", "scope": 616, "src": "6212:26:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}, "typeName": {"baseType": {"id": 461, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 460, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 66, "src": "6212:10:11"}, "referencedDeclaration": 66, "src": "6212:10:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 462, "nodeType": "ArrayTypeName", "src": "6212:12:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}, "visibility": "internal"}], "src": "6192:47:11"}, "scope": 812, "src": "6095:1663:11", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 721, "nodeType": "Block", "src": "7853:777:11", "statements": [{"body": {"id": 719, "nodeType": "Block", "src": "7919:705:11", "statements": [{"assignments": [641], "declarations": [{"constant": false, "id": 641, "mutability": "mutable", "name": "vault", "nameLocation": "7960:5:11", "nodeType": "VariableDeclaration", "scope": 719, "src": "7933:32:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_memory_ptr", "typeString": "struct DataTypes.VaultInfo"}, "typeName": {"id": 640, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 639, "name": "DataTypes.VaultInfo", "nodeType": "IdentifierPath", "referencedDeclaration": 3508, "src": "7933:19:11"}, "referencedDeclaration": 3508, "src": "7933:19:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_storage_ptr", "typeString": "struct DataTypes.VaultInfo"}}, "visibility": "internal"}], "id": 647, "initialValue": {"expression": {"baseExpression": {"expression": {"id": 642, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 619, "src": "7968:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 643, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 3546, "src": "7968:22:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$3555_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 645, "indexExpression": {"id": 644, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 627, "src": "7991:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7968:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultWithAmount_$3555_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory"}}, "id": 646, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultInfo", "nodeType": "MemberAccess", "referencedDeclaration": 3552, "src": "7968:35:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "nodeType": "VariableDeclarationStatement", "src": "7933:70:11"}, {"assignments": [652], "declarations": [{"constant": false, "id": 652, "mutability": "mutable", "name": "flowData", "nameLocation": "8044:8:11", "nodeType": "VariableDeclaration", "scope": 719, "src": "8017:35:11", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData"}, "typeName": {"id": 651, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 650, "name": "DataTypes.FlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 3476, "src": "8017:18:11"}, "referencedDeclaration": 3476, "src": "8017:18:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData"}}, "visibility": "internal"}], "id": 657, "initialValue": {"baseExpression": {"id": 653, "name": "persistedFlowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "8055:17:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$3476_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData storage ref)"}}, "id": 656, "indexExpression": {"expression": {"id": 654, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 641, "src": "8073:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_VaultInfo_$3508_memory_ptr", "typeString": "struct DataTypes.VaultInfo memory"}}, "id": 655, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vault", "nodeType": "MemberAccess", "referencedDeclaration": 3488, "src": "8073:11:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8055:30:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage", "typeString": "struct DataTypes.FlowData storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "8017:68:11"}, {"assignments": [662], "declarations": [{"constant": false, "id": 662, "mutability": "mutable", "name": "directionalData", "nameLocation": "8137:15:11", "nodeType": "VariableDeclaration", "scope": 719, "src": "8099:53:11", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData"}, "typeName": {"id": 661, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 660, "name": "DataTypes.DirectionalFlowData", "nodeType": "IdentifierPath", "referencedDeclaration": 3469, "src": "8099:29:11"}, "referencedDeclaration": 3469, "src": "8099:29:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData"}}, "visibility": "internal"}], "id": 663, "nodeType": "VariableDeclarationStatement", "src": "8099:53:11"}, {"condition": {"expression": {"id": 664, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 619, "src": "8170:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 665, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "mint", "nodeType": "MemberAccess", "referencedDeclaration": 3548, "src": "8170:10:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 677, "nodeType": "Block", "src": "8254:67:11", "statements": [{"expression": {"id": 675, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 672, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "8272:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 673, "name": "flowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 652, "src": "8290:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData storage pointer"}}, "id": 674, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "outFlow", "nodeType": "MemberAccess", "referencedDeclaration": 3475, "src": "8290:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "src": "8272:34:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 676, "nodeType": "ExpressionStatement", "src": "8272:34:11"}]}, "id": 678, "nodeType": "IfStatement", "src": "8166:155:11", "trueBody": {"id": 671, "nodeType": "Block", "src": "8182:66:11", "statements": [{"expression": {"id": 669, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 666, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "8200:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 667, "name": "flowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 652, "src": "8218:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage_ptr", "typeString": "struct DataTypes.FlowData storage pointer"}}, "id": 668, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "inFlow", "nodeType": "MemberAccess", "referencedDeclaration": 3472, "src": "8218:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "src": "8200:33:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 670, "nodeType": "ExpressionStatement", "src": "8200:33:11"}]}}, {"expression": {"id": 687, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 679, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "8334:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 681, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastSeenBlock", "nodeType": "MemberAccess", "referencedDeclaration": 3468, "src": "8334:29:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 684, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "8373:5:11", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 685, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "8373:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 683, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8366:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint64_$", "typeString": "type(uint64)"}, "typeName": {"id": 682, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "8366:6:11", "typeDescriptions": {}}}, "id": 686, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8366:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "8334:52:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 688, "nodeType": "ExpressionStatement", "src": "8334:52:11"}, {"expression": {"id": 699, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 689, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "8400:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 691, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "shortFlow", "nodeType": "MemberAccess", "referencedDeclaration": 3464, "src": "8400:25:11", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"baseExpression": {"id": 694, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 623, "src": "8436:6:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "id": 696, "indexExpression": {"id": 695, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 627, "src": "8443:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8436:9:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "id": 697, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "newFlow", "nodeType": "MemberAccess", "referencedDeclaration": 63, "src": "8436:17:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 693, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8428:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 692, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "8428:7:11", "typeDescriptions": {}}}, "id": 698, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8428:26:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "8400:54:11", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 700, "nodeType": "ExpressionStatement", "src": "8400:54:11"}, {"condition": {"expression": {"baseExpression": {"id": 701, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 623, "src": "8472:6:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory[] memory"}}, "id": 703, "indexExpression": {"id": 702, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 627, "src": "8479:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8472:9:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult memory"}}, "id": 704, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "safetyModeActivated", "nodeType": "MemberAccess", "referencedDeclaration": 65, "src": "8472:29:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 718, "nodeType": "IfStatement", "src": "8468:146:11", "trueBody": {"id": 717, "nodeType": "Block", "src": "8503:111:11", "statements": [{"expression": {"id": 715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 705, "name": "directionalData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 662, "src": "8521:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage_ptr", "typeString": "struct DataTypes.DirectionalFlowData storage pointer"}}, "id": 707, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastSafetyBlock", "nodeType": "MemberAccess", "referencedDeclaration": 3466, "src": "8521:31:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 713, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 710, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "8562:5:11", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 711, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "8562:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 712, "name": "safetyBlocksAutomatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 76, "src": "8577:21:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8562:36:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 709, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8555:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint64_$", "typeString": "type(uint64)"}, "typeName": {"id": 708, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "8555:6:11", "typeDescriptions": {}}}, "id": 714, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8555:44:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "8521:78:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 716, "nodeType": "ExpressionStatement", "src": "8521:78:11"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 629, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 627, "src": "7879:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"expression": {"id": 630, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 619, "src": "7883:5:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order memory"}}, "id": 631, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultsWithAmount", "nodeType": "MemberAccess", "referencedDeclaration": 3546, "src": "7883:22:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_VaultWithAmount_$3555_memory_ptr_$dyn_memory_ptr", "typeString": "struct DataTypes.VaultWithAmount memory[] memory"}}, "id": 632, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "7883:29:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7879:33:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 720, "initializationExpression": {"assignments": [627], "declarations": [{"constant": false, "id": 627, "mutability": "mutable", "name": "i", "nameLocation": "7876:1:11", "nodeType": "VariableDeclaration", "scope": 720, "src": "7868:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 626, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7868:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 628, "nodeType": "VariableDeclarationStatement", "src": "7868:9:11"}, "loopExpression": {"expression": {"id": 635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "7914:3:11", "subExpression": {"id": 634, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 627, "src": "7914:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 636, "nodeType": "ExpressionStatement", "src": "7914:3:11"}, "nodeType": "ForStatement", "src": "7863:761:11"}]}, "id": 722, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateFlows", "nameLocation": "7773:12:11", "nodeType": "FunctionDefinition", "parameters": {"id": 624, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 619, "mutability": "mutable", "name": "order", "nameLocation": "7809:5:11", "nodeType": "VariableDeclaration", "scope": 722, "src": "7786:28:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 618, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 617, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 3549, "src": "7786:15:11"}, "referencedDeclaration": 3549, "src": "7786:15:11", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$3549_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}, {"constant": false, "id": 623, "mutability": "mutable", "name": "result", "nameLocation": "7836:6:11", "nodeType": "VariableDeclaration", "scope": 722, "src": "7816:26:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_memory_ptr_$dyn_memory_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}, "typeName": {"baseType": {"id": 621, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 620, "name": "FlowResult", "nodeType": "IdentifierPath", "referencedDeclaration": 66, "src": "7816:10:11"}, "referencedDeclaration": 66, "src": "7816:10:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowResult_$66_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult"}}, "id": 622, "nodeType": "ArrayTypeName", "src": "7816:12:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_FlowResult_$66_storage_$dyn_storage_ptr", "typeString": "struct VaultSafetyMode.FlowResult[]"}}, "visibility": "internal"}], "src": "7785:58:11"}, "returnParameters": {"id": 625, "nodeType": "ParameterList", "parameters": [], "src": "7853:0:11"}, "scope": 812, "src": "7764:866:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 810, "nodeType": "Block", "src": "8753:851:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 733, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 731, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 727, "src": "8771:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 732, "name": "safetyBlocksGuardian", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 78, "src": "8781:20:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8771:30:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 734, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3711, "src": "8803:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$3711_$", "typeString": "type(library Errors)"}}, "id": 735, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ORACLE_GUARDIAN_TIME_LIMIT", "nodeType": "MemberAccess", "referencedDeclaration": 3698, "src": "8803:33:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 730, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8763:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 736, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8763:74:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 737, "nodeType": "ExpressionStatement", "src": "8763:74:11"}, {"assignments": [739], "declarations": [{"constant": false, "id": 739, "mutability": "mutable", "name": "targetBlock", "nameLocation": "8855:11:11", "nodeType": "VariableDeclaration", "scope": 810, "src": "8848:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}, "typeName": {"id": 738, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "8848:6:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "visibility": "internal"}], "id": 747, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 745, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 742, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "8876:5:11", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 743, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "number", "nodeType": "MemberAccess", "src": "8876:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 744, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 727, "src": "8891:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8876:21:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 741, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8869:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint64_$", "typeString": "type(uint64)"}, "typeName": {"id": 740, "name": "uint64", "nodeType": "ElementaryTypeName", "src": "8869:6:11", "typeDescriptions": {}}}, "id": 746, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8869:29:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "VariableDeclarationStatement", "src": "8848:50:11"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 760, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}, "id": 753, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 748, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 725, "src": "8925:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 749, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "direction", "nodeType": "MemberAccess", "referencedDeclaration": 3485, "src": "8925:24:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 750, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "8953:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$3563_$", "typeString": "type(library DataTypes)"}}, "id": 751, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 3480, "src": "8953:19:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$3480_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 752, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "In", "nodeType": "MemberAccess", "referencedDeclaration": 3477, "src": "8953:22:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "src": "8925:50:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}, "id": 759, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 754, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 725, "src": "8991:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 755, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "direction", "nodeType": "MemberAccess", "referencedDeclaration": 3485, "src": "8991:24:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 756, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "9019:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$3563_$", "typeString": "type(library DataTypes)"}}, "id": 757, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 3480, "src": "9019:19:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$3480_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 758, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Both", "nodeType": "MemberAccess", "referencedDeclaration": 3479, "src": "9019:24:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "src": "8991:52:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "8925:118:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 778, "nodeType": "IfStatement", "src": "8908:339:11", "trueBody": {"id": 777, "nodeType": "Block", "src": "9054:193:11", "statements": [{"expression": {"id": 768, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"expression": {"baseExpression": {"id": 761, "name": "persistedFlowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "9068:17:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$3476_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData storage ref)"}}, "id": 764, "indexExpression": {"expression": {"id": 762, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 725, "src": "9086:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 763, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultAddress", "nodeType": "MemberAccess", "referencedDeclaration": 3482, "src": "9086:27:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9068:46:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage", "typeString": "struct DataTypes.FlowData storage ref"}}, "id": 765, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "inFlow", "nodeType": "MemberAccess", "referencedDeclaration": 3472, "src": "9068:53:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "id": 766, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastSafetyBlock", "nodeType": "MemberAccess", "referencedDeclaration": 3466, "src": "9068:69:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 767, "name": "targetBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 739, "src": "9140:11:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "9068:83:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 769, "nodeType": "ExpressionStatement", "src": "9068:83:11"}, {"eventCall": {"arguments": [{"expression": {"id": 771, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 725, "src": "9194:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 772, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultAddress", "nodeType": "MemberAccess", "referencedDeclaration": 3482, "src": "9194:27:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 773, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 727, "src": "9223:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 774, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9231:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 770, "name": "OracleGuardianActivated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "9170:23:11", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$", "typeString": "function (address,uint256,bool)"}}, "id": 775, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9170:66:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 776, "nodeType": "EmitStatement", "src": "9165:71:11"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 791, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}, "id": 784, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 779, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 725, "src": "9273:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 780, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "direction", "nodeType": "MemberAccess", "referencedDeclaration": 3485, "src": "9273:24:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 781, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "9301:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$3563_$", "typeString": "type(library DataTypes)"}}, "id": 782, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 3480, "src": "9301:19:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$3480_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 783, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Out", "nodeType": "MemberAccess", "referencedDeclaration": 3478, "src": "9301:23:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "src": "9273:51:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}, "id": 790, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 785, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 725, "src": "9340:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 786, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "direction", "nodeType": "MemberAccess", "referencedDeclaration": 3485, "src": "9340:24:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 787, "name": "DataTypes", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 3563, "src": "9368:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DataTypes_$3563_$", "typeString": "type(library DataTypes)"}}, "id": 788, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "Direction", "nodeType": "MemberAccess", "referencedDeclaration": 3480, "src": "9368:19:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Direction_$3480_$", "typeString": "type(enum DataTypes.Direction)"}}, "id": 789, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Both", "nodeType": "MemberAccess", "referencedDeclaration": 3479, "src": "9368:24:11", "typeDescriptions": {"typeIdentifier": "t_enum$_Direction_$3480", "typeString": "enum DataTypes.Direction"}}, "src": "9340:52:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "9273:119:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 809, "nodeType": "IfStatement", "src": "9256:342:11", "trueBody": {"id": 808, "nodeType": "Block", "src": "9403:195:11", "statements": [{"expression": {"id": 799, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"expression": {"baseExpression": {"id": 792, "name": "persistedFlowData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71, "src": "9417:17:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FlowData_$3476_storage_$", "typeString": "mapping(address => struct DataTypes.FlowData storage ref)"}}, "id": 795, "indexExpression": {"expression": {"id": 793, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 725, "src": "9435:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 794, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultAddress", "nodeType": "MemberAccess", "referencedDeclaration": 3482, "src": "9435:27:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9417:46:11", "typeDescriptions": {"typeIdentifier": "t_struct$_FlowData_$3476_storage", "typeString": "struct DataTypes.FlowData storage ref"}}, "id": 796, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "outFlow", "nodeType": "MemberAccess", "referencedDeclaration": 3475, "src": "9417:54:11", "typeDescriptions": {"typeIdentifier": "t_struct$_DirectionalFlowData_$3469_storage", "typeString": "struct DataTypes.DirectionalFlowData storage ref"}}, "id": 797, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastSafetyBlock", "nodeType": "MemberAccess", "referencedDeclaration": 3466, "src": "9417:70:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 798, "name": "targetBlock", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 739, "src": "9490:11:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "src": "9417:84:11", "typeDescriptions": {"typeIdentifier": "t_uint64", "typeString": "uint64"}}, "id": 800, "nodeType": "ExpressionStatement", "src": "9417:84:11"}, {"eventCall": {"arguments": [{"expression": {"id": 802, "name": "vaultToProtect", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 725, "src": "9544:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults memory"}}, "id": 803, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "vaultAddress", "nodeType": "MemberAccess", "referencedDeclaration": 3482, "src": "9544:27:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 804, "name": "blocks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 727, "src": "9573:6:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 805, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "9581:5:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 801, "name": "OracleGuardianActivated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53, "src": "9520:23:11", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$", "typeString": "function (address,uint256,bool)"}}, "id": 806, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9520:67:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 807, "nodeType": "EmitStatement", "src": "9515:72:11"}]}}]}, "id": 811, "implemented": true, "kind": "function", "modifiers": [], "name": "_activateOracleGuardian", "nameLocation": "8645:23:11", "nodeType": "FunctionDefinition", "parameters": {"id": 728, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 725, "mutability": "mutable", "name": "vaultToProtect", "nameLocation": "8700:14:11", "nodeType": "VariableDeclaration", "scope": 811, "src": "8669:45:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_memory_ptr", "typeString": "struct DataTypes.GuardedVaults"}, "typeName": {"id": 724, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 723, "name": "DataTypes.GuardedVaults", "nodeType": "IdentifierPath", "referencedDeclaration": 3486, "src": "8669:23:11"}, "referencedDeclaration": 3486, "src": "8669:23:11", "typeDescriptions": {"typeIdentifier": "t_struct$_GuardedVaults_$3486_storage_ptr", "typeString": "struct DataTypes.GuardedVaults"}}, "visibility": "internal"}, {"constant": false, "id": 727, "mutability": "mutable", "name": "blocks", "nameLocation": "8724:6:11", "nodeType": "VariableDeclaration", "scope": 811, "src": "8716:14:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 726, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8716:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8668:63:11"}, "returnParameters": {"id": 729, "nodeType": "ParameterList", "parameters": [], "src": "8753:0:11"}, "scope": 812, "src": "8636:968:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 813, "src": "973:8633:11", "usedErrors": []}], "src": "174:9433:11"}, "bytecode": "", "bytecodeSha1": "ec2d23ac0f900e95a7ae67f45e4257c721ce560a", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "VaultSafetyMode", "coverageMap": {"branches": {"10": {"GovernableBase.acceptGovernance": {"96": [910, 939, true]}, "GovernableBase.changeGovernor": {"97": [651, 685, true]}}, "11": {"VaultSafetyMode._activateOracleGuardian": {"85": [8771, 8801, true], "86": [8925, 8975, true], "87": [8991, 9043, false], "88": [9273, 9324, true], "89": [9340, 9392, false]}, "VaultSafetyMode._checkFlows": {"78": [6704, 6714, true], "79": [6770, 6780, false], "80": [6784, 6831, false], "81": [7336, 7364, false], "82": [7566, 7584, false]}, "VaultSafetyMode._updateFlows": {"83": [8170, 8180, false], "84": [8472, 8501, false]}, "VaultSafetyMode.activateOracleGuardian": {"77": [5102, 5130, true]}, "VaultSafetyMode.checkAndPersistMint": {"73": [2413, 2467, true], "74": [3041, 3051, true]}, "VaultSafetyMode.checkAndPersistRedeem": {"70": [4150, 4161, true], "71": [4280, 4301, false], "72": [4321, 4392, false]}, "VaultSafetyMode.isMintSafe": {"75": [2765, 2775, false]}, "VaultSafetyMode.isRedeemSafe": {"69": [3704, 3714, false]}, "VaultSafetyMode.pauseProtocol": {"76": [5649, 5661, true]}}, "12": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "18": {}, "20": {}, "21": {}, "22": {}, "23": {}, "24": {}, "25": {}, "34": {}, "36": {}, "37": {}, "38": {}, "39": {}, "40": {"FixedPoint.intPowDown": {"92": [4686, 4698, false]}}, "41": {"Flow.updateFlow": {"93": [551, 580, true], "94": [584, 600, false], "95": [655, 683, false]}}, "42": {}, "43": {"StringExtensions.compareStrings": {"98": [332, 366, false]}}, "8": {"EnumerableSet._remove": {"90": [2439, 2454, false], "91": [2921, 2947, false]}}, "9": {}}, "statements": {"10": {"GovernableBase.acceptGovernance": {"0": [902, 963], "1": [1017, 1043], "2": [1053, 1081], "3": [1091, 1140]}, "GovernableBase.changeGovernor": {"17": [643, 711], "18": [721, 750], "19": [760, 801]}}, "11": {"VaultSafetyMode._activateOracleGuardian": {"46": [8763, 8837], "47": [9068, 9151], "48": [9165, 9236], "49": [9417, 9501], "50": [9515, 9587]}, "VaultSafetyMode._checkFlows": {"24": [6254, 6310], "25": [6686, 6751], "26": [6851, 6885], "27": [6903, 6908], "28": [7384, 7416], "29": [7434, 7439], "30": [7604, 7661], "31": [7690, 7741], "32": [6372, 6375]}, "VaultSafetyMode._updateFlows": {"37": [8200, 8233], "38": [8272, 8306], "39": [8334, 8386], "40": [8400, 8454], "41": [8521, 8599], "42": [7914, 7917]}, "VaultSafetyMode.activateOracleGuardian": {"22": [5338, 5385]}, "VaultSafetyMode.addAddressToWhitelist": {"8": [4760, 4788], "9": [4798, 4834]}, "VaultSafetyMode.checkAndPersistMint": {"15": [3033, 3077]}, "VaultSafetyMode.checkAndPersistRedeem": {"10": [4142, 4187], "11": [4412, 4434], "12": [4473, 4484], "13": [4519, 4546]}, "VaultSafetyMode.getWhitelist": {"14": [4634, 4659]}, "VaultSafetyMode.isMintSafe": {"16": [2791, 2819]}, "VaultSafetyMode.isRedeemSafe": {"6": [3730, 3758], "7": [3789, 3818]}, "VaultSafetyMode.pauseProtocol": {"20": [6015, 6072], "21": [5843, 5846]}, "VaultSafetyMode.removeAddressFromWhitelist": {"4": [4943, 4977], "5": [4987, 5030]}}, "12": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "18": {}, "20": {}, "21": {}, "22": {}, "23": {}, "24": {}, "25": {}, "34": {}, "36": {"ConfigHelpers.getRootSafetyCheck": {"34": [1251, 1331]}, "ConfigHelpers.getVaultRegistry": {"45": [1443, 1522]}}, "37": {}, "38": {}, "39": {}, "40": {"FixedPoint.intPowDown": {"66": [4718, 4748], "67": [4776, 4784], "68": [4798, 4824]}, "FixedPoint.mulDown": {"60": [865, 885]}}, "41": {"Flow.updateFlow": {"57": [616, 634], "58": [848, 893], "59": [913, 944]}}, "42": {}, "43": {"StringExtensions.compareStrings": {"35": [382, 394], "36": [414, 465]}}, "8": {"EnumerableSet._add": {"61": [1751, 1774], "62": [1909, 1949], "63": [1963, 1974], "64": [2005, 2017]}, "EnumerableSet._contains": {"44": [3760, 3791]}, "EnumerableSet._remove": {"51": [3109, 3147], "52": [3221, 3257], "53": [3393, 3410], "54": [3478, 3504], "55": [3519, 3530], "56": [3561, 3573]}, "EnumerableSet._values": {"65": [5070, 5088]}, "EnumerableSet.add": {"33": [7631, 7688]}, "EnumerableSet.contains": {"43": [8196, 8258]}, "EnumerableSet.remove": {"23": [7952, 8012]}}, "9": {}}}, "dependencies": ["ConfigHelpers", "ConfigKeys", "DataTypes", "OpenZeppelin/openzeppelin-contracts@4.3.2/EnumerableSet", "Errors", "FixedPoint", "Flow", "Governable", "GovernableBase", "IAssetRegistry", "IBatchVaultPriceOracle", "ICapAuthentication", "IFeeBank", "IFeeHandler", "IGYDToken", "IGovernable", "IGyroConfig", "IMotherboard", "IPAMM", "IReserve", "IReserveManager", "ISafetyCheck", "IVaultRegistry", "LogExpMath", "StringExtensions"], "deployedBytecode": "", "deployedSourceMap": "973:8633:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1967:47;;2010:4;1967:47;;;;;160:25:45;;;148:2;133:18;1967:47:11;;;;;;;;325:32:10;;;;;-1:-1:-1;;;;;325:32:10;;;;;;-1:-1:-1;;;;;360:32:45;;;342:51;;330:2;315:18;325:32:10;196:203:45;846:301:10;;;:::i;:::-;;1747:63:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1747:63:11;;;;;-1:-1:-1;;;;;;;;1747:63:11;;;;;;;;;-1:-1:-1;;;1747:63:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4847:190::-;;;;;;:::i;:::-;;:::i;1817:39::-;;;;;3595:240;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4672:169::-;;;;;;:::i;:::-;;:::i;1915:45::-;;;;;4042:511;;;;;;:::i;:::-;;:::i;1863:46::-;;;;;4559:107;;;:::i;:::-;;;;;;;:::i;2935:508::-;;;;;;:::i;:::-;;:::i;2659:237::-;;;;;;:::i;:::-;;:::i;363:39:10:-;;;;;-1:-1:-1;;;;;363:39:10;;;555:253;;;;;;:::i;:::-;;:::i;5398:691:11:-;;;;;;:::i;:::-;;:::i;5178:214::-;;;;;;:::i;:::-;;:::i;846:301:10:-;924:15;;941:21;;;;;;;;;;;;-1:-1:-1;;;941:21:10;;;;;-1:-1:-1;;;;;924:15:10;910:10;:29;902:61;;;;-1:-1:-1;;;902:61:10;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;973:23:10;999:8;;;1028:15;;-1:-1:-1;;;;;;1017:26:10;;;-1:-1:-1;;;;;1028:15:10;;;1017:26;;;;;;;1053:28;;;1096:44;;;999:8;;;;10500:34:45;;;1129:10:10;10565:2:45;10550:18;;10543:43;999:8:10;1096:44;;10435:18:45;1096:44:10;;;;;;;;892:255;846:301::o;4847:190:11:-;467:8:10;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:10;;;;;-1:-1:-1;;;;;467:8:10;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:10;;;;;;;;:::i;:::-;-1:-1:-1;4943:34:11::1;:9;4960:16:::0;4943::::1;:34::i;:::-;-1:-1:-1::0;4992:38:11::1;::::0;-1:-1:-1;;;;;4992:38:11;::::1;::::0;::::1;::::0;;;::::1;4847:190:::0;:::o;3595:240::-;3670:17;3704:5;:10;;;3699:130;;3740:18;3752:5;3740:11;:18::i;:::-;-1:-1:-1;3730:28:11;3595:240;-1:-1:-1;;3595:240:11:o;3699:130::-;-1:-1:-1;3795:23:11;;;;;;;;;;;;-1:-1:-1;;;3795:23:11;;;;3699:130;3595:240;;;:::o;4672:169::-;467:8:10;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:10;;;;;-1:-1:-1;;;;;467:8:10;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:10;;;;;;;;:::i;:::-;-1:-1:-1;4760:28:11::1;:9;4774:13:::0;4760::::1;:28::i;:::-;-1:-1:-1::0;4803:31:11::1;::::0;-1:-1:-1;;;;;4803:31:11;::::1;::::0;::::1;::::0;;;::::1;4672:169:::0;:::o;4042:511::-;2435:31;:10;-1:-1:-1;;;;;2435:29:11;;:31::i;:::-;-1:-1:-1;;;;;2413:54:11;:10;-1:-1:-1;;;;;2413:54:11;;2469:21;;;;;;;;;;;;;-1:-1:-1;;;2469:21:11;;;2405:86;;;;;-1:-1:-1;;;2405:86:11;;;;;;;;:::i;:::-;;4151:5:::1;:10;;;4150:11;4163:23;;;;;;;;;;;;;-1:-1:-1::0;;;4163:23:11::1;;::::0;4142:45:::1;;;;;-1:-1:-1::0;;;4142:45:11::1;;;;;;;;:::i;:::-;;4198:17;4217:26:::0;4247:18:::1;4259:5;4247:11;:18::i;:::-;4280:17:::0;;4197:68;;-1:-1:-1;4197:68:11;-1:-1:-1;4280:21:11;4276:233:::1;;4340:51;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4340:51:11::1;::::0;::::1;::::0;4321:71:::1;::::0;:3;;:18:::1;:71::i;:::-;4317:182;;;4417:17;4430:3;4417:17;;;;;;:::i;:::-;;;;;;;;4317:182;;;4480:3;4473:11;;-1:-1:-1::0;;;4473:11:11::1;;;;;;;;:::i;4317:182::-;4519:27;4532:5;4539:6;4519:12;:27::i;:::-;4132:421;;4042:511:::0;:::o;4559:107::-;4606:16;4641:18;:9;:16;:18::i;:::-;4634:25;;4559:107;:::o;2935:508::-;2435:31;:10;-1:-1:-1;;;;;2435:29:11;;:31::i;:::-;-1:-1:-1;;;;;2413:54:11;:10;-1:-1:-1;;;;;2413:54:11;;2469:21;;;;;;;;;;;;;-1:-1:-1;;;2469:21:11;;;2405:86;;;;;-1:-1:-1;;;2405:86:11;;;;;;;;:::i;:::-;;3041:5:::1;:10;;;3053:23;;;;;;;;;;;;;-1:-1:-1::0;;;3053:23:11::1;;::::0;3033:44:::1;;;;;-1:-1:-1::0;;;3033:44:11::1;;;;;;;;:::i;2659:237::-:0;2732:17;2765:5;:10;;;2761:129;;;2801:18;2813:5;2801:11;:18::i;555:253:10:-;467:8;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:10;;;;;-1:-1:-1;;;;;467:8:10;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:10;;;;;;;;:::i;:::-;-1:-1:-1;687:23:10::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;687:23:10::1;::::0;::::1;::::0;-1:-1:-1;;;;;651:34:10;::::1;643:68;;;;-1:-1:-1::0;;;643:68:10::1;;;;;;;;:::i;:::-;-1:-1:-1::0;721:15:10::1;:29:::0;;-1:-1:-1;;;;;;721:29:10::1;-1:-1:-1::0;;;;;721:29:10;::::1;::::0;;::::1;::::0;;;765:36:::1;::::0;342:51:45;;;765:36:10::1;::::0;330:2:45;315:18;765:36:10::1;196:203:45::0;5398:691:11;5463:10;5102:28;:9;5463:10;5102:18;:28::i;:::-;5132:21;;;;;;;;;;;;;-1:-1:-1;;;5132:21:11;;;5094:60;;;;;-1:-1:-1;;;5094:60:11;;;;;;;;:::i;:::-;;5485:28:::1;5516:29;:10;-1:-1:-1::0;;;;;5516:27:11::1;;:29::i;:::-;5485:60;;5555:23;5581:13;-1:-1:-1::0;;;;;5581:24:11::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;5581:26:11::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;5555:52;;5617:29;5649:12;:88;;5713:24;5649:88;;;5676:22;5649:88;5617:120:::0;-1:-1:-1;5774:20:11::1;5747:24;5804:279;5828:6;:13;5824:1;:17;5804:279;;;5862:45;5910:91;;;;;;;;5951:6;5958:1;5951:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;5910:91:11::1;;;;;5978:9;5910:91;;;;;;;;:::i;:::-;::::0;;5862:139;-1:-1:-1;6015:57:11::1;5862:139:::0;6055:16;6015:23:::1;:57::i;:::-;-1:-1:-1::0;5843:3:11;::::1;::::0;::::1;:::i;:::-;;;;5804:279;;;;5475:614;;;;5398:691:::0;;:::o;5178:214::-;5312:10;5102:28;:9;5312:10;5102:18;:28::i;:::-;5132:21;;;;;;;;;;;;;-1:-1:-1;;;5132:21:11;;;5094:60;;;;;-1:-1:-1;;;5094:60:11;;;;;;;;:::i;:::-;;5338:47:::1;5362:14;5378:6;5338:23;:47::i;7863:156:8:-:0;7936:4;7959:53;7967:3;-1:-1:-1;;;;;7987:23:8;;7959:7;:53::i;:::-;7952:60;;7863:156;;;;;:::o;6095:1663:11:-;6193:17;6212:26;6280:5;:22;;;:29;-1:-1:-1;;;;;6263:47:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;6263:47:11;;;;;;;;;;;;;;;;6254:56;;6326:9;6321:1431;6341:22;;:29;6337:33;;6321:1431;;;6391:14;6408:5;:22;;;6431:1;6408:25;;;;;;;;:::i;:::-;;;;;;;:32;;;6391:49;;6454:32;6489:5;:22;;;6512:1;6489:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;6594:11;;-1:-1:-1;;;;;6576:30:11;6489:35;6576:30;;;:17;:30;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;6489:35:11;;-1:-1:-1;6576:30:11;6704:5;:10;;;:47;;6735:8;:16;;6704:47;;;6717:8;6704:47;6686:65;;;;;;;;;;-1:-1:-1;;;;;6686:65:11;;;;-1:-1:-1;;;;;;;;6686:65:11;;;;;;;;-1:-1:-1;;;6686:65:11;;;;;;;;;-1:-1:-1;6770:10:11;;;;;:61;;;6800:15;:31;;;-1:-1:-1;;;;;6784:47:11;:12;:47;;6770:61;6766:157;;;6857:28;;;;;;;;;;;;;-1:-1:-1;;;6857:28:11;;;6851:34;;6903:5;;;;;;6766:157;6937:26;6966:5;:23;;;:42;;;6937:71;;7022:15;7091:226;7128:15;:25;;;-1:-1:-1;;;;;7091:226:11;7175:12;7209:15;:29;;;-1:-1:-1;;;;;7091:226:11;7260:5;:23;;;:39;;;7091:15;:226::i;:::-;7040:22;;:25;;7063:1;;7040:25;;;;;;:::i;:::-;;;;;;;:32;;;:277;;;;:::i;:::-;7022:295;;7346:18;7336:7;:28;7332:122;;;7390:26;;;;;;;;;;;;;-1:-1:-1;;;7390:26:11;;;7384:32;;7434:5;;;;;;;;7332:122;7468:23;7504:44;2010:4;7529:18;7504:24;:44::i;:::-;7494:7;:54;7468:80;;7566:18;7562:114;;;7610:51;;;;;;;;;;;;;-1:-1:-1;;;7610:51:11;;;7604:57;;7562:114;7702:39;;;;;;;;7713:7;7702:39;;;;7722:18;7702:39;;;;;7690:6;7697:1;7690:9;;;;;;;;:::i;:::-;;;;;;:51;;;;6377:1375;;;;;;;6372:3;;;;;:::i;:::-;;;;6321:1431;;;;6095:1663;;;:::o;7545:150:8:-;7615:4;7638:50;7643:3;-1:-1:-1;;;;;7663:23:8;;7638:4;:50::i;1152:186:36:-;1271:59;;-1:-1:-1;;;1271:59:36;;1293:36;1271:59;;;160:25:45;1227:12:36;;-1:-1:-1;;;;;1271:21:36;;;;;133:18:45;;1271:59:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;231:241:43:-;312:4;357:1;351:15;338:1;332:15;:34;328:77;;-1:-1:-1;389:5:43;382:12;;328:77;-1:-1:-1;445:19:43;;;;;;;422;;;;;;;;;;:42;;231:241::o;7764:866:11:-;7868:9;7863:761;7883:22;;:29;7879:33;;7863:761;;;7933:32;7968:5;:22;;;7991:1;7968:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;8073:11;;-1:-1:-1;;;;;8055:30:11;7968:35;8055:30;;;:17;:30;;;;;8170:10;;;;7968:35;;-1:-1:-1;7968:35:11;8166:155;;;-1:-1:-1;8218:8:11;8166:155;;;-1:-1:-1;8290:16:11;;;8166:155;8334:52;;-1:-1:-1;;;;;8334:52:11;-1:-1:-1;;;8373:12:11;-1:-1:-1;;;;;8334:52:11;;;;;8436:9;;;;8443:1;;8436:9;;;;;;:::i;:::-;;;;;;;;;;;:17;8400:54;;-1:-1:-1;;8400:54:11;-1:-1:-1;;;;;8400:54:11;;;;;;8472:9;;;;8479:1;;8472:9;;;;;;:::i;:::-;;;;;;;:29;;;8468:146;;;8562:36;8577:21;8562:12;:36;:::i;:::-;8521:78;;-1:-1:-1;;;;;8521:78:11;;;;-1:-1:-1;;;8521:78:11;-1:-1:-1;;;;8521:78:11;;;;;;8468:146;7919:705;;;7914:3;;;;;:::i;:::-;;;;7863:761;;9499:257:8;9562:16;9590:22;9615:19;9623:3;9615:7;:19::i;:::-;9590:44;9499:257;-1:-1:-1;;;9499:257:8:o;8100:165::-;-1:-1:-1;;;;;8233:23:8;;8180:4;3767:19;;;:12;;;:19;;;;;;:24;;8203:55;3671:127;1344:185:36;1465:56;;-1:-1:-1;;;1465:56:36;;-1:-1:-1;;;1465:56:36;;;160:25:45;1417:14:36;;-1:-1:-1;;;;;1465:21:36;;;;;133:18:45;;1465:56:36;14:177:45;8636:968:11;8803:33;;;;;;;;;;;;-1:-1:-1;;;8803:33:11;;;;8781:20;8771:30;;;8763:74;;;;-1:-1:-1;;;8763:74:11;;;;;;;;:::i;:::-;-1:-1:-1;8848:18:11;8876:21;8891:6;8876:12;:21;:::i;:::-;8848:50;-1:-1:-1;8953:22:11;8925:14;:24;;;:50;;;;;;;;:::i;:::-;;:118;;;-1:-1:-1;9019:24:11;8991:14;:24;;;:52;;;;;;;;:::i;:::-;;8925:118;8908:339;;;9086:27;;-1:-1:-1;;;;;9068:46:11;;;;;;;:17;:46;;;;;;;;;:83;;-1:-1:-1;;;;9068:83:11;-1:-1:-1;;;;;;;;9068:83:11;;;;;;9194:27;;9170:66;;12894:32:45;;12876:51;;12943:18;;12936:34;;;-1:-1:-1;12986:18:45;;;12979:50;9170:66:11;;12864:2:45;12849:18;9170:66:11;;;;;;;8908:339;9301:23;9273:14;:24;;;:51;;;;;;;;:::i;:::-;;:119;;;-1:-1:-1;9368:24:11;9340:14;:24;;;:52;;;;;;;;:::i;:::-;;9273:119;9256:342;;;9435:27;;-1:-1:-1;;;;;9417:46:11;;;;;;;:17;:46;;;;;;;;:54;;:84;;-1:-1:-1;;;;9417:84:11;-1:-1:-1;;;;;;;;9417:84:11;;;;;;9544:27;;9520:67;;12894:32:45;;12876:51;;12943:18;;;12936:34;;;12986:18;;12979:50;9520:67:11;;12864:2:45;12849:18;9520:67:11;;;;;;;8753:851;8636:968;;:::o;2202:1388:8:-;2268:4;2405:19;;;:12;;;:19;;;;;;2439:15;;2435:1149;;2808:21;2832:14;2845:1;2832:10;:14;:::i;:::-;2880:18;;2808:38;;-1:-1:-1;2860:17:8;;2880:22;;2901:1;;2880:22;:::i;:::-;2860:42;;2934:13;2921:9;:26;2917:398;;2967:17;2987:3;:11;;2999:9;2987:22;;;;;;;;:::i;:::-;;;;;;;;;2967:42;;3138:9;3109:3;:11;;3121:13;3109:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3221:23;;;:12;;;:23;;;;;:36;;;2917:398;3393:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3485:3;:12;;:19;3498:5;3485:19;;;;;;;;;;;3478:26;;;3526:4;3519:11;;;;;;;2435:1149;3568:5;3561:12;;;;;360:591:41;528:7;568:12;551:13;:29;:49;;;-1:-1:-1;584:16:41;;551:49;547:357;;;-1:-1:-1;623:11:41;616:18;;547:357;671:12;655:13;:28;651:253;;;699:23;725:28;740:13;725:12;:28;:::i;:::-;699:54;-1:-1:-1;767:25:41;795:39;:11;699:54;795:22;:39::i;:::-;767:67;-1:-1:-1;855:38:41;:11;767:67;855:19;:38::i;:::-;848:45;;;;;;651:253;920:23;;;;;;;;;;;-1:-1:-1;;;920:23:41;;;;913:31;;-1:-1:-1;;;913:31:41;;;;920:23;913:31;;;:::i;360:591::-;;;;;;;:::o;750:142:40:-;812:7;;849:5;853:1;849;:5;:::i;:::-;831:23;-1:-1:-1;872:13:40;364:4;831:23;872:13;:::i;1630:404:8:-;1693:4;3767:19;;;:12;;;:19;;;;;;1709:319;;-1:-1:-1;1751:23:8;;;;;;;;:11;:23;;;;;;;;;;;;;1931:18;;1909:19;;;:12;;;:19;;;;;;:40;;;;1963:11;;1709:319;-1:-1:-1;2012:5:8;2005:12;;4986:109;5042:16;5077:3;:11;;5070:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4986:109;;;:::o;4522:342:40:-;4592:7;364:4;4652:183;4659:7;;4652:183;;4686:7;4692:1;4686:3;:7;:::i;:::-;4697:1;4686:12;4682:81;;;4727:21;4735:6;4743:4;4727:7;:21::i;:::-;4718:30;;4682:81;4776:8;4783:1;4776:8;;:::i;:::-;;;4805:19;4813:4;4819;4805:7;:19::i;:::-;4798:26;;4652:183;;404:131:45;-1:-1:-1;;;;;479:31:45;;469:42;;459:70;;525:1;522;515:12;459:70;404:131;:::o;540:134::-;608:20;;637:31;608:20;637:31;:::i;679:247::-;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;846:9;833:23;865:31;890:5;865:31;:::i;1289:459::-;1599:3;1584:19;;1612:56;1588:9;1650:6;1020:12;;-1:-1:-1;;;;;1016:53:45;1004:66;;1116:4;1105:16;;;1099:23;-1:-1:-1;;;;;1191:21:45;;;1175:14;;;1168:45;;;;1266:4;1255:16;;;1249:23;1245:32;1229:14;;1222:56;931:353;1612:56;1020:12;;-1:-1:-1;;;;;1016:53:45;1738:2;1723:18;;1004:66;1116:4;1105:16;;1099:23;-1:-1:-1;;;;;1191:21:45;;;1175:14;;;1168:45;1266:4;1255:16;;1249:23;1245:32;1229:14;;;1222:56;1677:65;931:353;1981:127;2042:10;2037:3;2033:20;2030:1;2023:31;2073:4;2070:1;2063:15;2097:4;2094:1;2087:15;2113:253;2185:2;2179:9;2227:4;2215:17;;-1:-1:-1;;;;;2247:34:45;;2283:22;;;2244:62;2241:88;;;2309:18;;:::i;:::-;2345:2;2338:22;2113:253;:::o;2371:257::-;2443:4;2437:11;;;2475:17;;-1:-1:-1;;;;;2507:34:45;;2543:22;;;2504:62;2501:88;;;2569:18;;:::i;2633:255::-;2705:2;2699:9;2747:6;2735:19;;-1:-1:-1;;;;;2769:34:45;;2805:22;;;2766:62;2763:88;;;2831:18;;:::i;2893:275::-;2964:2;2958:9;3029:2;3010:13;;-1:-1:-1;;3006:27:45;2994:40;;-1:-1:-1;;;;;3049:34:45;;3085:22;;;3046:62;3043:88;;;3111:18;;:::i;:::-;3147:2;3140:22;2893:275;;-1:-1:-1;2893:275:45:o;3173:198::-;3248:4;-1:-1:-1;;;;;3273:6:45;3270:30;3267:56;;;3303:18;;:::i;:::-;-1:-1:-1;3348:1:45;3344:14;3360:4;3340:25;;3173:198::o;3376:156::-;3442:20;;3502:4;3491:16;;3481:27;;3471:55;;3522:1;3519;3512:12;3537:619;3606:5;3654:4;3642:9;3637:3;3633:19;3629:30;3626:50;;;3672:1;3669;3662:12;3626:50;3705:2;3699:9;3747:4;3739:6;3735:17;3818:6;3806:10;3803:22;-1:-1:-1;;;;;3770:10:45;3767:34;3764:62;3761:88;;;3829:18;;:::i;:::-;3869:10;3865:2;3858:22;;3898:6;3889:15;;3941:9;3928:23;3920:6;3913:39;4013:2;4002:9;3998:18;3985:32;3980:2;3972:6;3968:15;3961:57;4079:2;4068:9;4064:18;4051:32;4046:2;4038:6;4034:15;4027:57;4145:2;4134:9;4130:18;4117:32;4112:2;4104:6;4100:15;4093:57;;3537:619;;;;:::o;4161:160::-;4226:20;;4282:13;;4275:21;4265:32;;4255:60;;4311:1;4308;4301:12;4326:1153;4391:5;4444:3;4437:4;4429:6;4425:17;4421:27;4411:55;;4462:1;4459;4452:12;4411:55;4498:6;4485:20;4524:4;4548:75;4564:58;4619:2;4564:58;:::i;:::-;4548:75;:::i;:::-;4657:15;;;4719:4;4762:11;;;4750:24;;4746:33;;;4688:12;;;;4645:3;4791:15;;;4788:35;;;4819:1;4816;4809:12;4788:35;4855:2;4847:6;4843:15;4867:583;4883:6;4878:3;4875:15;4867:583;;;4959:2;4953:3;4948;4944:13;4940:22;4937:112;;;5003:1;5032:2;5028;5021:14;4937:112;5075:22;;:::i;:::-;5138:3;5125:17;5155:33;5180:7;5155:33;:::i;:::-;5201:22;;5259:29;5275:12;;;5259:29;:::i;:::-;5243:14;;;5236:53;5312:2;5363:12;;;5350:26;5334:14;;;5327:50;5390:18;;5428:12;;;;4900;;4867:583;;;-1:-1:-1;5468:5:45;;4326:1153;-1:-1:-1;;;;;;;4326:1153:45:o;5484:2707::-;5566:6;5619:2;5607:9;5598:7;5594:23;5590:32;5587:52;;;5635:1;5632;5625:12;5587:52;-1:-1:-1;;;;;5716:2:45;5704:9;5691:23;5688:31;5685:51;;;5732:1;5729;5722:12;5685:51;5807:4;5793:9;5780:23;5769:9;5765:39;5756:7;5752:53;5748:64;5745:84;;;5825:1;5822;5815:12;5745:84;5851:22;;:::i;:::-;5943:2;5929:9;5916:23;5905:9;5901:39;5888:53;5885:61;5882:81;;;5959:1;5956;5949:12;5882:81;6055:23;;6040:39;;6027:53;;5982:99;6112:4;6104:13;;6100:27;-1:-1:-1;6090:55:45;;6141:1;6138;6131:12;6090:55;6165:89;6181:72;6249:2;6236:16;6181:72;:::i;6165:89::-;6300:16;;6288:29;;;6342:2;6333:12;;;;6276:3;6376:1;6372:24;6364:33;;6360:42;6357:55;-1:-1:-1;6354:75:45;;;6425:1;6422;6415:12;6354:75;6457:2;6453;6449:11;6469:1565;6532:2;6525;6512:16;6509:1;6505:24;6501:2;6497:33;6493:42;6488:3;6485:51;6469:1565;;;6616:2;6610:3;6597:17;6594:25;6591:45;;;6632:1;6629;6622:12;6591:45;6667:17;;6659:26;;-1:-1:-1;;6762:4:45;6739:16;;;6735:25;;6731:36;6728:56;;;6780:1;6777;6770:12;6728:56;6812:22;;:::i;:::-;6880:2;6874;6870;6866:11;6853:25;6850:33;6847:53;;;6896:1;6893;6886:12;6847:53;6952:2;6948;6944:11;6931:25;6927:2;6923:34;7004:6;6999:2;6994;6985:7;6981:16;6977:25;6973:38;6970:58;;;7024:1;7021;7014:12;6970:58;7056:22;;:::i;:::-;7041:37;;7107:31;7134:2;7130;7126:11;7107:31;:::i;:::-;7098:7;7091:48;7177:31;7202:4;7198:2;7194:13;7177:31;:::i;:::-;7172:2;7163:7;7159:16;7152:57;7249:31;7276:2;7272;7268:11;7249:31;:::i;:::-;7242:4;7233:7;7229:18;7222:59;7340:3;7336:2;7332:12;7319:26;7314:2;7305:7;7301:16;7294:52;7385:63;7440:7;7434:3;7430:2;7426:12;7385:63;:::i;:::-;7379:3;7370:7;7366:17;7359:90;7509:3;7505:2;7501:12;7488:26;7482:3;7473:7;7469:17;7462:53;7576:3;7572:2;7568:12;7555:26;7548:4;7539:7;7535:18;7528:54;7643:3;7639:2;7635:12;7622:26;7615:4;7606:7;7602:18;7595:54;7699:2;7689:6;7685:2;7681:15;7668:29;7665:37;7662:57;;;7715:1;7712;7705:12;7662:57;7758:97;7847:7;7842:2;7831:6;7827:2;7823:15;7810:29;7806:2;7802:38;7798:47;7758:97;:::i;:::-;7752:3;7739:17;;7732:124;-1:-1:-1;7869:24:45;;;7952:4;7944:13;;;;7931:27;7926:2;7913:16;;;7906:53;;;;7972:20;;;8012:12;;;;6554;6469:1565;;;-1:-1:-1;8043:20:45;;-1:-1:-1;8095:65:45;;-1:-1:-1;8130:23:45;;8115:39;;8156:2;8111:48;8095:65;:::i;:::-;8090:2;8079:14;;8072:89;8083:5;5484:2707;-1:-1:-1;;;;5484:2707:45:o;8196:597::-;8308:4;8337:2;8366;8355:9;8348:21;8398:6;8392:13;8441:6;8436:2;8425:9;8421:18;8414:34;8466:1;8476:140;8490:6;8487:1;8484:13;8476:140;;;8585:14;;;8581:23;;8575:30;8551:17;;;8570:2;8547:26;8540:66;8505:10;;8476:140;;;8634:6;8631:1;8628:13;8625:91;;;8704:1;8699:2;8690:6;8679:9;8675:22;8671:31;8664:42;8625:91;-1:-1:-1;8777:2:45;8756:15;-1:-1:-1;;8752:29:45;8737:45;;;;8784:2;8733:54;;8196:597;-1:-1:-1;;;8196:597:45:o;8798:658::-;8969:2;9021:21;;;9091:13;;8994:18;;;9113:22;;;8940:4;;8969:2;9192:15;;;;9166:2;9151:18;;;8940:4;9235:195;9249:6;9246:1;9243:13;9235:195;;;9314:13;;-1:-1:-1;;;;;9310:39:45;9298:52;;9405:15;;;;9370:12;;;;9346:1;9264:9;9235:195;;;-1:-1:-1;9447:3:45;;8798:658;-1:-1:-1;;;;;;8798:658:45:o;9461:180::-;9517:6;9570:2;9558:9;9549:7;9545:23;9541:32;9538:52;;;9586:1;9583;9576:12;9538:52;9609:26;9625:9;9609:26;:::i;9646:637::-;9745:6;9753;9797:9;9788:7;9784:23;9827:2;9823;9819:11;9816:31;;;9843:1;9840;9833:12;9816:31;9867:4;9863:2;9859:13;9856:33;;;9885:1;9882;9875:12;9856:33;;9911:22;;:::i;:::-;9970:9;9957:23;9989:33;10014:7;9989:33;:::i;:::-;10031:22;;10105:2;10090:18;;10077:32;10140:1;10128:14;;10118:42;;10156:1;10153;10146:12;10118:42;10187:2;10176:14;;10169:31;10180:5;10271:4;10256:20;;;;10243:34;;-1:-1:-1;;;9646:637:45:o;10597:971::-;10692:6;10723:2;10766;10754:9;10745:7;10741:23;10737:32;10734:52;;;10782:1;10779;10772:12;10734:52;10815:9;10809:16;-1:-1:-1;;;;;10840:6:45;10837:30;10834:50;;;10880:1;10877;10870:12;10834:50;10903:22;;10956:4;10948:13;;10944:27;-1:-1:-1;10934:55:45;;10985:1;10982;10975:12;10934:55;11014:2;11008:9;11037:75;11053:58;11108:2;11053:58;:::i;11037:75::-;11146:15;;;11228:1;11224:10;;;;11216:19;;11212:28;;;11177:12;;;;11252:19;;;11249:39;;;11284:1;11281;11274:12;11249:39;11308:11;;;;11328:210;11344:6;11339:3;11336:15;11328:210;;;11417:3;11411:10;11434:31;11459:5;11434:31;:::i;:::-;11478:18;;11361:12;;;;11516;;;;11328:210;;;11557:5;10597:971;-1:-1:-1;;;;;;;10597:971:45:o;11573:127::-;11634:10;11629:3;11625:20;11622:1;11615:31;11665:4;11662:1;11655:15;11689:4;11686:1;11679:15;11705:127;11766:10;11761:3;11757:20;11754:1;11747:31;11797:4;11794:1;11787:15;11821:4;11818:1;11811:15;11837:127;11898:10;11893:3;11889:20;11886:1;11879:31;11929:4;11926:1;11919:15;11953:4;11950:1;11943:15;11969:135;12008:3;-1:-1:-1;;12029:17:45;;12026:43;;;12049:18;;:::i;:::-;-1:-1:-1;12096:1:45;12085:13;;11969:135::o;12109:128::-;12149:3;12180:1;12176:6;12173:1;12170:13;12167:39;;;12186:18;;:::i;:::-;-1:-1:-1;12222:9:45;;12109:128::o;12424:251::-;12494:6;12547:2;12535:9;12526:7;12522:23;12518:32;12515:52;;;12563:1;12560;12553:12;12515:52;12595:9;12589:16;12614:31;12639:5;12614:31;:::i;13040:125::-;13080:4;13108:1;13105;13102:8;13099:34;;;13113:18;;:::i;:::-;-1:-1:-1;13150:9:45;;13040:125::o;13170:127::-;13231:10;13226:3;13222:20;13219:1;13212:31;13262:4;13259:1;13252:15;13286:4;13283:1;13276:15;13302:168;13342:7;13408:1;13404;13400:6;13396:14;13393:1;13390:21;13385:1;13378:9;13371:17;13367:45;13364:71;;;13415:18;;:::i;:::-;-1:-1:-1;13455:9:45;;13302:168::o;13475:127::-;13536:10;13531:3;13527:20;13524:1;13517:31;13567:4;13564:1;13557:15;13591:4;13588:1;13581:15;13607:120;13647:1;13673;13663:35;;13678:18;;:::i;:::-;-1:-1:-1;13712:9:45;;13607:120::o;13732:112::-;13764:1;13790;13780:35;;13795:18;;:::i;:::-;-1:-1:-1;13829:9:45;;13732:112::o", "language": "Solidity", "natspec": {"events": {"GovernorChangeRequested(address)": {"notice": "Emmited when the governor is change is requested"}, "GovernorChanged(address,address)": {"notice": "Emmited when the governor is changed"}, "OracleGuardianActivated(address,uint256,bool)": {"notice": "Emitted when a whitelisted address protects a vault"}, "SafetyStatus(string)": {"notice": "Emitted when entering safety mode"}}, "kind": "dev", "methods": {"acceptGovernance()": {"notice": "Called by the pending governor to approve the change"}, "changeGovernor(address)": {"notice": "Changes the governor can only be called by the current governor"}, "checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a mint operation is safe and reverts otherwise This is only called when an actual mint is performed The implementation should store any relevant information for the mint"}, "checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a redeem operation is safe This is only called when an actual redeem is performed The implementation should store any relevant information for the redeem"}, "governor()": {"notice": "Returns the current governor"}, "isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a mint operation is safe", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a redeem operation is safe", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "pendingGovernor()": {"notice": "Returns the pending governor"}}, "version": 1}, "offset": [973, 9606], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0763820 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE2CC8679 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE2CC8679 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xEF2933EC EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xFC283B86 EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0763820 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xC9E959BF EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xD01F63F5 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xD625436C EQ PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x286DD3F5 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x286DD3F5 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x6382B296 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x7B9417C8 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA036C284 EQ PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBDF8D22 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x25AEB092 EQ PUSH2 0x172 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH8 0xB1A2BC2EC500000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x150 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP5 DIV DUP3 AND DUP7 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP5 SWAP1 DIV DUP3 AND DUP7 DUP11 ADD MSTORE DUP9 MLOAD SWAP5 DUP6 ADD DUP10 MSTORE PUSH1 0x1 SWAP1 SWAP7 ADD SLOAD SWAP2 DUP3 AND DUP5 MSTORE SWAP5 DUP2 DIV DUP6 AND SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP3 SWAP2 SWAP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH2 0x150 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x12A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH2 0x12A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2E1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x258 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x150 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A3 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP6 SSTORE AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP2 AND DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xDE4B3F61490B74C0ED6237523974FE299126BBBF8A8A7482FD220104C59B0C84 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x45E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP PUSH2 0x46A PUSH1 0x2 DUP3 PUSH2 0xA6C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xCDD2E9B91A56913D370075169CEFA1602BA36BE5301664F752192BB1709DF757 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x4BD JUMPI PUSH2 0x4B6 DUP3 PUSH2 0xA8A JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP PUSH2 0x52E PUSH1 0x2 DUP3 PUSH2 0xD40 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA850AE9193F515CBAE8D35E8925BD2BE26627FC91BCE650B8652ED254E9CAB03 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x598 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x632 DUP4 PUSH2 0xA8A JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP4 POP SWAP2 POP ISZERO PUSH2 0x6BD JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3631 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x662 SWAP1 DUP4 SWAP1 PUSH2 0xDE1 JUMP JUMPDEST ISZERO PUSH2 0x6A3 JUMPI PUSH32 0x135E6DD29EFA875112189ADD0769ED7F19CD6DB71EEFE10BF040C499F5AAB344 DUP3 PUSH1 0x40 MLOAD PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x6BD JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x6C7 DUP4 DUP3 PUSH2 0xE0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6D8 PUSH1 0x2 PUSH2 0xF5D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4B6 DUP3 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x67235BA2E63C748A35B95C4F92A3BBC2A1389938170A5CE6C9ADD5D0B03A314A SWAP1 PUSH1 0x20 ADD PUSH2 0x40E JUMP JUMPDEST CALLER PUSH2 0x891 PUSH1 0x2 DUP3 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x8FF PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50CC258E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x941 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x969 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH2 0x979 JUMPI PUSH1 0x2 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xA13 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9CA JUMPI PUSH2 0x9CA PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9F2 JUMPI PUSH2 0x9F2 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP PUSH2 0xA00 DUP2 DUP5 PUSH2 0xFDB JUMP JUMPDEST POP DUP1 PUSH2 0xA0B DUP2 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9A2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0xA28 PUSH1 0x2 DUP3 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP PUSH2 0x6C7 DUP4 DUP4 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA81 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11CA JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH1 0x0 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xAAA JUMPI PUSH2 0xAAA PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAEF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAC8 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB17 JUMPI PUSH2 0xB17 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB3D JUMPI PUSH2 0xB3D PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP4 DUP2 MSTORE SWAP5 DUP6 ADD DUP4 SWAP1 MSTORE SWAP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 POP SWAP1 DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0xB91 JUMPI DUP2 PUSH1 0x1 ADD PUSH2 0xB93 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV AND SWAP1 DUP3 ADD MSTORE SWAP1 POP DUP4 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBEC JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND NUMBER GT ISZERO JUMPDEST ISZERO PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3635 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP7 POP POP POP POP POP PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xC54 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND NUMBER DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x12BD JUMP JUMPDEST DUP11 MLOAD DUP1 MLOAD DUP10 SWAP1 DUP2 LT PUSH2 0xC68 JUMPI PUSH2 0xC68 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x1B11 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP9 POP POP POP POP POP POP POP PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC4 PUSH8 0xB1A2BC2EC500000 DUP5 PUSH2 0x1346 JUMP JUMPDEST DUP3 GT SWAP1 POP DUP1 ISZERO PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3631 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP10 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0xD15 JUMPI PUSH2 0xD15 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP POP POP POP POP POP DUP1 DUP1 PUSH2 0xD32 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF5 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA81 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1367 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x524F4F545F5341464554595F434845434B5F4144445245535300000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDF4 JUMPI POP PUSH1 0x0 PUSH2 0xA84 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE30 JUMPI PUSH2 0xE30 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 DUP8 ADD MLOAD SWAP2 SWAP4 POP SWAP1 ISZERO PUSH2 0xE69 JUMPI POP DUP1 PUSH2 0xE6F JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL NUMBER PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR DUP2 SSTORE DUP5 MLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xEA1 JUMPI PUSH2 0xEA1 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MLOAD DUP2 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE DUP5 MLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xEE4 JUMPI PUSH2 0xEE4 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0xF47 JUMPI PUSH2 0xF1F PUSH32 0x0 NUMBER PUSH2 0x1B11 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xF55 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF6A DUP4 PUSH2 0x13B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH22 0x5641554C545F52454749535452595F41444452455353 PUSH1 0x50 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x1B19 PUSH1 0xF1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 DUP3 GT ISZERO PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1901 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1042 DUP3 NUMBER PUSH2 0x1B11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105C PUSH2 0x1ACA JUMP JUMPDEST EQ DUP1 PUSH2 0x107D JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107B PUSH2 0x1ACA JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1105 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND MUL OR SWAP1 SSTORE DUP6 MLOAD DUP3 MLOAD SWAP4 AND DUP4 MSTORE DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 DUP3 ADD MSTORE PUSH32 0xD3A9973922556AA8A1D3200840E7B0ADC7851CB170484C2C7001999AE794ABC4 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x1ACA JUMP JUMPDEST EQ DUP1 PUSH2 0x113E JUMPI POP PUSH1 0x2 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x113C JUMPI PUSH2 0x113C PUSH2 0x1ACA JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x6C7 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND MUL OR SWAP1 SSTORE DUP7 MLOAD DUP2 MLOAD SWAP5 AND DUP5 MSTORE SWAP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0xD3A9973922556AA8A1D3200840E7B0ADC7851CB170484C2C7001999AE794ABC4 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x12B3 JUMPI PUSH1 0x0 PUSH2 0x11EE PUSH1 0x1 DUP4 PUSH2 0x1B46 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1202 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B46 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1267 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1222 JUMPI PUSH2 0x1222 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1245 JUMPI PUSH2 0x1245 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1278 JUMPI PUSH2 0x1278 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 EQ DUP1 PUSH2 0x12CB JUMPI POP DUP5 ISZERO JUMPDEST ISZERO PUSH2 0x12D7 JUMPI POP DUP4 PUSH2 0x133E JUMP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 PUSH2 0x12EB DUP5 DUP7 PUSH2 0x1B46 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12F9 DUP5 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP1 POP PUSH2 0x1305 DUP8 DUP3 PUSH2 0x1346 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x133E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH2 0x3A5 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1901 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1353 DUP4 DUP6 PUSH2 0x1B73 JUMP JUMPDEST SWAP1 POP PUSH2 0x133E PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x13AE JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xA84 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1406 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13F2 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 JUMPDEST DUP3 ISZERO PUSH2 0xA81 JUMPI PUSH2 0x142F PUSH1 0x2 DUP5 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1441 DUP2 DUP6 PUSH2 0x1346 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x144F PUSH1 0x2 DUP5 PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP PUSH2 0x145B DUP5 DUP6 PUSH2 0x1346 JUMP JUMPDEST SWAP4 POP PUSH2 0x141E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x4D8 DUP2 PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA81 DUP2 PUSH2 0x1462 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x14DC DUP3 DUP6 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xF6A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1549 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1549 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1549 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BC PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DD PUSH2 0x1511 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x162C JUMPI PUSH2 0x162C PUSH2 0x1511 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x167E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1693 PUSH2 0x168E DUP4 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1594 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 SWAP3 DUP4 MUL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP3 ADD SWAP2 SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1709 JUMPI DUP2 DUP2 DUP11 SUB SLT ISZERO PUSH2 0x16CE JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x16D6 PUSH2 0x1527 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16E1 DUP2 PUSH2 0x1462 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x16EE DUP3 DUP8 ADD PUSH2 0x165D JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0x16B6 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 CALLDATALOAD GT ISZERO PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP4 CALLDATALOAD DUP5 ADD DUP6 SUB SLT ISZERO PUSH2 0x1751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1759 PUSH2 0x154F JUMP JUMPDEST DUP2 DUP5 CALLDATALOAD DUP6 ADD CALLDATALOAD GT ISZERO PUSH2 0x176A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD DUP5 ADD DUP1 CALLDATALOAD ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x178D PUSH2 0x168E DUP3 CALLDATALOAD PUSH2 0x15C4 JUMP JUMPDEST DUP2 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 SWAP2 PUSH1 0x5 SHL DUP5 ADD ADD DUP9 LT ISZERO PUSH2 0x17AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD JUMPDEST PUSH1 0x20 DUP5 CALLDATALOAD PUSH1 0x5 SHL DUP6 ADD ADD DUP2 LT ISZERO PUSH2 0x18DF JUMPI DUP6 DUP2 CALLDATALOAD GT ISZERO PUSH2 0x17CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP5 ADD PUSH1 0x1F NOT PUSH1 0x40 DUP3 DUP13 SUB DUP3 ADD SLT ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17F0 PUSH2 0x154F JUMP JUMPDEST DUP9 PUSH1 0x20 DUP5 ADD CALLDATALOAD GT ISZERO PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP4 ADD PUSH2 0x180 DUP4 DUP3 DUP16 SUB ADD SLT ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1823 PUSH2 0x1571 JUMP JUMPDEST SWAP3 POP PUSH2 0x1831 PUSH1 0x20 DUP3 ADD PUSH2 0x147A JUMP JUMPDEST DUP4 MSTORE PUSH2 0x183F PUSH1 0x40 DUP3 ADD PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1850 PUSH1 0x60 DUP3 ADD PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x186C DUP14 PUSH1 0xA0 DUP4 ADD PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x140 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE DUP10 PUSH2 0x180 DUP3 ADD CALLDATALOAD GT ISZERO PUSH2 0x18A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B8 DUP14 PUSH1 0x20 PUSH2 0x180 DUP5 ADD CALLDATALOAD DUP5 ADD ADD PUSH2 0x166D JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE POP SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP5 MSTORE SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x17B0 JUMP JUMPDEST POP DUP4 MSTORE POP PUSH2 0x18F4 SWAP1 POP DUP5 CALLDATALOAD DUP6 ADD PUSH1 0x20 ADD PUSH2 0x165D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x192E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1912 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1997 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1972 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA81 DUP3 PUSH2 0x165D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB PUSH1 0x60 DUP2 SLT ISZERO PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 SLT ISZERO PUSH2 0x19E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E9 PUSH2 0x154F JUMP JUMPDEST DUP4 CALLDATALOAD PUSH2 0x19F4 DUP2 PUSH2 0x1462 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1A08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP5 PUSH1 0x40 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1A63 PUSH2 0x168E DUP3 PUSH2 0x15C4 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1AA9 JUMPI DUP4 MLOAD PUSH2 0x1A9A DUP2 PUSH2 0x1462 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1A87 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1B0A JUMPI PUSH2 0x1B0A PUSH2 0x1AE0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B24 JUMPI PUSH2 0x1B24 PUSH2 0x1AE0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA81 DUP2 PUSH2 0x1462 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B58 JUMPI PUSH2 0x1B58 PUSH2 0x1AE0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B8D JUMPI PUSH2 0x1B8D PUSH2 0x1AE0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BB7 JUMPI PUSH2 0x1BB7 PUSH2 0x1B92 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BCB JUMPI PUSH2 0x1BCB PUSH2 0x1B92 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xE2 PUSH9 0x3BA14B9220317D40D8 DIFFICULTY 0xC6 SELFDESTRUCT 0xD9 SWAP15 SIGNEXTEND DUP8 RETURNDATACOPY SWAP10 0x4D PUSH9 0x52A77DD82B2E1EF8A9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ", "sha1": "78a2c27edbd1cef4cda1af263bf001361249c582", "source": "// SPDX-License-Identifier: LicenseRef-Gyro-1.0\n// for information on licensing please see the README in the GitHub repository <https://github.com/gyrostable/core-protocol>.\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./../auth/Governable.sol\";\nimport \"../../libraries/DataTypes.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\nimport \"../../interfaces/IAssetRegistry.sol\";\nimport \"../../interfaces/IGyroVault.sol\";\nimport \"../../interfaces/balancer/IVault.sol\";\nimport \"../../libraries/Errors.sol\";\nimport \"../../interfaces/ISafetyCheck.sol\";\nimport \"../../interfaces/IVaultRegistry.sol\";\nimport \"../../libraries/FixedPoint.sol\";\nimport \"../../libraries/Flow.sol\";\nimport \"../../libraries/Errors.sol\";\nimport \"../../libraries/StringExtensions.sol\";\nimport \"../../libraries/ConfigHelpers.sol\";\n\ncontract VaultSafetyMode is ISafetyCheck, Governable {\n    using FixedPoint for uint256;\n    using StringExtensions for string;\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using ConfigHelpers for IGyroConfig;\n\n    EnumerableSet.AddressSet internal whitelist;\n\n    /// @notice Emitted when entering safety mode\n    event SafetyStatus(string err);\n\n    /// @notice Emitted when a whitelisted address protects a vault\n    event OracleGuardianActivated(\n        address vaultAddress,\n        uint256 durationOfProtectionInBlocks,\n        bool inFlows\n    );\n\n    event AddedToWhitelist(address indexed account);\n    event RemovedFromWhitelist(address indexed account);\n\n    struct FlowResult {\n        uint256 newFlow;\n        bool safetyModeActivated;\n    }\n\n    mapping(address => DataTypes.FlowData) public persistedFlowData;\n\n    IGyroConfig public immutable gyroConfig;\n\n    uint256 public immutable safetyBlocksAutomatic;\n    uint256 public immutable safetyBlocksGuardian;\n\n    uint256 public constant THRESHOLD_BUFFER = 8e17;\n\n    constructor(\n        address governor,\n        uint256 _safetyBlocksAutomatic,\n        uint256 _safetyBlocksGuardian,\n        address _gyroConfig\n    ) Governable(governor) {\n        safetyBlocksAutomatic = _safetyBlocksAutomatic;\n        safetyBlocksGuardian = _safetyBlocksGuardian;\n        gyroConfig = IGyroConfig(_gyroConfig);\n    }\n\n    modifier rootSafetyCheckOnly() {\n        require(msg.sender == address(gyroConfig.getRootSafetyCheck()), Errors.NOT_AUTHORIZED);\n        _;\n    }\n\n    /// @notice Checks whether a mint operation is safe\n    /// @return err empty string if it is safe, otherwise the reason why it is not safe\n    function isMintSafe(DataTypes.Order memory order) external view returns (string memory err) {\n        if (order.mint) {\n            (err, ) = _checkFlows(order);\n        } else {\n            err = Errors.INVALID_ARGUMENT;\n        }\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function checkAndPersistMint(DataTypes.Order memory order) external rootSafetyCheckOnly {\n        require(order.mint, Errors.INVALID_ARGUMENT);\n        (string memory err, FlowResult[] memory result) = _checkFlows(order);\n\n        if (bytes(err).length > 0) {\n            if (err.compareStrings(Errors.OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED)) {\n                emit SafetyStatus(err);\n            } else {\n                revert(err);\n            }\n        }\n\n        _updateFlows(order, result);\n    }\n\n    /// @notice Checks whether a redeem operation is safe\n    /// @return err empty string if it is safe, otherwise the reason why it is not safe\n    function isRedeemSafe(DataTypes.Order memory order) external view returns (string memory err) {\n        if (!order.mint) {\n            (err, ) = _checkFlows(order);\n        } else {\n            err = Errors.INVALID_ARGUMENT;\n        }\n    }\n\n    /// @notice Checks whether a redeem operation is safe\n    /// This is only called when an actual redeem is performed\n    /// The implementation should store any relevant information for the redeem\n    function checkAndPersistRedeem(DataTypes.Order memory order) external rootSafetyCheckOnly {\n        require(!order.mint, Errors.INVALID_ARGUMENT);\n        (string memory err, FlowResult[] memory result) = _checkFlows(order);\n\n        if (bytes(err).length > 0) {\n            if (err.compareStrings(Errors.OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED)) {\n                emit SafetyStatus(err);\n            } else {\n                revert(err);\n            }\n        }\n\n        _updateFlows(order, result);\n    }\n\n    function getWhitelist() external view returns (address[] memory) {\n        return whitelist.values();\n    }\n\n    function addAddressToWhitelist(address _addressToAdd) external governanceOnly {\n        whitelist.add(_addressToAdd);\n        emit AddedToWhitelist(_addressToAdd);\n    }\n\n    function removeAddressFromWhitelist(address _addressToRemove) external governanceOnly {\n        whitelist.remove(_addressToRemove);\n        emit RemovedFromWhitelist(_addressToRemove);\n    }\n\n    modifier isWhitelisted(address _address) {\n        require(whitelist.contains(_address), Errors.NOT_AUTHORIZED);\n        _;\n    }\n\n    function activateOracleGuardian(DataTypes.GuardedVaults memory vaultToProtect, uint256 blocks)\n        external\n        isWhitelisted(msg.sender)\n    {\n        _activateOracleGuardian(vaultToProtect, blocks);\n    }\n\n    function pauseProtocol(bool depositsOnly) external isWhitelisted(msg.sender) {\n        IVaultRegistry vaultRegistry = gyroConfig.getVaultRegistry();\n        address[] memory vaults = vaultRegistry.listVaults();\n        DataTypes.Direction direction = depositsOnly\n            ? DataTypes.Direction.In\n            : DataTypes.Direction.Both;\n        uint256 blocksToActivate = safetyBlocksGuardian;\n        for (uint256 i = 0; i < vaults.length; i++) {\n            DataTypes.GuardedVaults memory vaultToProtect = DataTypes.GuardedVaults(\n                vaults[i],\n                direction\n            );\n            _activateOracleGuardian(vaultToProtect, blocksToActivate);\n        }\n    }\n\n    function _checkFlows(DataTypes.Order memory order)\n        internal\n        view\n        returns (string memory err, FlowResult[] memory result)\n    {\n        result = new FlowResult[](order.vaultsWithAmount.length);\n\n        for (uint256 i; i < order.vaultsWithAmount.length; i++) {\n            uint256 amount = order.vaultsWithAmount[i].amount;\n            DataTypes.VaultInfo memory vault = order.vaultsWithAmount[i].vaultInfo;\n            DataTypes.FlowData storage flowData = persistedFlowData[vault.vault];\n            DataTypes.DirectionalFlowData memory directionalData;\n            directionalData = order.mint ? flowData.inFlow : flowData.outFlow;\n\n            if (amount > 0 && block.number <= directionalData.lastSafetyBlock) {\n                err = Errors.SAFETY_MODE_ACTIVATED;\n                break;\n            }\n\n            uint256 shortFlowThreshold = vault.persistedMetadata.shortFlowThreshold;\n            uint256 newFlow = order.vaultsWithAmount[i].amount +\n                Flow.updateFlow(\n                    directionalData.shortFlow,\n                    block.number,\n                    directionalData.lastSeenBlock,\n                    vault.persistedMetadata.shortFlowMemory\n                );\n\n            if (newFlow > shortFlowThreshold) {\n                err = Errors.VAULT_FLOW_TOO_HIGH;\n                break;\n            }\n\n            bool activateSafetyMode = newFlow > THRESHOLD_BUFFER.mulDown(shortFlowThreshold);\n            if (activateSafetyMode) {\n                err = Errors.OPERATION_SUCCEEDS_BUT_SAFETY_MODE_ACTIVATED;\n            }\n\n            result[i] = FlowResult(newFlow, activateSafetyMode);\n        }\n    }\n\n    function _updateFlows(DataTypes.Order memory order, FlowResult[] memory result) internal {\n        for (uint256 i; i < order.vaultsWithAmount.length; i++) {\n            DataTypes.VaultInfo memory vault = order.vaultsWithAmount[i].vaultInfo;\n            DataTypes.FlowData storage flowData = persistedFlowData[vault.vault];\n            DataTypes.DirectionalFlowData storage directionalData;\n            if (order.mint) {\n                directionalData = flowData.inFlow;\n            } else {\n                directionalData = flowData.outFlow;\n            }\n            directionalData.lastSeenBlock = uint64(block.number);\n            directionalData.shortFlow = uint128(result[i].newFlow);\n            if (result[i].safetyModeActivated) {\n                directionalData.lastSafetyBlock = uint64(block.number + safetyBlocksAutomatic);\n            }\n        }\n    }\n\n    function _activateOracleGuardian(DataTypes.GuardedVaults memory vaultToProtect, uint256 blocks)\n        internal\n    {\n        require(blocks <= safetyBlocksGuardian, Errors.ORACLE_GUARDIAN_TIME_LIMIT);\n\n        uint64 targetBlock = uint64(block.number + blocks);\n        if (\n            vaultToProtect.direction == DataTypes.Direction.In ||\n            vaultToProtect.direction == DataTypes.Direction.Both\n        ) {\n            persistedFlowData[vaultToProtect.vaultAddress].inFlow.lastSafetyBlock = targetBlock;\n            emit OracleGuardianActivated(vaultToProtect.vaultAddress, blocks, true);\n        }\n        if (\n            vaultToProtect.direction == DataTypes.Direction.Out ||\n            vaultToProtect.direction == DataTypes.Direction.Both\n        ) {\n            persistedFlowData[vaultToProtect.vaultAddress].outFlow.lastSafetyBlock = targetBlock;\n            emit OracleGuardianActivated(vaultToProtect.vaultAddress, blocks, false);\n        }\n    }\n}\n", "sourceMap": "973:8633:11:-:0;;;2021:337;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;316:8:9;:20;;-1:-1:-1;;;;;;316:20:9;-1:-1:-1;;;;;316:20:9;;;;;;;351:38;;;829:34:45;;;894:2;879:18;;872:43;;;;316:20:9;;351:38;;764:18:45;351:38:9;;;;;;;-1:-1:-1;2204:46:11::1;::::0;;;;2260:44:::1;::::0;-1:-1:-1;;;;;2314:37:11::1;;::::0;-1:-1:-1;973:8633:11;;14:177:45;93:13;;-1:-1:-1;;;;;135:31:45;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;490:2;479:9;475:18;469:25;459:35;;534:2;523:9;519:18;513:25;503:35;;557:49;602:2;591:9;587:18;557:49;:::i;:::-;547:59;;196:416;;;;;;;:::o;617:304::-;973:8633:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/safety/VaultSafetyMode.sol", "type": "contract", "deployment": {"address": "0x67b93A9D98C8dd6109B85DC90369945Ea4ca2fA5", "chainid": "137", "blockHeight": 38003347}}