{"abi": [{"inputs": [{"internalType": "address", "name": "_governor", "type": "address"}, {"internalType": "contract IGyroConfig", "name": "_gyroConfig", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "check", "type": "address"}], "name": "CheckAdded", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "check", "type": "address"}], "name": "CheckRemoved", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChangeRequested", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldGovernor", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChanged", "type": "event"}, {"inputs": [], "name": "acceptGovernance", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "check", "type": "address"}], "name": "addCheck", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newGovernor", "type": "address"}], "name": "changeGovernor", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "checkAndPersistMint", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "checkAndPersistRedeem", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "getChecks", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "governor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "isMintSafe", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "address", "name": "underlying", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "bool", "name": "isStable", "type": "bool"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "isRedeemSafe", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "pendingGovernor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "check", "type": "address"}], "name": "removeCheck", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"100": "interfaces/IGyroConfig.sol", "103": "interfaces/IMotherboard.sol", "104": "interfaces/IPAMM.sol", "105": "interfaces/IReserve.sol", "106": "interfaces/IReserveManager.sol", "107": "interfaces/ISafetyCheck.sol", "108": "interfaces/IVaultRegistry.sol", "125": "interfaces/oracles/IBatchVaultPriceOracle.sol", "139": "libraries/ConfigHelpers.sol", "140": "libraries/ConfigKeys.sol", "143": "libraries/EnumerableExtensions.sol", "144": "libraries/EnumerableMapping.sol", "145": "libraries/Errors.sol", "30": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableMap.sol", "31": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "42": "contracts/auth/Governable.sol", "43": "contracts/auth/GovernableBase.sol", "65": "contracts/safety/RootSafetyCheck.sol", "94": "interfaces/IAssetRegistry.sol", "95": "interfaces/ICapAuthentication.sol", "96": "interfaces/IFeeBank.sol", "97": "interfaces/IFeeHandler.sol", "98": "interfaces/IGYDToken.sol", "99": "interfaces/IGovernable.sol"}, "ast": {"absolutePath": "contracts/safety/RootSafetyCheck.sol", "exportedSymbols": {"ConfigHelpers": [17701], "ConfigKeys": [19049], "DataTypes": [19195], "EnumerableExtensions": [22415], "EnumerableMap": [25923], "EnumerableMapping": [18526], "EnumerableSet": [21876], "Errors": [19425], "Governable": [5243], "GovernableBase": [5337], "IAssetRegistry": [23062], "IBatchVaultPriceOracle": [23166], "ICapAuthentication": [23178], "IERC165": [29902], "IERC20": [18604], "IERC20Metadata": [25443], "IERC721": [27952], "IFeeBank": [16420], "IFeeHandler": [18626], "IGYDToken": [18667], "IGovernable": [23215], "IGyroConfig": [17416], "IGyroVault": [18782], "IMotherboard": [18927], "IPAMM": [19000], "IReserve": [21939], "IReserveManager": [23087], "ISafetyCheck": [26923], "IUSDPriceOracle": [24510], "IVaultRegistry": [23138], "IVaultWeightManager": [28003], "RootSafetyCheck": [11713], "Vaults": [24914]}, "id": 11714, "license": "LicenseRef-Gyro-1.0", "nodeType": "SourceUnit", "nodes": [{"id": 11391, "literals": ["solidity", "^", "0.8", ".4"], "nodeType": "PragmaDirective", "src": "174:23:65"}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol", "id": 11392, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 11714, "sourceUnit": 21877, "src": "199:65:65", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/ISafetyCheck.sol", "file": "../../interfaces/ISafetyCheck.sol", "id": 11393, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 11714, "sourceUnit": 26924, "src": "266:43:65", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 11394, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 11714, "sourceUnit": 17417, "src": "310:42:65", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/EnumerableExtensions.sol", "file": "../../libraries/EnumerableExtensions.sol", "id": 11395, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 11714, "sourceUnit": 22416, "src": "354:50:65", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Errors.sol", "file": "../../libraries/Errors.sol", "id": 11396, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 11714, "sourceUnit": 19426, "src": "405:36:65", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ConfigHelpers.sol", "file": "../../libraries/ConfigHelpers.sol", "id": 11397, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 11714, "sourceUnit": 17702, "src": "442:43:65", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/auth/Governable.sol", "file": "../auth/Governable.sol", "id": 11398, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 11714, "sourceUnit": 5244, "src": "487:32:65", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 11399, "name": "ISafetyCheck", "nodeType": "IdentifierPath", "referencedDeclaration": 26923, "src": "549:12:65"}, "id": 11400, "nodeType": "InheritanceSpecifier", "src": "549:12:65"}, {"baseName": {"id": 11401, "name": "Governable", "nodeType": "IdentifierPath", "referencedDeclaration": 5243, "src": "563:10:65"}, "id": 11402, "nodeType": "InheritanceSpecifier", "src": "563:10:65"}], "canonicalName": "RootSafetyCheck", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 11713, "linearizedBaseContracts": [11713, 5243, 5337, 23215, 26923], "name": "RootSafetyCheck", "nameLocation": "530:15:65", "nodeType": "ContractDefinition", "nodes": [{"id": 11406, "libraryName": {"id": 11403, "name": "EnumerableSet", "nodeType": "IdentifierPath", "referencedDeclaration": 21876, "src": "586:13:65"}, "nodeType": "UsingForDirective", "src": "580:49:65", "typeName": {"id": 11405, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11404, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 21589, "src": "604:24:65"}, "referencedDeclaration": 21589, "src": "604:24:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 11410, "libraryName": {"id": 11407, "name": "EnumerableExtensions", "nodeType": "IdentifierPath", "referencedDeclaration": 22415, "src": "640:20:65"}, "nodeType": "UsingForDirective", "src": "634:56:65", "typeName": {"id": 11409, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11408, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 21589, "src": "665:24:65"}, "referencedDeclaration": 21589, "src": "665:24:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 11414, "libraryName": {"id": 11411, "name": "ConfigHelpers", "nodeType": "IdentifierPath", "referencedDeclaration": 17701, "src": "701:13:65"}, "nodeType": "UsingForDirective", "src": "695:36:65", "typeName": {"id": 11413, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11412, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 17416, "src": "719:11:65"}, "referencedDeclaration": 17416, "src": "719:11:65", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}}, {"anonymous": false, "id": 11418, "name": "CheckAdded", "nameLocation": "743:10:65", "nodeType": "EventDefinition", "parameters": {"id": 11417, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11416, "indexed": true, "mutability": "mutable", "name": "check", "nameLocation": "770:5:65", "nodeType": "VariableDeclaration", "scope": 11418, "src": "754:21:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 11415, "name": "address", "nodeType": "ElementaryTypeName", "src": "754:7:65", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "753:23:65"}, "src": "737:40:65"}, {"anonymous": false, "id": 11422, "name": "CheckRemoved", "nameLocation": "788:12:65", "nodeType": "EventDefinition", "parameters": {"id": 11421, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11420, "indexed": true, "mutability": "mutable", "name": "check", "nameLocation": "817:5:65", "nodeType": "VariableDeclaration", "scope": 11422, "src": "801:21:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 11419, "name": "address", "nodeType": "ElementaryTypeName", "src": "801:7:65", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "800:23:65"}, "src": "782:42:65"}, {"constant": false, "id": 11425, "mutability": "mutable", "name": "_checks", "nameLocation": "864:7:65", "nodeType": "VariableDeclaration", "scope": 11713, "src": "830:41:65", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet"}, "typeName": {"id": 11424, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11423, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 21589, "src": "830:24:65"}, "referencedDeclaration": 21589, "src": "830:24:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "44bbdb55", "id": 11428, "mutability": "immutable", "name": "gyroConfig", "nameLocation": "907:10:65", "nodeType": "VariableDeclaration", "scope": 11713, "src": "878:39:65", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}, "typeName": {"id": 11427, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11426, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 17416, "src": "878:11:65"}, "referencedDeclaration": 17416, "src": "878:11:65", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"body": {"id": 11445, "nodeType": "Block", "src": "951:110:65", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 11439, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 11431, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "969:3:65", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 11432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "969:10:65", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 11435, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11428, "src": "991:10:65", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "id": 11436, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getMotherboard", "nodeType": "MemberAccess", "referencedDeclaration": 17613, "src": "991:25:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$17416_$returns$_t_contract$_IMotherboard_$18927_$bound_to$_t_contract$_IGyroConfig_$17416_$", "typeString": "function (contract IGyroConfig) view returns (contract IMotherboard)"}}, "id": 11437, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "991:27:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IMotherboard_$18927", "typeString": "contract IMotherboard"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IMotherboard_$18927", "typeString": "contract IMotherboard"}], "id": 11434, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "983:7:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 11433, "name": "address", "nodeType": "ElementaryTypeName", "src": "983:7:65", "typeDescriptions": {}}}, "id": 11438, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "983:36:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "969:50:65", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 11440, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "1021:6:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 11441, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "NOT_AUTHORIZED", "nodeType": "MemberAccess", "referencedDeclaration": 19340, "src": "1021:21:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 11430, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "961:7:65", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 11442, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "961:82:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 11443, "nodeType": "ExpressionStatement", "src": "961:82:65"}, {"id": 11444, "nodeType": "PlaceholderStatement", "src": "1053:1:65"}]}, "id": 11446, "name": "motherboardOnly", "nameLocation": "933:15:65", "nodeType": "ModifierDefinition", "parameters": {"id": 11429, "nodeType": "ParameterList", "parameters": [], "src": "948:2:65"}, "src": "924:137:65", "virtual": false, "visibility": "internal"}, {"body": {"id": 11475, "nodeType": "Block", "src": "1145:119:65", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 11466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 11460, "name": "_gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11451, "src": "1171:11:65", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}], "id": 11459, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1163:7:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 11458, "name": "address", "nodeType": "ElementaryTypeName", "src": "1163:7:65", "typeDescriptions": {}}}, "id": 11461, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1163:20:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 11464, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1195:1:65", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 11463, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1187:7:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 11462, "name": "address", "nodeType": "ElementaryTypeName", "src": "1187:7:65", "typeDescriptions": {}}}, "id": 11465, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1187:10:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1163:34:65", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 11467, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "1199:6:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 11468, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 19343, "src": "1199:23:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 11457, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1155:7:65", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 11469, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1155:68:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 11470, "nodeType": "ExpressionStatement", "src": "1155:68:65"}, {"expression": {"id": 11473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 11471, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11428, "src": "1233:10:65", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 11472, "name": "_gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11451, "src": "1246:11:65", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "src": "1233:24:65", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "id": 11474, "nodeType": "ExpressionStatement", "src": "1233:24:65"}]}, "id": 11476, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 11454, "name": "_governor", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11448, "src": "1134:9:65", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 11455, "kind": "baseConstructorSpecifier", "modifierName": {"id": 11453, "name": "Governable", "nodeType": "IdentifierPath", "referencedDeclaration": 5243, "src": "1123:10:65"}, "nodeType": "ModifierInvocation", "src": "1123:21:65"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 11452, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11448, "mutability": "mutable", "name": "_governor", "nameLocation": "1087:9:65", "nodeType": "VariableDeclaration", "scope": 11476, "src": "1079:17:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 11447, "name": "address", "nodeType": "ElementaryTypeName", "src": "1079:7:65", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 11451, "mutability": "mutable", "name": "_gyroConfig", "nameLocation": "1110:11:65", "nodeType": "VariableDeclaration", "scope": 11476, "src": "1098:23:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}, "typeName": {"id": 11450, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11449, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 17416, "src": "1098:11:65"}, "referencedDeclaration": 17416, "src": "1098:11:65", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "visibility": "internal"}], "src": "1078:44:65"}, "returnParameters": {"id": 11456, "nodeType": "ParameterList", "parameters": [], "src": "1145:0:65"}, "scope": 11713, "src": "1067:197:65", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 11487, "nodeType": "Block", "src": "1372:41:65", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 11483, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "1389:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11484, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "toArray", "nodeType": "MemberAccess", "referencedDeclaration": 22014, "src": "1389:15:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}}, "id": 11485, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1389:17:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "functionReturnParameters": 11482, "id": 11486, "nodeType": "Return", "src": "1382:24:65"}]}, "documentation": {"id": 11477, "nodeType": "StructuredDocumentation", "src": "1270:37:65", "text": "@return all the checks registered"}, "functionSelector": "4d9a12c4", "id": 11488, "implemented": true, "kind": "function", "modifiers": [], "name": "getChecks", "nameLocation": "1321:9:65", "nodeType": "FunctionDefinition", "parameters": {"id": 11478, "nodeType": "ParameterList", "parameters": [], "src": "1330:2:65"}, "returnParameters": {"id": 11482, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11481, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 11488, "src": "1354:16:65", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 11479, "name": "address", "nodeType": "ElementaryTypeName", "src": "1354:7:65", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 11480, "nodeType": "ArrayTypeName", "src": "1354:9:65", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "1353:18:65"}, "scope": 11713, "src": "1312:101:65", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 11509, "nodeType": "Block", "src": "1521:101:65", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 11499, "name": "check", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11491, "src": "1551:5:65", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 11497, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "1539:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11498, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 21616, "src": "1539:11:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$21589_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 11500, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1539:18:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 11501, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "1559:6:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 11502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 19343, "src": "1559:23:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 11496, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1531:7:65", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 11503, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1531:52:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 11504, "nodeType": "ExpressionStatement", "src": "1531:52:65"}, {"eventCall": {"arguments": [{"id": 11506, "name": "check", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11491, "src": "1609:5:65", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 11505, "name": "CheckAdded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11418, "src": "1598:10:65", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 11507, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1598:17:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 11508, "nodeType": "EmitStatement", "src": "1593:22:65"}]}, "documentation": {"id": 11489, "nodeType": "StructuredDocumentation", "src": "1419:40:65", "text": "@notice adds a check to be performed"}, "functionSelector": "3d4d10e2", "id": 11510, "implemented": true, "kind": "function", "modifiers": [{"id": 11494, "kind": "modifierInvocation", "modifierName": {"id": 11493, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 5268, "src": "1506:14:65"}, "nodeType": "ModifierInvocation", "src": "1506:14:65"}], "name": "addCheck", "nameLocation": "1473:8:65", "nodeType": "FunctionDefinition", "parameters": {"id": 11492, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11491, "mutability": "mutable", "name": "check", "nameLocation": "1490:5:65", "nodeType": "VariableDeclaration", "scope": 11510, "src": "1482:13:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 11490, "name": "address", "nodeType": "ElementaryTypeName", "src": "1482:7:65", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1481:15:65"}, "returnParameters": {"id": 11495, "nodeType": "ParameterList", "parameters": [], "src": "1521:0:65"}, "scope": 11713, "src": "1464:158:65", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 11531, "nodeType": "Block", "src": "1736:106:65", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 11521, "name": "check", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11513, "src": "1769:5:65", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 11519, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "1754:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11520, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "remove", "nodeType": "MemberAccess", "referencedDeclaration": 21643, "src": "1754:14:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$21589_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 11522, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1754:21:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 11523, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "1777:6:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 11524, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 19343, "src": "1777:23:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 11518, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1746:7:65", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 11525, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1746:55:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 11526, "nodeType": "ExpressionStatement", "src": "1746:55:65"}, {"eventCall": {"arguments": [{"id": 11528, "name": "check", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11513, "src": "1829:5:65", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 11527, "name": "CheckRemoved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11422, "src": "1816:12:65", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 11529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1816:19:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 11530, "nodeType": "EmitStatement", "src": "1811:24:65"}]}, "documentation": {"id": 11511, "nodeType": "StructuredDocumentation", "src": "1628:43:65", "text": "@notice removes a check to be performed"}, "functionSelector": "68b23e52", "id": 11532, "implemented": true, "kind": "function", "modifiers": [{"id": 11516, "kind": "modifierInvocation", "modifierName": {"id": 11515, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 5268, "src": "1721:14:65"}, "nodeType": "ModifierInvocation", "src": "1721:14:65"}], "name": "removeCheck", "nameLocation": "1685:11:65", "nodeType": "FunctionDefinition", "parameters": {"id": 11514, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11513, "mutability": "mutable", "name": "check", "nameLocation": "1705:5:65", "nodeType": "VariableDeclaration", "scope": 11532, "src": "1697:13:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 11512, "name": "address", "nodeType": "ElementaryTypeName", "src": "1697:7:65", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1696:15:65"}, "returnParameters": {"id": 11517, "nodeType": "ParameterList", "parameters": [], "src": "1736:0:65"}, "scope": 11713, "src": "1676:166:65", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [26899], "body": {"id": 11582, "nodeType": "Block", "src": "2018:250:65", "statements": [{"assignments": [11543], "declarations": [{"constant": false, "id": 11543, "mutability": "mutable", "name": "length", "nameLocation": "2036:6:65", "nodeType": "VariableDeclaration", "scope": 11582, "src": "2028:14:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11542, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2028:7:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 11547, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 11544, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "2045:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11545, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 21685, "src": "2045:14:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 11546, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2045:16:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2028:33:65"}, {"body": {"id": 11580, "nodeType": "Block", "src": "2108:154:65", "statements": [{"expression": {"id": 11568, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 11558, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11540, "src": "2122:3:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 11566, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11536, "src": "2167:5:65", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "expression": {"arguments": [{"arguments": [{"id": 11562, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11549, "src": "2152:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 11560, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "2141:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11561, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 21712, "src": "2141:10:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 11563, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2141:13:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 11559, "name": "ISafetyCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26923, "src": "2128:12:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$26923_$", "typeString": "type(contract ISafetyCheck)"}}, "id": 11564, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2128:27:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$26923", "typeString": "contract ISafetyCheck"}}, "id": 11565, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isMintSafe", "nodeType": "MemberAccess", "referencedDeclaration": 26899, "src": "2128:38:65", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_struct$_Order_$19181_memory_ptr_$returns$_t_string_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view external returns (string memory)"}}, "id": 11567, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2128:45:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2122:51:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 11569, "nodeType": "ExpressionStatement", "src": "2122:51:65"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 11576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 11572, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11540, "src": "2197:3:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 11571, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2191:5:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 11570, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2191:5:65", "typeDescriptions": {}}}, "id": 11573, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2191:10:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 11574, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2191:17:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 11575, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2211:1:65", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2191:21:65", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 11579, "nodeType": "IfStatement", "src": "2187:65:65", "trueBody": {"id": 11578, "nodeType": "Block", "src": "2214:38:65", "statements": [{"id": 11577, "nodeType": "Break", "src": "2232:5:65"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 11554, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 11552, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11549, "src": "2091:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 11553, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11543, "src": "2095:6:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2091:10:65", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 11581, "initializationExpression": {"assignments": [11549], "declarations": [{"constant": false, "id": 11549, "mutability": "mutable", "name": "i", "nameLocation": "2084:1:65", "nodeType": "VariableDeclaration", "scope": 11581, "src": "2076:9:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11548, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2076:7:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 11551, "initialValue": {"hexValue": "30", "id": 11550, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2088:1:65", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2076:13:65"}, "loopExpression": {"expression": {"id": 11556, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2103:3:65", "subExpression": {"id": 11555, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11549, "src": "2103:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 11557, "nodeType": "ExpressionStatement", "src": "2103:3:65"}, "nodeType": "ForStatement", "src": "2071:191:65"}]}, "documentation": {"id": 11533, "nodeType": "StructuredDocumentation", "src": "1848:28:65", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "e2cc8679", "id": 11583, "implemented": true, "kind": "function", "modifiers": [], "name": "isMintSafe", "nameLocation": "1890:10:65", "nodeType": "FunctionDefinition", "overrides": {"id": 11538, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1969:8:65"}, "parameters": {"id": 11537, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11536, "mutability": "mutable", "name": "order", "nameLocation": "1924:5:65", "nodeType": "VariableDeclaration", "scope": 11583, "src": "1901:28:65", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 11535, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11534, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 19181, "src": "1901:15:65"}, "referencedDeclaration": 19181, "src": "1901:15:65", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "1900:30:65"}, "returnParameters": {"id": 11541, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11540, "mutability": "mutable", "name": "err", "nameLocation": "2009:3:65", "nodeType": "VariableDeclaration", "scope": 11583, "src": "1995:17:65", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 11539, "name": "string", "nodeType": "ElementaryTypeName", "src": "1995:6:65", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1994:19:65"}, "scope": 11713, "src": "1881:387:65", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [26908], "body": {"id": 11633, "nodeType": "Block", "src": "2446:252:65", "statements": [{"assignments": [11594], "declarations": [{"constant": false, "id": 11594, "mutability": "mutable", "name": "length", "nameLocation": "2464:6:65", "nodeType": "VariableDeclaration", "scope": 11633, "src": "2456:14:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11593, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2456:7:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 11598, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 11595, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "2473:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11596, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 21685, "src": "2473:14:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 11597, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2473:16:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2456:33:65"}, {"body": {"id": 11631, "nodeType": "Block", "src": "2536:156:65", "statements": [{"expression": {"id": 11619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 11609, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11591, "src": "2550:3:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 11617, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11587, "src": "2597:5:65", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "expression": {"arguments": [{"arguments": [{"id": 11613, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11600, "src": "2580:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 11611, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "2569:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11612, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 21712, "src": "2569:10:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 11614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2569:13:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 11610, "name": "ISafetyCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26923, "src": "2556:12:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$26923_$", "typeString": "type(contract ISafetyCheck)"}}, "id": 11615, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2556:27:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$26923", "typeString": "contract ISafetyCheck"}}, "id": 11616, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isRedeemSafe", "nodeType": "MemberAccess", "referencedDeclaration": 26908, "src": "2556:40:65", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_struct$_Order_$19181_memory_ptr_$returns$_t_string_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view external returns (string memory)"}}, "id": 11618, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2556:47:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2550:53:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 11620, "nodeType": "ExpressionStatement", "src": "2550:53:65"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 11627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 11623, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11591, "src": "2627:3:65", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 11622, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2621:5:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 11621, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2621:5:65", "typeDescriptions": {}}}, "id": 11624, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2621:10:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 11625, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2621:17:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 11626, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2641:1:65", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2621:21:65", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 11630, "nodeType": "IfStatement", "src": "2617:65:65", "trueBody": {"id": 11629, "nodeType": "Block", "src": "2644:38:65", "statements": [{"id": 11628, "nodeType": "Break", "src": "2662:5:65"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 11605, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 11603, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11600, "src": "2519:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 11604, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11594, "src": "2523:6:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2519:10:65", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 11632, "initializationExpression": {"assignments": [11600], "declarations": [{"constant": false, "id": 11600, "mutability": "mutable", "name": "i", "nameLocation": "2512:1:65", "nodeType": "VariableDeclaration", "scope": 11632, "src": "2504:9:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11599, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2504:7:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 11602, "initialValue": {"hexValue": "30", "id": 11601, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2516:1:65", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2504:13:65"}, "loopExpression": {"expression": {"id": 11607, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2531:3:65", "subExpression": {"id": 11606, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11600, "src": "2531:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 11608, "nodeType": "ExpressionStatement", "src": "2531:3:65"}, "nodeType": "ForStatement", "src": "2499:193:65"}]}, "documentation": {"id": 11584, "nodeType": "StructuredDocumentation", "src": "2274:28:65", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "6382b296", "id": 11634, "implemented": true, "kind": "function", "modifiers": [], "name": "isRedeemSafe", "nameLocation": "2316:12:65", "nodeType": "FunctionDefinition", "overrides": {"id": 11589, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2397:8:65"}, "parameters": {"id": 11588, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11587, "mutability": "mutable", "name": "order", "nameLocation": "2352:5:65", "nodeType": "VariableDeclaration", "scope": 11634, "src": "2329:28:65", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 11586, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11585, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 19181, "src": "2329:15:65"}, "referencedDeclaration": 19181, "src": "2329:15:65", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2328:30:65"}, "returnParameters": {"id": 11592, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11591, "mutability": "mutable", "name": "err", "nameLocation": "2437:3:65", "nodeType": "VariableDeclaration", "scope": 11634, "src": "2423:17:65", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 11590, "name": "string", "nodeType": "ElementaryTypeName", "src": "2423:6:65", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2422:19:65"}, "scope": 11713, "src": "2307:391:65", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [26922], "body": {"id": 11672, "nodeType": "Block", "src": "2830:175:65", "statements": [{"assignments": [11645], "declarations": [{"constant": false, "id": 11645, "mutability": "mutable", "name": "length", "nameLocation": "2848:6:65", "nodeType": "VariableDeclaration", "scope": 11672, "src": "2840:14:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11644, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2840:7:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 11649, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 11646, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "2857:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11647, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 21685, "src": "2857:14:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 11648, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2857:16:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2840:33:65"}, {"body": {"id": 11670, "nodeType": "Block", "src": "2920:79:65", "statements": [{"expression": {"arguments": [{"id": 11667, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11638, "src": "2982:5:65", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "expression": {"arguments": [{"arguments": [{"id": 11663, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11651, "src": "2958:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 11661, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "2947:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11662, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 21712, "src": "2947:10:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 11664, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2947:13:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 11660, "name": "ISafetyCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26923, "src": "2934:12:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$26923_$", "typeString": "type(contract ISafetyCheck)"}}, "id": 11665, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2934:27:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$26923", "typeString": "contract ISafetyCheck"}}, "id": 11666, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "checkAndPersistMint", "nodeType": "MemberAccess", "referencedDeclaration": 26922, "src": "2934:47:65", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$19181_memory_ptr_$returns$__$", "typeString": "function (struct DataTypes.Order memory) external"}}, "id": 11668, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2934:54:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 11669, "nodeType": "ExpressionStatement", "src": "2934:54:65"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 11656, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 11654, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11651, "src": "2903:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 11655, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11645, "src": "2907:6:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2903:10:65", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 11671, "initializationExpression": {"assignments": [11651], "declarations": [{"constant": false, "id": 11651, "mutability": "mutable", "name": "i", "nameLocation": "2896:1:65", "nodeType": "VariableDeclaration", "scope": 11671, "src": "2888:9:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11650, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2888:7:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 11653, "initialValue": {"hexValue": "30", "id": 11652, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2900:1:65", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2888:13:65"}, "loopExpression": {"expression": {"id": 11658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2915:3:65", "subExpression": {"id": 11657, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11651, "src": "2915:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 11659, "nodeType": "ExpressionStatement", "src": "2915:3:65"}, "nodeType": "ForStatement", "src": "2883:116:65"}]}, "documentation": {"id": 11635, "nodeType": "StructuredDocumentation", "src": "2704:28:65", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "d625436c", "id": 11673, "implemented": true, "kind": "function", "modifiers": [{"id": 11642, "kind": "modifierInvocation", "modifierName": {"id": 11641, "name": "motherboardOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 11446, "src": "2814:15:65"}, "nodeType": "ModifierInvocation", "src": "2814:15:65"}], "name": "checkAndPersistMint", "nameLocation": "2746:19:65", "nodeType": "FunctionDefinition", "overrides": {"id": 11640, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2805:8:65"}, "parameters": {"id": 11639, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11638, "mutability": "mutable", "name": "order", "nameLocation": "2789:5:65", "nodeType": "VariableDeclaration", "scope": 11673, "src": "2766:28:65", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 11637, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11636, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 19181, "src": "2766:15:65"}, "referencedDeclaration": 19181, "src": "2766:15:65", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2765:30:65"}, "returnParameters": {"id": 11643, "nodeType": "ParameterList", "parameters": [], "src": "2830:0:65"}, "scope": 11713, "src": "2737:268:65", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [26915], "body": {"id": 11711, "nodeType": "Block", "src": "3139:177:65", "statements": [{"assignments": [11684], "declarations": [{"constant": false, "id": 11684, "mutability": "mutable", "name": "length", "nameLocation": "3157:6:65", "nodeType": "VariableDeclaration", "scope": 11711, "src": "3149:14:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11683, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3149:7:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 11688, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 11685, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "3166:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11686, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 21685, "src": "3166:14:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 11687, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3166:16:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3149:33:65"}, {"body": {"id": 11709, "nodeType": "Block", "src": "3229:81:65", "statements": [{"expression": {"arguments": [{"id": 11706, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11677, "src": "3293:5:65", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "expression": {"arguments": [{"arguments": [{"id": 11702, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11690, "src": "3267:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 11700, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11425, "src": "3256:7:65", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 11701, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 21712, "src": "3256:10:65", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 11703, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3256:13:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 11699, "name": "ISafetyCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 26923, "src": "3243:12:65", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$26923_$", "typeString": "type(contract ISafetyCheck)"}}, "id": 11704, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3243:27:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$26923", "typeString": "contract ISafetyCheck"}}, "id": 11705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "checkAndPersistRedeem", "nodeType": "MemberAccess", "referencedDeclaration": 26915, "src": "3243:49:65", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$19181_memory_ptr_$returns$__$", "typeString": "function (struct DataTypes.Order memory) external"}}, "id": 11707, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3243:56:65", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 11708, "nodeType": "ExpressionStatement", "src": "3243:56:65"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 11695, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 11693, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11690, "src": "3212:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 11694, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11684, "src": "3216:6:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3212:10:65", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 11710, "initializationExpression": {"assignments": [11690], "declarations": [{"constant": false, "id": 11690, "mutability": "mutable", "name": "i", "nameLocation": "3205:1:65", "nodeType": "VariableDeclaration", "scope": 11710, "src": "3197:9:65", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11689, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3197:7:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 11692, "initialValue": {"hexValue": "30", "id": 11691, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3209:1:65", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3197:13:65"}, "loopExpression": {"expression": {"id": 11697, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3224:3:65", "subExpression": {"id": 11696, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11690, "src": "3224:1:65", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 11698, "nodeType": "ExpressionStatement", "src": "3224:3:65"}, "nodeType": "ForStatement", "src": "3192:118:65"}]}, "documentation": {"id": 11674, "nodeType": "StructuredDocumentation", "src": "3011:28:65", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "a0763820", "id": 11712, "implemented": true, "kind": "function", "modifiers": [{"id": 11681, "kind": "modifierInvocation", "modifierName": {"id": 11680, "name": "motherboardOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 11446, "src": "3123:15:65"}, "nodeType": "ModifierInvocation", "src": "3123:15:65"}], "name": "checkAndPersistRedeem", "nameLocation": "3053:21:65", "nodeType": "FunctionDefinition", "overrides": {"id": 11679, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3114:8:65"}, "parameters": {"id": 11678, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11677, "mutability": "mutable", "name": "order", "nameLocation": "3098:5:65", "nodeType": "VariableDeclaration", "scope": 11712, "src": "3075:28:65", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 11676, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 11675, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 19181, "src": "3075:15:65"}, "referencedDeclaration": 19181, "src": "3075:15:65", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$19181_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "3074:30:65"}, "returnParameters": {"id": 11682, "nodeType": "ParameterList", "parameters": [], "src": "3139:0:65"}, "scope": 11713, "src": "3044:272:65", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 11714, "src": "521:2797:65", "usedErrors": []}], "src": "174:3145:65"}, "bytecode": "60a06040523480156200001157600080fd5b506040516200151738038062001517833981016040819052620000349162000107565b600080546001600160a01b0319166001600160a01b038416908117825560408051928352602083019190915283917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c84910160405180910390a150604080518082019091526002815261333160f01b60208201526001600160a01b038216620000da5760405162461bcd60e51b8152600401620000d1919062000146565b60405180910390fd5b506001600160a01b0316608052506200019e565b6001600160a01b03811681146200010457600080fd5b50565b600080604083850312156200011b57600080fd5b82516200012881620000ee565b60208401519092506200013b81620000ee565b809150509250929050565b600060208083528351808285015260005b81811015620001755785810183015185820160400152820162000157565b8181111562000188576000604083870101525b50601f01601f1916929092016040019392505050565b60805161134f620001c86000396000818161010b015281816104e501526105fe015261134f6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806368b23e521161007157806368b23e5214610162578063a076382014610175578063d625436c14610188578063e2cc86791461019b578063e3056a34146101ae578063e4c0aaf4146101c157600080fd5b80630c340a24146100b9578063238efcbc146100e95780633d4d10e2146100f357806344bbdb55146101065780634d9a12c41461012d5780636382b29614610142575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101d4565b005b6100f1610101366004610ba6565b61028d565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61013561034f565b6040516100e09190610bca565b610155610150366004610e22565b610360565b6040516100e0919061103e565b6100f1610170366004610ba6565b61041e565b6100f1610183366004610e22565b6104e0565b6100f1610196366004610e22565b6105f9565b6101556101a9366004610e22565b61070d565b6001546100cc906001600160a01b031681565b6100f16101cf366004610ba6565b6107c4565b600154604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102225760405162461bcd60e51b8152600401610219919061103e565b60405180910390fd5b5060008054600180546001600160a01b03198084166001600160a01b03808416919091179095551690556040805192909116808352336020840152917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491015b60405180910390a150565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102d25760405162461bcd60e51b8152600401610219919061103e565b506102de600282610899565b60405180604001604052806002815260200161333160f01b815250906103175760405162461bcd60e51b8152600401610219919061103e565b506040516001600160a01b038216907f75ec3ef6c1afb45dd0a2bbb3a4f14cac03241c33fc24c352e25ea690e22a923290600090a250565b606061035b60026108b7565b905090565b6060600061036e6002610966565b905060005b8181101561041757610386600282610970565b6001600160a01b0316636382b296856040518263ffffffff1660e01b81526004016103b191906110cd565b600060405180830381865afa1580156103ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103f691908101906111f4565b80519093501561040557610417565b8061040f8161129e565b915050610373565b5050919050565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146104635760405162461bcd60e51b8152600401610219919061103e565b5061046f60028261097c565b60405180604001604052806002815260200161333160f01b815250906104a85760405162461bcd60e51b8152600401610219919061103e565b506040516001600160a01b038216907fd37223475c04a60e97eb30bc3a38b4aef6a37def09d1ed6b88c881847362426d90600090a250565b6105127f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610991565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b8152509061055f5760405162461bcd60e51b8152600401610219919061103e565b50600061056c6002610966565b905060005b818110156105f457610584600282610970565b6001600160a01b031663a0763820846040518263ffffffff1660e01b81526004016105af91906110cd565b600060405180830381600087803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b5050505080806105ec9061129e565b915050610571565b505050565b61062b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610991565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b815250906106785760405162461bcd60e51b8152600401610219919061103e565b5060006106856002610966565b905060005b818110156105f45761069d600282610970565b6001600160a01b031663d625436c846040518263ffffffff1660e01b81526004016106c891906110cd565b600060405180830381600087803b1580156106e257600080fd5b505af11580156106f6573d6000803e3d6000fd5b5050505080806107059061129e565b91505061068a565b6060600061071b6002610966565b905060005b8181101561041757610733600282610970565b6001600160a01b031663e2cc8679856040518263ffffffff1660e01b815260040161075e91906110cd565b600060405180830381865afa15801561077b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a391908101906111f4565b8051909350156107b257610417565b806107bc8161129e565b915050610720565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146108095760405162461bcd60e51b8152600401610219919061103e565b50604080518082019091526002815261333160f01b60208201526001600160a01b03821661084a5760405162461bcd60e51b8152600401610219919061103e565b50600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f67235ba2e63c748a35b95c4f92a3bbc2a1389938170a5ce6c9add5d0b03a314a90602001610282565b60006108ae836001600160a01b038416610a12565b90505b92915050565b606060006108c483610966565b905060008167ffffffffffffffff8111156108e1576108e1610c17565b60405190808252806020026020018201604052801561090a578160200160208202803683370190505b50905060005b8281101561095e576109228582610970565b828281518110610934576109346112b9565b6001600160a01b0390921660209283029190910190910152806109568161129e565b915050610910565b509392505050565b60006108b1825490565b60006108ae8383610a61565b60006108ae836001600160a01b038416610a8b565b6040516321f8a72160e01b8152724d4f54484552424f4152445f4144445245535360681b60048201526000906001600160a01b038316906321f8a72190602401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b191906112cf565b6000818152600183016020526040812054610a59575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108b1565b5060006108b1565b6000826000018281548110610a7857610a786112b9565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610b74576000610aaf6001836112ec565b8554909150600090610ac3906001906112ec565b9050818114610b28576000866000018281548110610ae357610ae36112b9565b9060005260206000200154905080876000018481548110610b0657610b066112b9565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b3957610b39611303565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108b1565b60009150506108b1565b6001600160a01b0381168114610b9357600080fd5b50565b8035610ba181610b7e565b919050565b600060208284031215610bb857600080fd5b8135610bc381610b7e565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610c0b5783516001600160a01b031683529284019291840191600101610be6565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610c5057610c50610c17565b60405290565b6040805190810167ffffffffffffffff81118282101715610c5057610c50610c17565b604051610120810167ffffffffffffffff81118282101715610c5057610c50610c17565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cc657610cc6610c17565b604052919050565b600067ffffffffffffffff821115610ce857610ce8610c17565b5060051b60200190565b803560ff81168114610ba157600080fd5b600060808284031215610d1557600080fd5b6040516080810181811067ffffffffffffffff82111715610d3857610d38610c17565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b80358015158114610ba157600080fd5b600082601f830112610d8a57600080fd5b81356020610d9f610d9a83610cce565b610c9d565b82815260609283028501820192828201919087851115610dbe57600080fd5b8387015b85811015610e155781818a031215610dda5760008081fd5b610de2610c2d565b8135610ded81610b7e565b8152610dfa828701610d69565b81870152604082810135908201528452928401928101610dc2565b5090979650505050505050565b600060208284031215610e3457600080fd5b67ffffffffffffffff8083351115610e4b57600080fd5b60408335840185031215610e5e57600080fd5b610e66610c56565b8184358501351115610e7757600080fd5b83358401803501601f81018613610e8d57600080fd5b610e9a610d9a8235610cce565b81358082526020808301929160051b840101881015610eb857600080fd5b602083015b6020843560051b850101811015610fec578581351115610edc57600080fd5b80358401601f196040828c0382011215610ef557600080fd5b610efd610c56565b8860208401351115610f0e57600080fd5b6020830135830161018083828f03011215610f2857600080fd5b610f30610c79565b9250610f3e60208201610b96565b8352610f4c60408201610cf2565b6020840152610f5d60608201610b96565b604084015260808101356060840152610f798d60a08301610d03565b608084015261012081013560a084015261014081013560c084015261016081013560e0840152896101808201351115610fb157600080fd5b610fc58d6020610180840135840101610d79565b61010084015250908152604091909101356020808301919091529084529283019201610ebd565b50835250611001905084358501602001610d69565b6020820152949350505050565b60005b83811015611029578181015183820152602001611011565b83811115611038576000848401525b50505050565b602081526000825180602084015261105d81604085016020870161100e565b601f01601f19169190910160400192915050565b600081518084526020808501945080840160005b838110156110c257815180516001600160a01b03168852838101511515848901526040908101519088015260609096019590820190600101611085565b509495945050505050565b600060208083526060808401855160408085880152828251808552608094508489019150848160051b8a0101878501945060005b828110156111d957607f198b83030184528551805186845280516001600160a01b03908116888601528b82015160ff168b8601528782015116898501528981015160a08086019190915289820151805160c080880191909152602082015160e08801526040820151610100880152606082015161012088015290918301516101408701528201516101608601525060e081015161018080860191909152610100909101516101a08501919091526111bc6101c0850182611071565b918b0151938b019390935295890195938901939150600101611101565b50968a0151801515848b0152969a9950505050505050505050565b60006020828403121561120657600080fd5b815167ffffffffffffffff8082111561121e57600080fd5b818401915084601f83011261123257600080fd5b81518181111561124457611244610c17565b611257601f8201601f1916602001610c9d565b915080825285602082850101111561126e57600080fd5b61127f81602084016020860161100e565b50949350505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156112b2576112b2611288565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156112e157600080fd5b8151610bc381610b7e565b6000828210156112fe576112fe611288565b500390565b634e487b7160e01b600052603160045260246000fdfea264697066735822122025244c61273b59015937a76c577adf4dbf18f0b3f4b8eeb86839d60088134c8964736f6c634300080a0033", "bytecodeSha1": "6d17dde0599f2dca7dab78ace00b533bd64a77a1", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "RootSafetyCheck", "coverageMap": {"branches": {"100": {}, "103": {}, "104": {}, "105": {}, "106": {}, "107": {}, "108": {}, "125": {}, "139": {}, "140": {}, "143": {}, "144": {}, "145": {}, "30": {}, "31": {"EnumerableSet._remove": {"48": [2439, 2454, false], "49": [2921, 2947, false]}}, "42": {}, "43": {"GovernableBase.acceptGovernance": {"50": [910, 939, true]}, "GovernableBase.changeGovernor": {"51": [651, 685, true]}}, "65": {"RootSafetyCheck.addCheck": {"43": [1539, 1557, true]}, "RootSafetyCheck.checkAndPersistMint": {"46": [969, 1019, true]}, "RootSafetyCheck.isMintSafe": {"47": [2191, 2212, false]}, "RootSafetyCheck.isRedeemSafe": {"44": [2621, 2642, false]}, "RootSafetyCheck.removeCheck": {"45": [1754, 1775, true]}}, "94": {}, "95": {}, "96": {}, "97": {}, "98": {}, "99": {}}, "statements": {"100": {}, "103": {}, "104": {}, "105": {}, "106": {}, "107": {}, "108": {}, "125": {}, "139": {"ConfigHelpers.getMotherboard": {"30": [2699, 2773]}}, "140": {}, "143": {"EnumerableExtensions.toArray": {"23": [1023, 1050], "24": [1004, 1007], "25": [1070, 1083]}}, "144": {}, "145": {}, "30": {}, "31": {"EnumerableSet._add": {"32": [1751, 1774], "33": [1909, 1949], "34": [1963, 1974], "35": [2005, 2017]}, "EnumerableSet._at": {"36": [4414, 4439]}, "EnumerableSet._contains": {"31": [3760, 3791]}, "EnumerableSet._length": {"27": [3954, 3979]}, "EnumerableSet._remove": {"37": [3109, 3147], "38": [3221, 3257], "39": [3393, 3410], "40": [3478, 3504], "41": [3519, 3530], "42": [3561, 3573]}, "EnumerableSet.add": {"22": [7631, 7688]}, "EnumerableSet.at": {"28": [8896, 8952]}, "EnumerableSet.length": {"26": [8428, 8454]}, "EnumerableSet.remove": {"29": [7952, 8012]}}, "42": {}, "43": {"GovernableBase.acceptGovernance": {"0": [902, 963], "1": [1017, 1043], "2": [1053, 1081], "3": [1091, 1140]}, "GovernableBase.changeGovernor": {"19": [643, 711], "20": [721, 750], "21": [760, 801]}}, "65": {"RootSafetyCheck.addCheck": {"4": [1531, 1583], "5": [1593, 1615]}, "RootSafetyCheck.checkAndPersistMint": {"14": [2934, 2988], "15": [2915, 2918]}, "RootSafetyCheck.checkAndPersistRedeem": {"12": [3243, 3299], "13": [3224, 3227]}, "RootSafetyCheck.getChecks": {"6": [1382, 1406]}, "RootSafetyCheck.isMintSafe": {"16": [2122, 2173], "17": [2232, 2237], "18": [2103, 2106]}, "RootSafetyCheck.isRedeemSafe": {"7": [2550, 2603], "8": [2662, 2667], "9": [2531, 2534]}, "RootSafetyCheck.removeCheck": {"10": [1746, 1801], "11": [1811, 1835]}}, "94": {}, "95": {}, "96": {}, "97": {}, "98": {}, "99": {}}}, "dependencies": ["ConfigHelpers", "ConfigKeys", "EnumerableExtensions", "OpenZeppelin/openzeppelin-contracts@4.3.2/EnumerableMap", "EnumerableMapping", "OpenZeppelin/openzeppelin-contracts@4.3.2/EnumerableSet", "Errors", "Governable", "GovernableBase", "IAssetRegistry", "IBatchVaultPriceOracle", "ICapAuthentication", "IFeeBank", "IFeeHandler", "IGYDToken", "IGovernable", "IGyroConfig", "IMotherboard", "IPAMM", "IReserve", "IReserveManager", "ISafetyCheck", "IVaultRegistry"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806368b23e521161007157806368b23e5214610162578063a076382014610175578063d625436c14610188578063e2cc86791461019b578063e3056a34146101ae578063e4c0aaf4146101c157600080fd5b80630c340a24146100b9578063238efcbc146100e95780633d4d10e2146100f357806344bbdb55146101065780634d9a12c41461012d5780636382b29614610142575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101d4565b005b6100f1610101366004610ba6565b61028d565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61013561034f565b6040516100e09190610bca565b610155610150366004610e22565b610360565b6040516100e0919061103e565b6100f1610170366004610ba6565b61041e565b6100f1610183366004610e22565b6104e0565b6100f1610196366004610e22565b6105f9565b6101556101a9366004610e22565b61070d565b6001546100cc906001600160a01b031681565b6100f16101cf366004610ba6565b6107c4565b600154604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102225760405162461bcd60e51b8152600401610219919061103e565b60405180910390fd5b5060008054600180546001600160a01b03198084166001600160a01b03808416919091179095551690556040805192909116808352336020840152917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491015b60405180910390a150565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102d25760405162461bcd60e51b8152600401610219919061103e565b506102de600282610899565b60405180604001604052806002815260200161333160f01b815250906103175760405162461bcd60e51b8152600401610219919061103e565b506040516001600160a01b038216907f75ec3ef6c1afb45dd0a2bbb3a4f14cac03241c33fc24c352e25ea690e22a923290600090a250565b606061035b60026108b7565b905090565b6060600061036e6002610966565b905060005b8181101561041757610386600282610970565b6001600160a01b0316636382b296856040518263ffffffff1660e01b81526004016103b191906110cd565b600060405180830381865afa1580156103ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103f691908101906111f4565b80519093501561040557610417565b8061040f8161129e565b915050610373565b5050919050565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146104635760405162461bcd60e51b8152600401610219919061103e565b5061046f60028261097c565b60405180604001604052806002815260200161333160f01b815250906104a85760405162461bcd60e51b8152600401610219919061103e565b506040516001600160a01b038216907fd37223475c04a60e97eb30bc3a38b4aef6a37def09d1ed6b88c881847362426d90600090a250565b6105127f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610991565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b8152509061055f5760405162461bcd60e51b8152600401610219919061103e565b50600061056c6002610966565b905060005b818110156105f457610584600282610970565b6001600160a01b031663a0763820846040518263ffffffff1660e01b81526004016105af91906110cd565b600060405180830381600087803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b5050505080806105ec9061129e565b915050610571565b505050565b61062b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610991565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b815250906106785760405162461bcd60e51b8152600401610219919061103e565b5060006106856002610966565b905060005b818110156105f45761069d600282610970565b6001600160a01b031663d625436c846040518263ffffffff1660e01b81526004016106c891906110cd565b600060405180830381600087803b1580156106e257600080fd5b505af11580156106f6573d6000803e3d6000fd5b5050505080806107059061129e565b91505061068a565b6060600061071b6002610966565b905060005b8181101561041757610733600282610970565b6001600160a01b031663e2cc8679856040518263ffffffff1660e01b815260040161075e91906110cd565b600060405180830381865afa15801561077b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a391908101906111f4565b8051909350156107b257610417565b806107bc8161129e565b915050610720565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146108095760405162461bcd60e51b8152600401610219919061103e565b50604080518082019091526002815261333160f01b60208201526001600160a01b03821661084a5760405162461bcd60e51b8152600401610219919061103e565b50600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f67235ba2e63c748a35b95c4f92a3bbc2a1389938170a5ce6c9add5d0b03a314a90602001610282565b60006108ae836001600160a01b038416610a12565b90505b92915050565b606060006108c483610966565b905060008167ffffffffffffffff8111156108e1576108e1610c17565b60405190808252806020026020018201604052801561090a578160200160208202803683370190505b50905060005b8281101561095e576109228582610970565b828281518110610934576109346112b9565b6001600160a01b0390921660209283029190910190910152806109568161129e565b915050610910565b509392505050565b60006108b1825490565b60006108ae8383610a61565b60006108ae836001600160a01b038416610a8b565b6040516321f8a72160e01b8152724d4f54484552424f4152445f4144445245535360681b60048201526000906001600160a01b038316906321f8a72190602401602060405180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b191906112cf565b6000818152600183016020526040812054610a59575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108b1565b5060006108b1565b6000826000018281548110610a7857610a786112b9565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610b74576000610aaf6001836112ec565b8554909150600090610ac3906001906112ec565b9050818114610b28576000866000018281548110610ae357610ae36112b9565b9060005260206000200154905080876000018481548110610b0657610b066112b9565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b3957610b39611303565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108b1565b60009150506108b1565b6001600160a01b0381168114610b9357600080fd5b50565b8035610ba181610b7e565b919050565b600060208284031215610bb857600080fd5b8135610bc381610b7e565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610c0b5783516001600160a01b031683529284019291840191600101610be6565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610c5057610c50610c17565b60405290565b6040805190810167ffffffffffffffff81118282101715610c5057610c50610c17565b604051610120810167ffffffffffffffff81118282101715610c5057610c50610c17565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cc657610cc6610c17565b604052919050565b600067ffffffffffffffff821115610ce857610ce8610c17565b5060051b60200190565b803560ff81168114610ba157600080fd5b600060808284031215610d1557600080fd5b6040516080810181811067ffffffffffffffff82111715610d3857610d38610c17565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b80358015158114610ba157600080fd5b600082601f830112610d8a57600080fd5b81356020610d9f610d9a83610cce565b610c9d565b82815260609283028501820192828201919087851115610dbe57600080fd5b8387015b85811015610e155781818a031215610dda5760008081fd5b610de2610c2d565b8135610ded81610b7e565b8152610dfa828701610d69565b81870152604082810135908201528452928401928101610dc2565b5090979650505050505050565b600060208284031215610e3457600080fd5b67ffffffffffffffff8083351115610e4b57600080fd5b60408335840185031215610e5e57600080fd5b610e66610c56565b8184358501351115610e7757600080fd5b83358401803501601f81018613610e8d57600080fd5b610e9a610d9a8235610cce565b81358082526020808301929160051b840101881015610eb857600080fd5b602083015b6020843560051b850101811015610fec578581351115610edc57600080fd5b80358401601f196040828c0382011215610ef557600080fd5b610efd610c56565b8860208401351115610f0e57600080fd5b6020830135830161018083828f03011215610f2857600080fd5b610f30610c79565b9250610f3e60208201610b96565b8352610f4c60408201610cf2565b6020840152610f5d60608201610b96565b604084015260808101356060840152610f798d60a08301610d03565b608084015261012081013560a084015261014081013560c084015261016081013560e0840152896101808201351115610fb157600080fd5b610fc58d6020610180840135840101610d79565b61010084015250908152604091909101356020808301919091529084529283019201610ebd565b50835250611001905084358501602001610d69565b6020820152949350505050565b60005b83811015611029578181015183820152602001611011565b83811115611038576000848401525b50505050565b602081526000825180602084015261105d81604085016020870161100e565b601f01601f19169190910160400192915050565b600081518084526020808501945080840160005b838110156110c257815180516001600160a01b03168852838101511515848901526040908101519088015260609096019590820190600101611085565b509495945050505050565b600060208083526060808401855160408085880152828251808552608094508489019150848160051b8a0101878501945060005b828110156111d957607f198b83030184528551805186845280516001600160a01b03908116888601528b82015160ff168b8601528782015116898501528981015160a08086019190915289820151805160c080880191909152602082015160e08801526040820151610100880152606082015161012088015290918301516101408701528201516101608601525060e081015161018080860191909152610100909101516101a08501919091526111bc6101c0850182611071565b918b0151938b019390935295890195938901939150600101611101565b50968a0151801515848b0152969a9950505050505050505050565b60006020828403121561120657600080fd5b815167ffffffffffffffff8082111561121e57600080fd5b818401915084601f83011261123257600080fd5b81518181111561124457611244610c17565b611257601f8201601f1916602001610c9d565b915080825285602082850101111561126e57600080fd5b61127f81602084016020860161100e565b50949350505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156112b2576112b2611288565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156112e157600080fd5b8151610bc381610b7e565b6000828210156112fe576112fe611288565b500390565b634e487b7160e01b600052603160045260246000fdfea264697066735822122025244c61273b59015937a76c577adf4dbf18f0b3f4b8eeb86839d60088134c8964736f6c634300080a0033", "deployedSourceMap": "521:2797:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:32:43;;;;;-1:-1:-1;;;;;325:32:43;;;;;;-1:-1:-1;;;;;287:32:156;;;269:51;;257:2;242:18;325:32:43;;;;;;;;846:301;;;:::i;:::-;;1464:158:65;;;;;;:::i;:::-;;:::i;878:39::-;;;;;1312:101;;;:::i;:::-;;;;;;;:::i;2307:391::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1676:166::-;;;;;;:::i;:::-;;:::i;3044:272::-;;;;;;:::i;:::-;;:::i;2737:268::-;;;;;;:::i;:::-;;:::i;1881:387::-;;;;;;:::i;:::-;;:::i;363:39:43:-;;;;;-1:-1:-1;;;;;363:39:43;;;555:253;;;;;;:::i;:::-;;:::i;846:301::-;924:15;;941:21;;;;;;;;;;;;-1:-1:-1;;;941:21:43;;;;;-1:-1:-1;;;;;924:15:43;910:10;:29;902:61;;;;-1:-1:-1;;;902:61:43;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;973:23:43;999:8;;;1028:15;;-1:-1:-1;;;;;;1017:26:43;;;-1:-1:-1;;;;;1028:15:43;;;1017:26;;;;;;;1053:28;;;1096:44;;;999:8;;;;8829:34:156;;;1129:10:43;8894:2:156;8879:18;;8872:43;999:8:43;1096:44;;8764:18:156;1096:44:43;;;;;;;;892:255;846:301::o;1464:158:65:-;467:8:43;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:43;;;;;-1:-1:-1;;;;;467:8:43;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:43;;;;;;;;:::i;:::-;-1:-1:-1;1539:18:65::1;:7;1551:5:::0;1539:11:::1;:18::i;:::-;1559:23;;;;;;;;;;;;;-1:-1:-1::0;;;1559:23:65::1;;::::0;1531:52:::1;;;;;-1:-1:-1::0;;;1531:52:65::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1598:17:65::1;::::0;-1:-1:-1;;;;;1598:17:65;::::1;::::0;::::1;::::0;;;::::1;1464:158:::0;:::o;1312:101::-;1354:16;1389:17;:7;:15;:17::i;:::-;1382:24;;1312:101;:::o;2307:391::-;2423:17;2456:14;2473:16;:7;:14;:16::i;:::-;2456:33;;2504:9;2499:193;2523:6;2519:1;:10;2499:193;;;2569:13;:7;2580:1;2569:10;:13::i;:::-;-1:-1:-1;;;;;2556:40:65;;2597:5;2556:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2556:47:65;;;;;;;;;;;;:::i;:::-;2621:17;;2550:53;;-1:-1:-1;2621:21:65;2617:65;;2662:5;;2617:65;2531:3;;;;:::i;:::-;;;;2499:193;;;;2446:252;2307:391;;;:::o;1676:166::-;467:8:43;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:43;;;;;-1:-1:-1;;;;;467:8:43;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:43;;;;;;;;:::i;:::-;-1:-1:-1;1754:21:65::1;:7;1769:5:::0;1754:14:::1;:21::i;:::-;1777:23;;;;;;;;;;;;;-1:-1:-1::0;;;1777:23:65::1;;::::0;1746:55:::1;;;;;-1:-1:-1::0;;;1746:55:65::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1816:19:65::1;::::0;-1:-1:-1;;;;;1816:19:65;::::1;::::0;::::1;::::0;;;::::1;1676:166:::0;:::o;3044:272::-;991:27;:10;-1:-1:-1;;;;;991:25:65;;:27::i;:::-;-1:-1:-1;;;;;969:50:65;:10;-1:-1:-1;;;;;969:50:65;;1021:21;;;;;;;;;;;;;-1:-1:-1;;;1021:21:65;;;961:82;;;;;-1:-1:-1;;;961:82:65;;;;;;;;:::i;:::-;;3149:14:::1;3166:16;:7;:14;:16::i;:::-;3149:33;;3197:9;3192:118;3216:6;3212:1;:10;3192:118;;;3256:13;:7;3267:1:::0;3256:10:::1;:13::i;:::-;-1:-1:-1::0;;;;;3243:49:65::1;;3293:5;3243:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3224:3;;;;;:::i;:::-;;;;3192:118;;;;3139:177;3044:272:::0;:::o;2737:268::-;991:27;:10;-1:-1:-1;;;;;991:25:65;;:27::i;:::-;-1:-1:-1;;;;;969:50:65;:10;-1:-1:-1;;;;;969:50:65;;1021:21;;;;;;;;;;;;;-1:-1:-1;;;1021:21:65;;;961:82;;;;;-1:-1:-1;;;961:82:65;;;;;;;;:::i;:::-;;2840:14:::1;2857:16;:7;:14;:16::i;:::-;2840:33;;2888:9;2883:116;2907:6;2903:1;:10;2883:116;;;2947:13;:7;2958:1:::0;2947:10:::1;:13::i;:::-;-1:-1:-1::0;;;;;2934:47:65::1;;2982:5;2934:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2915:3;;;;;:::i;:::-;;;;2883:116;;1881:387:::0;1995:17;2028:14;2045:16;:7;:14;:16::i;:::-;2028:33;;2076:9;2071:191;2095:6;2091:1;:10;2071:191;;;2141:13;:7;2152:1;2141:10;:13::i;:::-;-1:-1:-1;;;;;2128:38:65;;2167:5;2128:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2128:45:65;;;;;;;;;;;;:::i;:::-;2191:17;;2122:51;;-1:-1:-1;2191:21:65;2187:65;;2232:5;;2187:65;2103:3;;;;:::i;:::-;;;;2071:191;;555:253:43;467:8;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:43;;;;;-1:-1:-1;;;;;467:8:43;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:43;;;;;;;;:::i;:::-;-1:-1:-1;687:23:43::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;687:23:43::1;::::0;::::1;::::0;-1:-1:-1;;;;;651:34:43;::::1;643:68;;;;-1:-1:-1::0;;;643:68:43::1;;;;;;;;:::i;:::-;-1:-1:-1::0;721:15:43::1;:29:::0;;-1:-1:-1;;;;;;721:29:43::1;-1:-1:-1::0;;;;;721:29:43;::::1;::::0;;::::1;::::0;;;765:36:::1;::::0;269:51:156;;;765:36:43::1;::::0;257:2:156;242:18;765:36:43::1;123:203:156::0;7545:150:31;7615:4;7638:50;7643:3;-1:-1:-1;;;;;7663:23:31;;7638:4;:50::i;:::-;7631:57;;7545:150;;;;;:::o;739:351:143:-;847:16;879:11;893:18;:9;:16;:18::i;:::-;879:32;;921:23;961:3;947:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:18:143;;921:44;;980:9;975:86;999:3;995:1;:7;975:86;;;1035:15;:9;1048:1;1035:12;:15::i;:::-;1023:6;1030:1;1023:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1023:27:143;;;:9;;;;;;;;;;;:27;1004:3;;;;:::i;:::-;;;;975:86;;;-1:-1:-1;1077:6:143;739:351;-1:-1:-1;;;739:351:143:o;8346:115:31:-;8409:7;8435:19;8443:3;3961:18;;3879:107;8803:156;8877:7;8927:22;8931:3;8943:5;8927:3;:22::i;7863:156::-;7936:4;7959:53;7967:3;-1:-1:-1;;;;;7987:23:31;;7959:7;:53::i;2604:176:139:-;2719:53;;-1:-1:-1;;;2719:53:139;;-1:-1:-1;;;2719:53:139;;;13587:25:156;2675:12:139;;-1:-1:-1;;;;;2719:21:139;;;;;13560:18:156;;2719:53:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1630:404:31:-;1693:4;3767:19;;;:12;;;:19;;;;;;1709:319;;-1:-1:-1;1751:23:31;;;;;;;;:11;:23;;;;;;;;;;;;;1931:18;;1909:19;;;:12;;;:19;;;;;;:40;;;;1963:11;;1709:319;-1:-1:-1;2012:5:31;2005:12;;4328:118;4395:7;4421:3;:11;;4433:5;4421:18;;;;;;;;:::i;:::-;;;;;;;;;4414:25;;4328:118;;;;:::o;2202:1388::-;2268:4;2405:19;;;:12;;;:19;;;;;;2439:15;;2435:1149;;2808:21;2832:14;2845:1;2832:10;:14;:::i;:::-;2880:18;;2808:38;;-1:-1:-1;2860:17:31;;2880:22;;2901:1;;2880:22;:::i;:::-;2860:42;;2934:13;2921:9;:26;2917:398;;2967:17;2987:3;:11;;2999:9;2987:22;;;;;;;;:::i;:::-;;;;;;;;;2967:42;;3138:9;3109:3;:11;;3121:13;3109:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3221:23;;;:12;;;:23;;;;;:36;;;2917:398;3393:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3485:3;:12;;:19;3498:5;3485:19;;;;;;;;;;;3478:26;;;3526:4;3519:11;;;;;;;2435:1149;3568:5;3561:12;;;;;331:131:156;-1:-1:-1;;;;;406:31:156;;396:42;;386:70;;452:1;449;442:12;386:70;331:131;:::o;467:134::-;535:20;;564:31;535:20;564:31;:::i;:::-;467:134;;;:::o;606:247::-;665:6;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;773:9;760:23;792:31;817:5;792:31;:::i;:::-;842:5;606:247;-1:-1:-1;;;606:247:156:o;1087:658::-;1258:2;1310:21;;;1380:13;;1283:18;;;1402:22;;;1229:4;;1258:2;1481:15;;;;1455:2;1440:18;;;1229:4;1524:195;1538:6;1535:1;1532:13;1524:195;;;1603:13;;-1:-1:-1;;;;;1599:39:156;1587:52;;1694:15;;;;1659:12;;;;1635:1;1553:9;1524:195;;;-1:-1:-1;1736:3:156;;1087:658;-1:-1:-1;;;;;;1087:658:156:o;1750:127::-;1811:10;1806:3;1802:20;1799:1;1792:31;1842:4;1839:1;1832:15;1866:4;1863:1;1856:15;1882:253;1954:2;1948:9;1996:4;1984:17;;2031:18;2016:34;;2052:22;;;2013:62;2010:88;;;2078:18;;:::i;:::-;2114:2;2107:22;1882:253;:::o;2140:257::-;2212:4;2206:11;;;2244:17;;2291:18;2276:34;;2312:22;;;2273:62;2270:88;;;2338:18;;:::i;2402:255::-;2474:2;2468:9;2516:6;2504:19;;2553:18;2538:34;;2574:22;;;2535:62;2532:88;;;2600:18;;:::i;2662:275::-;2733:2;2727:9;2798:2;2779:13;;-1:-1:-1;;2775:27:156;2763:40;;2833:18;2818:34;;2854:22;;;2815:62;2812:88;;;2880:18;;:::i;:::-;2916:2;2909:22;2662:275;;-1:-1:-1;2662:275:156:o;2942:198::-;3017:4;3050:18;3042:6;3039:30;3036:56;;;3072:18;;:::i;:::-;-1:-1:-1;3117:1:156;3113:14;3129:4;3109:25;;2942:198::o;3145:156::-;3211:20;;3271:4;3260:16;;3250:27;;3240:55;;3291:1;3288;3281:12;3306:619;3375:5;3423:4;3411:9;3406:3;3402:19;3398:30;3395:50;;;3441:1;3438;3431:12;3395:50;3474:2;3468:9;3516:4;3508:6;3504:17;3587:6;3575:10;3572:22;3551:18;3539:10;3536:34;3533:62;3530:88;;;3598:18;;:::i;:::-;3638:10;3634:2;3627:22;;3667:6;3658:15;;3710:9;3697:23;3689:6;3682:39;3782:2;3771:9;3767:18;3754:32;3749:2;3741:6;3737:15;3730:57;3848:2;3837:9;3833:18;3820:32;3815:2;3807:6;3803:15;3796:57;3914:2;3903:9;3899:18;3886:32;3881:2;3873:6;3869:15;3862:57;;3306:619;;;;:::o;3930:160::-;3995:20;;4051:13;;4044:21;4034:32;;4024:60;;4080:1;4077;4070:12;4095:1153;4160:5;4213:3;4206:4;4198:6;4194:17;4190:27;4180:55;;4231:1;4228;4221:12;4180:55;4267:6;4254:20;4293:4;4317:75;4333:58;4388:2;4333:58;:::i;:::-;4317:75;:::i;:::-;4426:15;;;4488:4;4531:11;;;4519:24;;4515:33;;;4457:12;;;;4414:3;4560:15;;;4557:35;;;4588:1;4585;4578:12;4557:35;4624:2;4616:6;4612:15;4636:583;4652:6;4647:3;4644:15;4636:583;;;4728:2;4722:3;4717;4713:13;4709:22;4706:112;;;4772:1;4801:2;4797;4790:14;4706:112;4844:22;;:::i;:::-;4907:3;4894:17;4924:33;4949:7;4924:33;:::i;:::-;4970:22;;5028:29;5044:12;;;5028:29;:::i;:::-;5012:14;;;5005:53;5081:2;5132:12;;;5119:26;5103:14;;;5096:50;5159:18;;5197:12;;;;4669;;4636:583;;;-1:-1:-1;5237:5:156;;4095:1153;-1:-1:-1;;;;;;;4095:1153:156:o;5253:2708::-;5336:6;5389:2;5377:9;5368:7;5364:23;5360:32;5357:52;;;5405:1;5402;5395:12;5357:52;5428:18;5486:2;5474:9;5461:23;5458:31;5455:51;;;5502:1;5499;5492:12;5455:51;5577:4;5563:9;5550:23;5539:9;5535:39;5526:7;5522:53;5518:64;5515:84;;;5595:1;5592;5585:12;5515:84;5621:22;;:::i;:::-;5713:2;5699:9;5686:23;5675:9;5671:39;5658:53;5655:61;5652:81;;;5729:1;5726;5719:12;5652:81;5825:23;;5810:39;;5797:53;;5752:99;5882:4;5874:13;;5870:27;-1:-1:-1;5860:55:156;;5911:1;5908;5901:12;5860:55;5935:89;5951:72;6019:2;6006:16;5951:72;:::i;5935:89::-;6070:16;;6058:29;;;6112:2;6103:12;;;;6046:3;6146:1;6142:24;6134:33;;6130:42;6127:55;-1:-1:-1;6124:75:156;;;6195:1;6192;6185:12;6124:75;6227:2;6223;6219:11;6239:1565;6302:2;6295;6282:16;6279:1;6275:24;6271:2;6267:33;6263:42;6258:3;6255:51;6239:1565;;;6386:2;6380:3;6367:17;6364:25;6361:45;;;6402:1;6399;6392:12;6361:45;6437:17;;6429:26;;-1:-1:-1;;6532:4:156;6509:16;;;6505:25;;6501:36;6498:56;;;6550:1;6547;6540:12;6498:56;6582:22;;:::i;:::-;6650:2;6644;6640;6636:11;6623:25;6620:33;6617:53;;;6666:1;6663;6656:12;6617:53;6722:2;6718;6714:11;6701:25;6697:2;6693:34;6774:6;6769:2;6764;6755:7;6751:16;6747:25;6743:38;6740:58;;;6794:1;6791;6784:12;6740:58;6826:22;;:::i;:::-;6811:37;;6877:31;6904:2;6900;6896:11;6877:31;:::i;:::-;6868:7;6861:48;6947:31;6972:4;6968:2;6964:13;6947:31;:::i;:::-;6942:2;6933:7;6929:16;6922:57;7019:31;7046:2;7042;7038:11;7019:31;:::i;:::-;7012:4;7003:7;6999:18;6992:59;7110:3;7106:2;7102:12;7089:26;7084:2;7075:7;7071:16;7064:52;7155:63;7210:7;7204:3;7200:2;7196:12;7155:63;:::i;:::-;7149:3;7140:7;7136:17;7129:90;7279:3;7275:2;7271:12;7258:26;7252:3;7243:7;7239:17;7232:53;7346:3;7342:2;7338:12;7325:26;7318:4;7309:7;7305:18;7298:54;7413:3;7409:2;7405:12;7392:26;7385:4;7376:7;7372:18;7365:54;7469:2;7459:6;7455:2;7451:15;7438:29;7435:37;7432:57;;;7485:1;7482;7475:12;7432:57;7528:97;7617:7;7612:2;7601:6;7597:2;7593:15;7580:29;7576:2;7572:38;7568:47;7528:97;:::i;:::-;7522:3;7509:17;;7502:124;-1:-1:-1;7639:24:156;;;7722:4;7714:13;;;;7701:27;7696:2;7683:16;;;7676:53;;;;7742:20;;;7782:12;;;;6324;6239:1565;;;-1:-1:-1;7813:20:156;;-1:-1:-1;7865:65:156;;-1:-1:-1;7900:23:156;;7885:39;;7926:2;7881:48;7865:65;:::i;:::-;7860:2;7849:14;;7842:89;7853:5;5253:2708;-1:-1:-1;;;;5253:2708:156:o;7966:258::-;8038:1;8048:113;8062:6;8059:1;8056:13;8048:113;;;8138:11;;;8132:18;8119:11;;;8112:39;8084:2;8077:10;8048:113;;;8179:6;8176:1;8173:13;8170:48;;;8214:1;8205:6;8200:3;8196:16;8189:27;8170:48;;7966:258;;;:::o;8229:383::-;8378:2;8367:9;8360:21;8341:4;8410:6;8404:13;8453:6;8448:2;8437:9;8433:18;8426:34;8469:66;8528:6;8523:2;8512:9;8508:18;8503:2;8495:6;8491:15;8469:66;:::i;:::-;8596:2;8575:15;-1:-1:-1;;8571:29:156;8556:45;;;;8603:2;8552:54;;8229:383;-1:-1:-1;;8229:383:156:o;9382:655::-;9446:3;9484:5;9478:12;9511:6;9506:3;9499:19;9537:4;9566:2;9561:3;9557:12;9550:19;;9603:2;9596:5;9592:14;9624:1;9634:378;9648:6;9645:1;9642:13;9634:378;;;9707:13;;9749:9;;-1:-1:-1;;;;;9745:35:156;9733:48;;9835:11;;;9829:18;9822:26;9815:34;9801:12;;;9794:56;9873:4;9917:11;;;9911:18;9897:12;;;9890:40;9959:4;9950:14;;;;9987:15;;;;9777:1;9663:9;9634:378;;;-1:-1:-1;10028:3:156;;9382:655;-1:-1:-1;;;;;9382:655:156:o;10042:2279::-;10182:4;10211:2;10240;10229:9;10222:21;10262:2;10302;10291:9;10287:18;10340:6;10334:13;10366:4;10406:2;10401;10390:9;10386:18;10379:30;10429:6;10464:12;10458:19;10501:6;10493;10486:22;10527:3;10517:13;;10561:2;10550:9;10546:18;10539:25;;10623:2;10613:6;10610:1;10606:14;10595:9;10591:30;10587:39;10667:2;10653:12;10649:21;10635:35;;10688:1;10698:1481;10712:6;10709:1;10706:13;10698:1481;;;-1:-1:-1;;10777:22:156;;;10773:37;10761:50;;10834:13;;10882:9;;10904:18;;;10954:21;;-1:-1:-1;;;;;80:31:156;;;10977:15;;;68:44;11034:23;;;11028:30;8993:4;8982:16;11104:15;;;8970:29;11161:23;;;11155:30;80:31;11233:15;;;68:44;11278:23;;;11272:30;11325:3;11348:15;;;11341:27;;;;11409:23;;;11403:30;9094:12;;11456:3;11529:15;;;9082:25;;;;9156:4;9145:16;;9139:23;9123:14;;;9116:47;9212:4;9201:16;;9195:23;9179:14;;;9172:47;9268:4;9257:16;;9251:23;9235:14;;;9228:47;11403:30;;11589:23;;11583:30;11577:3;11565:16;;11558:56;11658:23;;11652:30;11646:3;11634:16;;11627:56;-1:-1:-1;11732:4:156;11712:25;;11706:32;11762:6;11788:16;;;11781:28;;;;11870:6;11850:27;;;11844:34;11910:3;11898:16;;11891:29;;;;11944:73;12012:3;12000:16;;11844:34;11944:73;:::i;:::-;12060:11;;;12054:18;12037:15;;;12030:43;;;;12122:15;;;;12157:12;;;;11933:84;-1:-1:-1;10734:1:156;10727:9;10698:1481;;;-1:-1:-1;12216:15:156;;;12210:22;9356:13;;9349:21;12273:18;;;9337:34;12210:22;12309:6;10042:2279;-1:-1:-1;;;;;;;;;;10042:2279:156:o;12326:706::-;12406:6;12459:2;12447:9;12438:7;12434:23;12430:32;12427:52;;;12475:1;12472;12465:12;12427:52;12508:9;12502:16;12537:18;12578:2;12570:6;12567:14;12564:34;;;12594:1;12591;12584:12;12564:34;12632:6;12621:9;12617:22;12607:32;;12677:7;12670:4;12666:2;12662:13;12658:27;12648:55;;12699:1;12696;12689:12;12648:55;12728:2;12722:9;12750:2;12746;12743:10;12740:36;;;12756:18;;:::i;:::-;12798:53;12841:2;12822:13;;-1:-1:-1;;12818:27:156;12847:2;12814:36;12798:53;:::i;:::-;12785:66;;12874:2;12867:5;12860:17;12914:7;12909:2;12904;12900;12896:11;12892:20;12889:33;12886:53;;;12935:1;12932;12925:12;12886:53;12948:54;12999:2;12994;12987:5;12983:14;12978:2;12974;12970:11;12948:54;:::i;:::-;-1:-1:-1;13021:5:156;12326:706;-1:-1:-1;;;;12326:706:156:o;13037:127::-;13098:10;13093:3;13089:20;13086:1;13079:31;13129:4;13126:1;13119:15;13153:4;13150:1;13143:15;13169:135;13208:3;-1:-1:-1;;13229:17:156;;13226:43;;;13249:18;;:::i;:::-;-1:-1:-1;13296:1:156;13285:13;;13169:135::o;13309:127::-;13370:10;13365:3;13361:20;13358:1;13351:31;13401:4;13398:1;13391:15;13425:4;13422:1;13415:15;13623:251;13693:6;13746:2;13734:9;13725:7;13721:23;13717:32;13714:52;;;13762:1;13759;13752:12;13714:52;13794:9;13788:16;13813:31;13838:5;13813:31;:::i;13879:125::-;13919:4;13947:1;13944;13941:8;13938:34;;;13952:18;;:::i;:::-;-1:-1:-1;13989:9:156;;13879:125::o;14009:127::-;14070:10;14065:3;14061:20;14058:1;14051:31;14101:4;14098:1;14091:15;14125:4;14122:1;14115:15", "language": "Solidity", "natspec": {"events": {"GovernorChangeRequested(address)": {"notice": "Emmited when the governor is change is requested"}, "GovernorChanged(address,address)": {"notice": "Emmited when the governor is changed"}}, "kind": "dev", "methods": {"acceptGovernance()": {"notice": "Called by the pending governor to approve the change"}, "addCheck(address)": {"notice": "adds a check to be performed"}, "changeGovernor(address)": {"notice": "Changes the governor can only be called by the current governor"}, "checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a mint operation is safe and reverts otherwise This is only called when an actual mint is performed The implementation should store any relevant information for the mint"}, "checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a redeem operation is safe and reverts otherwise This is only called when an actual redeem is performed The implementation should store any relevant information for the redeem"}, "getChecks()": {"returns": {"_0": "all the checks registered"}}, "governor()": {"notice": "Returns the current governor"}, "isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a mint operation is safe", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a redeem operation is safe", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "pendingGovernor()": {"notice": "Returns the pending governor"}, "removeCheck(address)": {"notice": "removes a check to be performed"}}, "version": 1}, "offset": [521, 3318], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68B23E52 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x68B23E52 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA0763820 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xD625436C EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xE2CC8679 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x3D4D10E2 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x4D9A12C4 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x6382B296 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x1D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH2 0xCC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP6 SSTORE AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP2 AND DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xDE4B3F61490B74C0ED6237523974FE299126BBBF8A8A7482FD220104C59B0C84 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST POP PUSH2 0x2DE PUSH1 0x2 DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x75EC3EF6C1AFB45DD0A2BBB3A4F14CAC03241C33FC24C352E25EA690E22A9232 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35B PUSH1 0x2 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x36E PUSH1 0x2 PUSH2 0x966 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x417 JUMPI PUSH2 0x386 PUSH1 0x2 DUP3 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6382B296 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3F6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11F4 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP4 POP ISZERO PUSH2 0x405 JUMPI PUSH2 0x417 JUMP JUMPDEST DUP1 PUSH2 0x40F DUP2 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x373 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST POP PUSH2 0x46F PUSH1 0x2 DUP3 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xD37223475C04A60E97EB30BC3A38B4AEF6A37DEF09D1ED6B88C881847362426D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x512 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x991 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x56C PUSH1 0x2 PUSH2 0x966 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x584 PUSH1 0x2 DUP3 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA0763820 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x5EC SWAP1 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x571 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62B PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x991 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x685 PUSH1 0x2 PUSH2 0x966 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x69D PUSH1 0x2 DUP3 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD625436C DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C8 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x705 SWAP1 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x68A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x71B PUSH1 0x2 PUSH2 0x966 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x417 JUMPI PUSH2 0x733 PUSH1 0x2 DUP3 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE2CC8679 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x77B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7A3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x11F4 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP4 POP ISZERO PUSH2 0x7B2 JUMPI PUSH2 0x417 JUMP JUMPDEST DUP1 PUSH2 0x7BC DUP2 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x720 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x67235BA2E63C748A35B95C4F92A3BBC2A1389938170A5CE6C9ADD5D0B03A314A SWAP1 PUSH1 0x20 ADD PUSH2 0x282 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x8C4 DUP4 PUSH2 0x966 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E1 JUMPI PUSH2 0x8E1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x90A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x95E JUMPI PUSH2 0x922 DUP6 DUP3 PUSH2 0x970 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x934 JUMPI PUSH2 0x934 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x956 DUP2 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x910 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B1 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AE DUP4 DUP4 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH19 0x4D4F54484552424F4152445F41444452455353 PUSH1 0x68 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B1 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA59 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x8B1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA78 JUMPI PUSH2 0xA78 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xB74 JUMPI PUSH1 0x0 PUSH2 0xAAF PUSH1 0x1 DUP4 PUSH2 0x12EC JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xAC3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x12EC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0xB28 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAE3 JUMPI PUSH2 0xAE3 PUSH2 0x12B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB06 JUMPI PUSH2 0xB06 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0xB39 JUMPI PUSH2 0xB39 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xBA1 DUP2 PUSH2 0xB7E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBC3 DUP2 PUSH2 0xB7E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC0B JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xBE6 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC50 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC50 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC50 JUMPI PUSH2 0xC50 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCC6 JUMPI PUSH2 0xCC6 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCE8 JUMPI PUSH2 0xCE8 PUSH2 0xC17 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xBA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD38 JUMPI PUSH2 0xD38 PUSH2 0xC17 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD9F PUSH2 0xD9A DUP4 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 SWAP3 DUP4 MUL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP3 ADD SWAP2 SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xE15 JUMPI DUP2 DUP2 DUP11 SUB SLT ISZERO PUSH2 0xDDA JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xDE2 PUSH2 0xC2D JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDED DUP2 PUSH2 0xB7E JUMP JUMPDEST DUP2 MSTORE PUSH2 0xDFA DUP3 DUP8 ADD PUSH2 0xD69 JUMP JUMPDEST DUP2 DUP8 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0xDC2 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 CALLDATALOAD GT ISZERO PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP4 CALLDATALOAD DUP5 ADD DUP6 SUB SLT ISZERO PUSH2 0xE5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 PUSH2 0xC56 JUMP JUMPDEST DUP2 DUP5 CALLDATALOAD DUP6 ADD CALLDATALOAD GT ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD DUP5 ADD DUP1 CALLDATALOAD ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0xE8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9A PUSH2 0xD9A DUP3 CALLDATALOAD PUSH2 0xCCE JUMP JUMPDEST DUP2 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 SWAP2 PUSH1 0x5 SHL DUP5 ADD ADD DUP9 LT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD JUMPDEST PUSH1 0x20 DUP5 CALLDATALOAD PUSH1 0x5 SHL DUP6 ADD ADD DUP2 LT ISZERO PUSH2 0xFEC JUMPI DUP6 DUP2 CALLDATALOAD GT ISZERO PUSH2 0xEDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP5 ADD PUSH1 0x1F NOT PUSH1 0x40 DUP3 DUP13 SUB DUP3 ADD SLT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFD PUSH2 0xC56 JUMP JUMPDEST DUP9 PUSH1 0x20 DUP5 ADD CALLDATALOAD GT ISZERO PUSH2 0xF0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP4 ADD PUSH2 0x180 DUP4 DUP3 DUP16 SUB ADD SLT ISZERO PUSH2 0xF28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF30 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP PUSH2 0xF3E PUSH1 0x20 DUP3 ADD PUSH2 0xB96 JUMP JUMPDEST DUP4 MSTORE PUSH2 0xF4C PUSH1 0x40 DUP3 ADD PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF5D PUSH1 0x60 DUP3 ADD PUSH2 0xB96 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xF79 DUP14 PUSH1 0xA0 DUP4 ADD PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x140 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE DUP10 PUSH2 0x180 DUP3 ADD CALLDATALOAD GT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC5 DUP14 PUSH1 0x20 PUSH2 0x180 DUP5 ADD CALLDATALOAD DUP5 ADD ADD PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE POP SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP5 MSTORE SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xEBD JUMP JUMPDEST POP DUP4 MSTORE POP PUSH2 0x1001 SWAP1 POP DUP5 CALLDATALOAD DUP6 ADD PUSH1 0x20 ADD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1029 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1011 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1038 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x105D DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x100E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10C2 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP4 DUP2 ADD MLOAD ISZERO ISZERO DUP5 DUP10 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1085 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP6 MLOAD PUSH1 0x40 DUP1 DUP6 DUP9 ADD MSTORE DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x80 SWAP5 POP DUP5 DUP10 ADD SWAP2 POP DUP5 DUP2 PUSH1 0x5 SHL DUP11 ADD ADD DUP8 DUP6 ADD SWAP5 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x7F NOT DUP12 DUP4 SUB ADD DUP5 MSTORE DUP6 MLOAD DUP1 MLOAD DUP7 DUP5 MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP9 DUP7 ADD MSTORE DUP12 DUP3 ADD MLOAD PUSH1 0xFF AND DUP12 DUP7 ADD MSTORE DUP8 DUP3 ADD MLOAD AND DUP10 DUP6 ADD MSTORE DUP10 DUP2 ADD MLOAD PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 DUP3 ADD MLOAD DUP1 MLOAD PUSH1 0xC0 DUP1 DUP9 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x100 DUP9 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x120 DUP9 ADD MSTORE SWAP1 SWAP2 DUP4 ADD MLOAD PUSH2 0x140 DUP8 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x160 DUP7 ADD MSTORE POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x180 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH2 0x1A0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x11BC PUSH2 0x1C0 DUP6 ADD DUP3 PUSH2 0x1071 JUMP JUMPDEST SWAP2 DUP12 ADD MLOAD SWAP4 DUP12 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP6 DUP10 ADD SWAP6 SWAP4 DUP10 ADD SWAP4 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1101 JUMP JUMPDEST POP SWAP7 DUP11 ADD MLOAD DUP1 ISZERO ISZERO DUP5 DUP12 ADD MSTORE SWAP7 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x121E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1244 JUMPI PUSH2 0x1244 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0x1257 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xC9D JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP6 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x126E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x127F DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x100E JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12B2 JUMPI PUSH2 0x12B2 PUSH2 0x1288 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBC3 DUP2 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x12FE JUMPI PUSH2 0x12FE PUSH2 0x1288 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0x24 0x4C PUSH2 0x273B MSIZE ADD MSIZE CALLDATACOPY 0xA7 PUSH13 0x577ADF4DBF18F0B3F4B8EEB868 CODECOPY 0xD6 STOP DUP9 SGT 0x4C DUP10 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ", "sha1": "3d7c1d26ec42d32e5c332a7d07d98b309320c76c", "source": "// SPDX-License-Identifier: LicenseRef-Gyro-1.0\n// for information on licensing please see the README in the GitHub repository <https://github.com/gyrostable/core-protocol>.\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"../../interfaces/ISafetyCheck.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\n\nimport \"../../libraries/EnumerableExtensions.sol\";\nimport \"../../libraries/Errors.sol\";\nimport \"../../libraries/ConfigHelpers.sol\";\n\nimport \"../auth/Governable.sol\";\n\ncontract RootSafetyCheck is ISafetyCheck, Governable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableExtensions for EnumerableSet.AddressSet;\n    using ConfigHelpers for IGyroConfig;\n\n    event CheckAdded(address indexed check);\n    event CheckRemoved(address indexed check);\n\n    EnumerableSet.AddressSet internal _checks;\n\n    IGyroConfig public immutable gyroConfig;\n\n    modifier motherboardOnly() {\n        require(msg.sender == address(gyroConfig.getMotherboard()), Errors.NOT_AUTHORIZED);\n        _;\n    }\n\n    constructor(address _governor, IGyroConfig _gyroConfig) Governable(_governor) {\n        require(address(_gyroConfig) != address(0), Errors.INVALID_ARGUMENT);\n        gyroConfig = _gyroConfig;\n    }\n\n    /// @return all the checks registered\n    function getChecks() public view returns (address[] memory) {\n        return _checks.toArray();\n    }\n\n    /// @notice adds a check to be performed\n    function addCheck(address check) external governanceOnly {\n        require(_checks.add(check), Errors.INVALID_ARGUMENT);\n        emit CheckAdded(check);\n    }\n\n    /// @notice removes a check to be performed\n    function removeCheck(address check) external governanceOnly {\n        require(_checks.remove(check), Errors.INVALID_ARGUMENT);\n        emit CheckRemoved(check);\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function isMintSafe(DataTypes.Order memory order)\n        external\n        view\n        override\n        returns (string memory err)\n    {\n        uint256 length = _checks.length();\n        for (uint256 i = 0; i < length; i++) {\n            err = ISafetyCheck(_checks.at(i)).isMintSafe(order);\n            if (bytes(err).length > 0) {\n                break;\n            }\n        }\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function isRedeemSafe(DataTypes.Order memory order)\n        external\n        view\n        override\n        returns (string memory err)\n    {\n        uint256 length = _checks.length();\n        for (uint256 i = 0; i < length; i++) {\n            err = ISafetyCheck(_checks.at(i)).isRedeemSafe(order);\n            if (bytes(err).length > 0) {\n                break;\n            }\n        }\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function checkAndPersistMint(DataTypes.Order memory order) external override motherboardOnly {\n        uint256 length = _checks.length();\n        for (uint256 i = 0; i < length; i++) {\n            ISafetyCheck(_checks.at(i)).checkAndPersistMint(order);\n        }\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function checkAndPersistRedeem(DataTypes.Order memory order) external override motherboardOnly {\n        uint256 length = _checks.length();\n        for (uint256 i = 0; i < length; i++) {\n            ISafetyCheck(_checks.at(i)).checkAndPersistRedeem(order);\n        }\n    }\n}\n", "sourceMap": "521:2797:65:-:0;;;1067:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;316:8:42;:20;;-1:-1:-1;;;;;;316:20:42;-1:-1:-1;;;;;316:20:42;;;;;;;351:38;;;773:34:156;;;838:2;823:18;;816:43;;;;316:20:42;;351:38;;708:18:156;351:38:42;;;;;;;-1:-1:-1;1199:23:65::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1199:23:65::1;::::0;::::1;::::0;-1:-1:-1;;;;;1163:34:65;::::1;1155:68;;;;-1:-1:-1::0;;;1155:68:65::1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;;1233:24:65::1;;::::0;-1:-1:-1;521:2797:65;;14:131:156;-1:-1:-1;;;;;89:31:156;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:406::-;250:6;258;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;359:9;353:16;378:31;403:5;378:31;:::i;:::-;478:2;463:18;;457:25;428:5;;-1:-1:-1;491:33:156;457:25;491:33;:::i;:::-;543:7;533:17;;;150:406;;;;;:::o;870:597::-;982:4;1011:2;1040;1029:9;1022:21;1072:6;1066:13;1115:6;1110:2;1099:9;1095:18;1088:34;1140:1;1150:140;1164:6;1161:1;1158:13;1150:140;;;1259:14;;;1255:23;;1249:30;1225:17;;;1244:2;1221:26;1214:66;1179:10;;1150:140;;;1308:6;1305:1;1302:13;1299:91;;;1378:1;1373:2;1364:6;1353:9;1349:22;1345:31;1338:42;1299:91;-1:-1:-1;1451:2:156;1430:15;-1:-1:-1;;1426:29:156;1411:45;;;;1458:2;1407:54;;870:597;-1:-1:-1;;;870:597:156:o;:::-;521:2797:65;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/safety/RootSafetyCheck.sol", "type": "contract", "deployment": {"address": "0xFf686f7Ddc4b144823B1a518237Ff5A704D54d4c", "chainid": "137", "blockHeight": 36345090}}