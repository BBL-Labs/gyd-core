{"abi": [{"inputs": [{"internalType": "contract IGyroConfig", "name": "_gyroConfig", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "check", "type": "address"}], "name": "CheckAdded", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "check", "type": "address"}], "name": "CheckRemoved", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldGovernor", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChanged", "type": "event"}, {"inputs": [{"internalType": "address", "name": "check", "type": "address"}], "name": "addCheck", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newGovernor", "type": "address"}], "name": "changeGovernor", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "checkAndPersistMint", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "checkAndPersistRedeem", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "getChecks", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "governor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "isMintSafe", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"components": [{"components": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint8", "name": "decimals", "type": "uint8"}, {"internalType": "uint256", "name": "price", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}, {"internalType": "uint256", "name": "reserveBalance", "type": "uint256"}, {"internalType": "uint256", "name": "currentWeight", "type": "uint256"}, {"internalType": "uint256", "name": "idealWeight", "type": "uint256"}, {"components": [{"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "uint256", "name": "price", "type": "uint256"}], "internalType": "struct DataTypes.PricedToken[]", "name": "pricedTokens", "type": "tuple[]"}], "internalType": "struct DataTypes.VaultInfo", "name": "vaultInfo", "type": "tuple"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "internalType": "struct DataTypes.VaultWithAmount[]", "name": "vaultsWithAmount", "type": "tuple[]"}, {"internalType": "bool", "name": "mint", "type": "bool"}], "internalType": "struct DataTypes.Order", "name": "order", "type": "tuple"}], "name": "isRedeemSafe", "outputs": [{"internalType": "string", "name": "err", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "check", "type": "address"}], "name": "removeCheck", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"10": "interfaces/IGyroConfig.sol", "12": "interfaces/ILPTokenExchanger.sol", "13": "interfaces/ILPTokenExchangerRegistry.sol", "14": "interfaces/IMotherboard.sol", "15": "interfaces/IPAMM.sol", "16": "interfaces/IReserve.sol", "17": "interfaces/IReserveManager.sol", "18": "interfaces/ISafetyCheck.sol", "19": "interfaces/IVaultRegistry.sol", "2": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableMap.sol", "21": "interfaces/oracles/IBatchVaultPriceOracle.sol", "23": "libraries/ConfigHelpers.sol", "24": "libraries/ConfigKeys.sol", "26": "libraries/EnumerableExtensions.sol", "27": "libraries/EnumerableMapping.sol", "28": "libraries/Errors.sol", "3": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "4": "contracts/auth/Governable.sol", "5": "contracts/safety/RootSafetyCheck.sol", "6": "interfaces/IFeeBank.sol", "7": "interfaces/IFeeHandler.sol", "8": "interfaces/IGYDToken.sol", "9": "interfaces/IGovernable.sol"}, "ast": {"absolutePath": "contracts/safety/RootSafetyCheck.sol", "exportedSymbols": {"ConfigHelpers": [1331], "ConfigKeys": [2526], "DataTypes": [2107], "EnumerableExtensions": [1807], "EnumerableMap": [3006], "EnumerableMapping": [3831], "EnumerableSet": [931], "Errors": [1943], "Governable": [995], "IBatchVaultPriceOracle": [2489], "IERC20": [3909], "IERC20Metadata": [4214], "IFeeBank": [2132], "IFeeHandler": [2146], "IGYDToken": [2187], "IGovernable": [1965], "IGyroConfig": [1095], "IGyroVault": [4189], "ILPTokenExchanger": [3961], "ILPTokenExchangerRegistry": [2215], "IMotherboard": [2307], "IPAMM": [4034], "IReserve": [2370], "IReserveManager": [2414], "ISafetyCheck": [1135], "IUSDPriceOracle": [4074], "IVaultRegistry": [2465], "IVaultWeightManager": [4063], "RootSafetyCheck": [332], "Vaults": [4223]}, "id": 333, "license": "UNLICENSED", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".4"], "nodeType": "PragmaDirective", "src": "39:23:5"}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 333, "sourceUnit": 932, "src": "64:65:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/ISafetyCheck.sol", "file": "../../interfaces/ISafetyCheck.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 333, "sourceUnit": 1136, "src": "131:43:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../../interfaces/IGyroConfig.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 333, "sourceUnit": 1096, "src": "175:42:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/EnumerableExtensions.sol", "file": "../../libraries/EnumerableExtensions.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 333, "sourceUnit": 1808, "src": "219:50:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/Errors.sol", "file": "../../libraries/Errors.sol", "id": 6, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 333, "sourceUnit": 1944, "src": "270:36:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ConfigHelpers.sol", "file": "../../libraries/ConfigHelpers.sol", "id": 7, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 333, "sourceUnit": 1332, "src": "307:43:5", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/auth/Governable.sol", "file": "../auth/Governable.sol", "id": 8, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 333, "sourceUnit": 996, "src": "352:32:5", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 9, "name": "ISafetyCheck", "nodeType": "IdentifierPath", "referencedDeclaration": 1135, "src": "414:12:5"}, "id": 10, "nodeType": "InheritanceSpecifier", "src": "414:12:5"}, {"baseName": {"id": 11, "name": "Governable", "nodeType": "IdentifierPath", "referencedDeclaration": 995, "src": "428:10:5"}, "id": 12, "nodeType": "InheritanceSpecifier", "src": "428:10:5"}], "canonicalName": "RootSafetyCheck", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 332, "linearizedBaseContracts": [332, 995, 1965, 1135], "name": "RootSafetyCheck", "nameLocation": "395:15:5", "nodeType": "ContractDefinition", "nodes": [{"id": 16, "libraryName": {"id": 13, "name": "EnumerableSet", "nodeType": "IdentifierPath", "referencedDeclaration": 931, "src": "451:13:5"}, "nodeType": "UsingForDirective", "src": "445:49:5", "typeName": {"id": 15, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 14, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 644, "src": "469:24:5"}, "referencedDeclaration": 644, "src": "469:24:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 20, "libraryName": {"id": 17, "name": "EnumerableExtensions", "nodeType": "IdentifierPath", "referencedDeclaration": 1807, "src": "505:20:5"}, "nodeType": "UsingForDirective", "src": "499:56:5", "typeName": {"id": 19, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 18, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 644, "src": "530:24:5"}, "referencedDeclaration": 644, "src": "530:24:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 24, "libraryName": {"id": 21, "name": "ConfigHelpers", "nodeType": "IdentifierPath", "referencedDeclaration": 1331, "src": "566:13:5"}, "nodeType": "UsingForDirective", "src": "560:36:5", "typeName": {"id": 23, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 22, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 1095, "src": "584:11:5"}, "referencedDeclaration": 1095, "src": "584:11:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}}}, {"anonymous": false, "id": 28, "name": "CheckAdded", "nameLocation": "608:10:5", "nodeType": "EventDefinition", "parameters": {"id": 27, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 26, "indexed": true, "mutability": "mutable", "name": "check", "nameLocation": "635:5:5", "nodeType": "VariableDeclaration", "scope": 28, "src": "619:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 25, "name": "address", "nodeType": "ElementaryTypeName", "src": "619:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "618:23:5"}, "src": "602:40:5"}, {"anonymous": false, "id": 32, "name": "CheckRemoved", "nameLocation": "653:12:5", "nodeType": "EventDefinition", "parameters": {"id": 31, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 30, "indexed": true, "mutability": "mutable", "name": "check", "nameLocation": "682:5:5", "nodeType": "VariableDeclaration", "scope": 32, "src": "666:21:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 29, "name": "address", "nodeType": "ElementaryTypeName", "src": "666:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "665:23:5"}, "src": "647:42:5"}, {"constant": false, "id": 35, "mutability": "mutable", "name": "_checks", "nameLocation": "729:7:5", "nodeType": "VariableDeclaration", "scope": 332, "src": "695:41:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet"}, "typeName": {"id": 34, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 33, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 644, "src": "695:24:5"}, "referencedDeclaration": 644, "src": "695:24:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "44bbdb55", "id": 38, "mutability": "immutable", "name": "gyroConfig", "nameLocation": "772:10:5", "nodeType": "VariableDeclaration", "scope": 332, "src": "743:39:5", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}, "typeName": {"id": 37, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 36, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 1095, "src": "743:11:5"}, "referencedDeclaration": 1095, "src": "743:11:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"body": {"id": 55, "nodeType": "Block", "src": "816:110:5", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 49, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 41, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "834:3:5", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 42, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "834:10:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 45, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "856:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}}, "id": 46, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getMotherboard", "nodeType": "MemberAccess", "referencedDeclaration": 1330, "src": "856:25:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$1095_$returns$_t_contract$_IMotherboard_$2307_$bound_to$_t_contract$_IGyroConfig_$1095_$", "typeString": "function (contract IGyroConfig) view returns (contract IMotherboard)"}}, "id": 47, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "856:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IMotherboard_$2307", "typeString": "contract IMotherboard"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IMotherboard_$2307", "typeString": "contract IMotherboard"}], "id": 44, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "848:7:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 43, "name": "address", "nodeType": "ElementaryTypeName", "src": "848:7:5", "typeDescriptions": {}}}, "id": 48, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "848:36:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "834:50:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 50, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1943, "src": "886:6:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1943_$", "typeString": "type(library Errors)"}}, "id": 51, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "NOT_AUTHORIZED", "nodeType": "MemberAccess", "referencedDeclaration": 1864, "src": "886:21:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 40, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "826:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 52, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "826:82:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 53, "nodeType": "ExpressionStatement", "src": "826:82:5"}, {"id": 54, "nodeType": "PlaceholderStatement", "src": "918:1:5"}]}, "id": 56, "name": "motherboardOnly", "nameLocation": "798:15:5", "nodeType": "ModifierDefinition", "parameters": {"id": 39, "nodeType": "ParameterList", "parameters": [], "src": "813:2:5"}, "src": "789:137:5", "virtual": false, "visibility": "internal"}, {"body": {"id": 66, "nodeType": "Block", "src": "969:41:5", "statements": [{"expression": {"id": 64, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 62, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38, "src": "979:10:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 63, "name": "_gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "992:11:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}}, "src": "979:24:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}}, "id": 65, "nodeType": "ExpressionStatement", "src": "979:24:5"}]}, "id": 67, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 60, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 59, "mutability": "mutable", "name": "_gyroConfig", "nameLocation": "956:11:5", "nodeType": "VariableDeclaration", "scope": 67, "src": "944:23:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}, "typeName": {"id": 58, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 57, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 1095, "src": "944:11:5"}, "referencedDeclaration": 1095, "src": "944:11:5", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$1095", "typeString": "contract IGyroConfig"}}, "visibility": "internal"}], "src": "943:25:5"}, "returnParameters": {"id": 61, "nodeType": "ParameterList", "parameters": [], "src": "969:0:5"}, "scope": 332, "src": "932:78:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 78, "nodeType": "Block", "src": "1118:41:5", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 74, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "1135:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 75, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "toArray", "nodeType": "MemberAccess", "referencedDeclaration": 1406, "src": "1135:15:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}}, "id": 76, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1135:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "functionReturnParameters": 73, "id": 77, "nodeType": "Return", "src": "1128:24:5"}]}, "documentation": {"id": 68, "nodeType": "StructuredDocumentation", "src": "1016:37:5", "text": "@return all the checks registered"}, "functionSelector": "4d9a12c4", "id": 79, "implemented": true, "kind": "function", "modifiers": [], "name": "getChecks", "nameLocation": "1067:9:5", "nodeType": "FunctionDefinition", "parameters": {"id": 69, "nodeType": "ParameterList", "parameters": [], "src": "1076:2:5"}, "returnParameters": {"id": 73, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 72, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 79, "src": "1100:16:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 70, "name": "address", "nodeType": "ElementaryTypeName", "src": "1100:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 71, "nodeType": "ArrayTypeName", "src": "1100:9:5", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "1099:18:5"}, "scope": 332, "src": "1058:101:5", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 100, "nodeType": "Block", "src": "1267:101:5", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 90, "name": "check", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 82, "src": "1297:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 88, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "1285:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 89, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 671, "src": "1285:11:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$644_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 91, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1285:18:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 92, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1943, "src": "1305:6:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1943_$", "typeString": "type(library Errors)"}}, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 1867, "src": "1305:23:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 87, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1277:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 94, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1277:52:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 95, "nodeType": "ExpressionStatement", "src": "1277:52:5"}, {"eventCall": {"arguments": [{"id": 97, "name": "check", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 82, "src": "1355:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 96, "name": "CheckAdded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 28, "src": "1344:10:5", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 98, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1344:17:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 99, "nodeType": "EmitStatement", "src": "1339:22:5"}]}, "documentation": {"id": 80, "nodeType": "StructuredDocumentation", "src": "1165:40:5", "text": "@notice adds a check to be performed"}, "functionSelector": "3d4d10e2", "id": 101, "implemented": true, "kind": "function", "modifiers": [{"id": 85, "kind": "modifierInvocation", "modifierName": {"id": 84, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 971, "src": "1252:14:5"}, "nodeType": "ModifierInvocation", "src": "1252:14:5"}], "name": "addCheck", "nameLocation": "1219:8:5", "nodeType": "FunctionDefinition", "parameters": {"id": 83, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 82, "mutability": "mutable", "name": "check", "nameLocation": "1236:5:5", "nodeType": "VariableDeclaration", "scope": 101, "src": "1228:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 81, "name": "address", "nodeType": "ElementaryTypeName", "src": "1228:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1227:15:5"}, "returnParameters": {"id": 86, "nodeType": "ParameterList", "parameters": [], "src": "1267:0:5"}, "scope": 332, "src": "1210:158:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 122, "nodeType": "Block", "src": "1482:106:5", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 112, "name": "check", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "1515:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 110, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "1500:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 111, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "remove", "nodeType": "MemberAccess", "referencedDeclaration": 698, "src": "1500:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$644_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 113, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1500:21:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 114, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1943, "src": "1523:6:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$1943_$", "typeString": "type(library Errors)"}}, "id": 115, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 1867, "src": "1523:23:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 109, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1492:7:5", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 116, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1492:55:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 117, "nodeType": "ExpressionStatement", "src": "1492:55:5"}, {"eventCall": {"arguments": [{"id": 119, "name": "check", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 104, "src": "1575:5:5", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 118, "name": "CheckRemoved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 32, "src": "1562:12:5", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1562:19:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 121, "nodeType": "EmitStatement", "src": "1557:24:5"}]}, "documentation": {"id": 102, "nodeType": "StructuredDocumentation", "src": "1374:43:5", "text": "@notice removes a check to be performed"}, "functionSelector": "68b23e52", "id": 123, "implemented": true, "kind": "function", "modifiers": [{"id": 107, "kind": "modifierInvocation", "modifierName": {"id": 106, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 971, "src": "1467:14:5"}, "nodeType": "ModifierInvocation", "src": "1467:14:5"}], "name": "removeCheck", "nameLocation": "1431:11:5", "nodeType": "FunctionDefinition", "parameters": {"id": 105, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 104, "mutability": "mutable", "name": "check", "nameLocation": "1451:5:5", "nodeType": "VariableDeclaration", "scope": 123, "src": "1443:13:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 103, "name": "address", "nodeType": "ElementaryTypeName", "src": "1443:7:5", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1442:15:5"}, "returnParameters": {"id": 108, "nodeType": "ParameterList", "parameters": [], "src": "1482:0:5"}, "scope": 332, "src": "1422:166:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [1107], "body": {"id": 175, "nodeType": "Block", "src": "1784:259:5", "statements": [{"assignments": [136], "declarations": [{"constant": false, "id": 136, "mutability": "mutable", "name": "length", "nameLocation": "1802:6:5", "nodeType": "VariableDeclaration", "scope": 175, "src": "1794:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 135, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1794:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 140, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 137, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "1811:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 138, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 740, "src": "1811:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 139, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1811:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1794:33:5"}, {"body": {"id": 173, "nodeType": "Block", "src": "1874:163:5", "statements": [{"expression": {"id": 161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 151, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 133, "src": "1888:3:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 159, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 127, "src": "1942:5:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "expression": {"arguments": [{"arguments": [{"id": 155, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "1918:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 153, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "1907:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 154, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 767, "src": "1907:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 156, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1907:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 152, "name": "ISafetyCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1135, "src": "1894:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$1135_$", "typeString": "type(contract ISafetyCheck)"}}, "id": 157, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1894:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$1135", "typeString": "contract ISafetyCheck"}}, "id": 158, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "checkAndPersistMint", "nodeType": "MemberAccess", "referencedDeclaration": 1107, "src": "1894:47:5", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$2093_memory_ptr_$returns$_t_string_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) external returns (string memory)"}}, "id": 160, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1894:54:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "1888:60:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 162, "nodeType": "ExpressionStatement", "src": "1888:60:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 169, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 165, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 133, "src": "1972:3:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 164, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1966:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 163, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1966:5:5", "typeDescriptions": {}}}, "id": 166, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1966:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 167, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "1966:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 168, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1986:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1966:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 172, "nodeType": "IfStatement", "src": "1962:65:5", "trueBody": {"id": 171, "nodeType": "Block", "src": "1989:38:5", "statements": [{"id": 170, "nodeType": "Break", "src": "2007:5:5"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 145, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "1857:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 146, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 136, "src": "1861:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1857:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 174, "initializationExpression": {"assignments": [142], "declarations": [{"constant": false, "id": 142, "mutability": "mutable", "name": "i", "nameLocation": "1850:1:5", "nodeType": "VariableDeclaration", "scope": 174, "src": "1842:9:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 141, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1842:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 144, "initialValue": {"hexValue": "30", "id": 143, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1854:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "1842:13:5"}, "loopExpression": {"expression": {"id": 149, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "1869:3:5", "subExpression": {"id": 148, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 142, "src": "1869:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 150, "nodeType": "ExpressionStatement", "src": "1869:3:5"}, "nodeType": "ForStatement", "src": "1837:200:5"}]}, "documentation": {"id": 124, "nodeType": "StructuredDocumentation", "src": "1594:28:5", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "8d404e98", "id": 176, "implemented": true, "kind": "function", "modifiers": [{"id": 131, "kind": "modifierInvocation", "modifierName": {"id": 130, "name": "motherboardOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 56, "src": "1728:15:5"}, "nodeType": "ModifierInvocation", "src": "1728:15:5"}], "name": "checkAndPersistMint", "nameLocation": "1636:19:5", "nodeType": "FunctionDefinition", "overrides": {"id": 129, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1711:8:5"}, "parameters": {"id": 128, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 127, "mutability": "mutable", "name": "order", "nameLocation": "1679:5:5", "nodeType": "VariableDeclaration", "scope": 176, "src": "1656:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 126, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 125, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 2093, "src": "1656:15:5"}, "referencedDeclaration": 2093, "src": "1656:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "1655:30:5"}, "returnParameters": {"id": 134, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 133, "mutability": "mutable", "name": "err", "nameLocation": "1775:3:5", "nodeType": "VariableDeclaration", "scope": 176, "src": "1761:17:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 132, "name": "string", "nodeType": "ElementaryTypeName", "src": "1761:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1760:19:5"}, "scope": 332, "src": "1627:416:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [1116], "body": {"id": 226, "nodeType": "Block", "src": "2219:250:5", "statements": [{"assignments": [187], "declarations": [{"constant": false, "id": 187, "mutability": "mutable", "name": "length", "nameLocation": "2237:6:5", "nodeType": "VariableDeclaration", "scope": 226, "src": "2229:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 186, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2229:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 191, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 188, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "2246:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 189, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 740, "src": "2246:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 190, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2246:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2229:33:5"}, {"body": {"id": 224, "nodeType": "Block", "src": "2309:154:5", "statements": [{"expression": {"id": 212, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 202, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 184, "src": "2323:3:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 210, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 180, "src": "2368:5:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "expression": {"arguments": [{"arguments": [{"id": 206, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "2353:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 204, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "2342:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 205, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 767, "src": "2342:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 207, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2342:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 203, "name": "ISafetyCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1135, "src": "2329:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$1135_$", "typeString": "type(contract ISafetyCheck)"}}, "id": 208, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2329:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$1135", "typeString": "contract ISafetyCheck"}}, "id": 209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isMintSafe", "nodeType": "MemberAccess", "referencedDeclaration": 1116, "src": "2329:38:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_struct$_Order_$2093_memory_ptr_$returns$_t_string_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view external returns (string memory)"}}, "id": 211, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2329:45:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2323:51:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 213, "nodeType": "ExpressionStatement", "src": "2323:51:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 220, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 216, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 184, "src": "2398:3:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 215, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2392:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 214, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2392:5:5", "typeDescriptions": {}}}, "id": 217, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2392:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 218, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2392:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 219, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2412:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2392:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 223, "nodeType": "IfStatement", "src": "2388:65:5", "trueBody": {"id": 222, "nodeType": "Block", "src": "2415:38:5", "statements": [{"id": 221, "nodeType": "Break", "src": "2433:5:5"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 198, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 196, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "2292:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 197, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 187, "src": "2296:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2292:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 225, "initializationExpression": {"assignments": [193], "declarations": [{"constant": false, "id": 193, "mutability": "mutable", "name": "i", "nameLocation": "2285:1:5", "nodeType": "VariableDeclaration", "scope": 225, "src": "2277:9:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 192, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2277:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 195, "initialValue": {"hexValue": "30", "id": 194, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2289:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2277:13:5"}, "loopExpression": {"expression": {"id": 200, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2304:3:5", "subExpression": {"id": 199, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "2304:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 201, "nodeType": "ExpressionStatement", "src": "2304:3:5"}, "nodeType": "ForStatement", "src": "2272:191:5"}]}, "documentation": {"id": 177, "nodeType": "StructuredDocumentation", "src": "2049:28:5", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "071231cf", "id": 227, "implemented": true, "kind": "function", "modifiers": [], "name": "isMintSafe", "nameLocation": "2091:10:5", "nodeType": "FunctionDefinition", "overrides": {"id": 182, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2170:8:5"}, "parameters": {"id": 181, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 180, "mutability": "mutable", "name": "order", "nameLocation": "2125:5:5", "nodeType": "VariableDeclaration", "scope": 227, "src": "2102:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 179, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 178, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 2093, "src": "2102:15:5"}, "referencedDeclaration": 2093, "src": "2102:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2101:30:5"}, "returnParameters": {"id": 185, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 184, "mutability": "mutable", "name": "err", "nameLocation": "2210:3:5", "nodeType": "VariableDeclaration", "scope": 227, "src": "2196:17:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 183, "name": "string", "nodeType": "ElementaryTypeName", "src": "2196:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2195:19:5"}, "scope": 332, "src": "2082:387:5", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [1125], "body": {"id": 277, "nodeType": "Block", "src": "2647:252:5", "statements": [{"assignments": [238], "declarations": [{"constant": false, "id": 238, "mutability": "mutable", "name": "length", "nameLocation": "2665:6:5", "nodeType": "VariableDeclaration", "scope": 277, "src": "2657:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 237, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2657:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 242, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 239, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "2674:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 240, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 740, "src": "2674:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 241, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2674:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2657:33:5"}, {"body": {"id": 275, "nodeType": "Block", "src": "2737:156:5", "statements": [{"expression": {"id": 263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 253, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 235, "src": "2751:3:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 261, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "2798:5:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "expression": {"arguments": [{"arguments": [{"id": 257, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "2781:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 255, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "2770:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 256, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 767, "src": "2770:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 258, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2770:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 254, "name": "ISafetyCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1135, "src": "2757:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$1135_$", "typeString": "type(contract ISafetyCheck)"}}, "id": 259, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2757:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$1135", "typeString": "contract ISafetyCheck"}}, "id": 260, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isRedeemSafe", "nodeType": "MemberAccess", "referencedDeclaration": 1125, "src": "2757:40:5", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_struct$_Order_$2093_memory_ptr_$returns$_t_string_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) view external returns (string memory)"}}, "id": 262, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2757:47:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2751:53:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 264, "nodeType": "ExpressionStatement", "src": "2751:53:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 271, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 267, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 235, "src": "2828:3:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 266, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2822:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 265, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2822:5:5", "typeDescriptions": {}}}, "id": 268, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2822:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2822:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 270, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2842:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2822:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 274, "nodeType": "IfStatement", "src": "2818:65:5", "trueBody": {"id": 273, "nodeType": "Block", "src": "2845:38:5", "statements": [{"id": 272, "nodeType": "Break", "src": "2863:5:5"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 247, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "2720:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 248, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 238, "src": "2724:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2720:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 276, "initializationExpression": {"assignments": [244], "declarations": [{"constant": false, "id": 244, "mutability": "mutable", "name": "i", "nameLocation": "2713:1:5", "nodeType": "VariableDeclaration", "scope": 276, "src": "2705:9:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 243, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2705:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 246, "initialValue": {"hexValue": "30", "id": 245, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2717:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2705:13:5"}, "loopExpression": {"expression": {"id": 251, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2732:3:5", "subExpression": {"id": 250, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 244, "src": "2732:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 252, "nodeType": "ExpressionStatement", "src": "2732:3:5"}, "nodeType": "ForStatement", "src": "2700:193:5"}]}, "documentation": {"id": 228, "nodeType": "StructuredDocumentation", "src": "2475:28:5", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "29c97771", "id": 278, "implemented": true, "kind": "function", "modifiers": [], "name": "isRedeemSafe", "nameLocation": "2517:12:5", "nodeType": "FunctionDefinition", "overrides": {"id": 233, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2598:8:5"}, "parameters": {"id": 232, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 231, "mutability": "mutable", "name": "order", "nameLocation": "2553:5:5", "nodeType": "VariableDeclaration", "scope": 278, "src": "2530:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 230, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 229, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 2093, "src": "2530:15:5"}, "referencedDeclaration": 2093, "src": "2530:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2529:30:5"}, "returnParameters": {"id": 236, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 235, "mutability": "mutable", "name": "err", "nameLocation": "2638:3:5", "nodeType": "VariableDeclaration", "scope": 278, "src": "2624:17:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 234, "name": "string", "nodeType": "ElementaryTypeName", "src": "2624:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "2623:19:5"}, "scope": 332, "src": "2508:391:5", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [1134], "body": {"id": 330, "nodeType": "Block", "src": "3097:261:5", "statements": [{"assignments": [291], "declarations": [{"constant": false, "id": 291, "mutability": "mutable", "name": "length", "nameLocation": "3115:6:5", "nodeType": "VariableDeclaration", "scope": 330, "src": "3107:14:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 290, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3107:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 295, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 292, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "3124:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 293, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "referencedDeclaration": 740, "src": "3124:14:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}}, "id": 294, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3124:16:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3107:33:5"}, {"body": {"id": 328, "nodeType": "Block", "src": "3187:165:5", "statements": [{"expression": {"id": 316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 306, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 288, "src": "3201:3:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 314, "name": "order", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 282, "src": "3257:5:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order memory"}], "expression": {"arguments": [{"arguments": [{"id": 310, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "3231:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 308, "name": "_checks", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "3220:7:5", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$644_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 309, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "at", "nodeType": "MemberAccess", "referencedDeclaration": 767, "src": "3220:10:5", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}}, "id": 311, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3220:13:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 307, "name": "ISafetyCheck", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1135, "src": "3207:12:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$1135_$", "typeString": "type(contract ISafetyCheck)"}}, "id": 312, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3207:27:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ISafetyCheck_$1135", "typeString": "contract ISafetyCheck"}}, "id": 313, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "checkAndPersistRedeem", "nodeType": "MemberAccess", "referencedDeclaration": 1134, "src": "3207:49:5", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$2093_memory_ptr_$returns$_t_string_memory_ptr_$", "typeString": "function (struct DataTypes.Order memory) external returns (string memory)"}}, "id": 315, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3207:56:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "3201:62:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "id": 317, "nodeType": "ExpressionStatement", "src": "3201:62:5"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 324, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 320, "name": "err", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 288, "src": "3287:3:5", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 319, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3281:5:5", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 318, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3281:5:5", "typeDescriptions": {}}}, "id": 321, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3281:10:5", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 322, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3281:17:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 323, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3301:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3281:21:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 327, "nodeType": "IfStatement", "src": "3277:65:5", "trueBody": {"id": 326, "nodeType": "Block", "src": "3304:38:5", "statements": [{"id": 325, "nodeType": "Break", "src": "3322:5:5"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 300, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "3170:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 301, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 291, "src": "3174:6:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3170:10:5", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 329, "initializationExpression": {"assignments": [297], "declarations": [{"constant": false, "id": 297, "mutability": "mutable", "name": "i", "nameLocation": "3163:1:5", "nodeType": "VariableDeclaration", "scope": 329, "src": "3155:9:5", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 296, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3155:7:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 299, "initialValue": {"hexValue": "30", "id": 298, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3167:1:5", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3155:13:5"}, "loopExpression": {"expression": {"id": 304, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3182:3:5", "subExpression": {"id": 303, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 297, "src": "3182:1:5", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 305, "nodeType": "ExpressionStatement", "src": "3182:3:5"}, "nodeType": "ForStatement", "src": "3150:202:5"}]}, "documentation": {"id": 279, "nodeType": "StructuredDocumentation", "src": "2905:28:5", "text": "@inheritdoc ISafetyCheck"}, "functionSelector": "c4ea1209", "id": 331, "implemented": true, "kind": "function", "modifiers": [{"id": 286, "kind": "modifierInvocation", "modifierName": {"id": 285, "name": "motherboardOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 56, "src": "3041:15:5"}, "nodeType": "ModifierInvocation", "src": "3041:15:5"}], "name": "checkAndPersistRedeem", "nameLocation": "2947:21:5", "nodeType": "FunctionDefinition", "overrides": {"id": 284, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3024:8:5"}, "parameters": {"id": 283, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 282, "mutability": "mutable", "name": "order", "nameLocation": "2992:5:5", "nodeType": "VariableDeclaration", "scope": 331, "src": "2969:28:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_memory_ptr", "typeString": "struct DataTypes.Order"}, "typeName": {"id": 281, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 280, "name": "DataTypes.Order", "nodeType": "IdentifierPath", "referencedDeclaration": 2093, "src": "2969:15:5"}, "referencedDeclaration": 2093, "src": "2969:15:5", "typeDescriptions": {"typeIdentifier": "t_struct$_Order_$2093_storage_ptr", "typeString": "struct DataTypes.Order"}}, "visibility": "internal"}], "src": "2968:30:5"}, "returnParameters": {"id": 289, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 288, "mutability": "mutable", "name": "err", "nameLocation": "3088:3:5", "nodeType": "VariableDeclaration", "scope": 331, "src": "3074:17:5", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 287, "name": "string", "nodeType": "ElementaryTypeName", "src": "3074:6:5", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "3073:19:5"}, "scope": 332, "src": "2938:420:5", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 333, "src": "386:2974:5", "usedErrors": []}], "src": "39:3322:5"}, "bytecode": "60a060405234801561001057600080fd5b5060405161130938038061130983398101604081905261002f9161008e565b600080546001600160a01b0319163390811782556040805192835260208301919091527fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c84910160405180910390a16001600160a01b03166080526100be565b6000602082840312156100a057600080fd5b81516001600160a01b03811681146100b757600080fd5b9392505050565b6080516112226100e760003960008181610124015281816104c101526105fa01526112226000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634d9a12c4116100665780634d9a12c41461014657806368b23e521461015b5780638d404e981461016e578063c4ea120914610181578063e4c0aaf41461019457600080fd5b8063071231cf146100a35780630c340a24146100cc57806329c97771146100f75780633d4d10e21461010a57806344bbdb551461011f575b600080fd5b6100b66100b1366004610cbb565b6101a7565b6040516100c39190610ec5565b60405180910390f35b6000546100df906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b6100b6610105366004610cbb565b610265565b61011d610118366004610ef8565b61031c565b005b6100df7f000000000000000000000000000000000000000000000000000000000000000081565b61014e6103e7565b6040516100c39190610f15565b61011d610169366004610ef8565b6103f8565b6100b661017c366004610cbb565b6104ba565b6100b661018f366004610cbb565b6105f3565b61011d6101a2366004610ef8565b61072c565b606060006101b560016107d3565b905060005b8181101561025e576101cd6001826107e3565b6001600160a01b031663071231cf856040518263ffffffff1660e01b81526004016101f89190610fb1565b600060405180830381865afa158015610215573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023d91908101906110c7565b80519093501561024c5761025e565b8061025681611171565b9150506101ba565b5050919050565b6060600061027360016107d3565b905060005b8181101561025e5761028b6001826107e3565b6001600160a01b03166329c97771856040518263ffffffff1660e01b81526004016102b69190610fb1565b600060405180830381865afa1580156102d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102fb91908101906110c7565b80519093501561030a5761025e565b8061031481611171565b915050610278565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b0316331461036a5760405162461bcd60e51b81526004016103619190610ec5565b60405180910390fd5b506103766001826107f6565b60405180604001604052806002815260200161333160f01b815250906103af5760405162461bcd60e51b81526004016103619190610ec5565b506040516001600160a01b038216907f75ec3ef6c1afb45dd0a2bbb3a4f14cac03241c33fc24c352e25ea690e22a923290600090a250565b60606103f3600161080b565b905090565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b0316331461043d5760405162461bcd60e51b81526004016103619190610ec5565b506104496001826108ba565b60405180604001604052806002815260200161333160f01b815250906104825760405162461bcd60e51b81526004016103619190610ec5565b506040516001600160a01b038216907fd37223475c04a60e97eb30bc3a38b4aef6a37def09d1ed6b88c881847362426d90600090a250565b60606104ee7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108cf565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b8152509061053b5760405162461bcd60e51b81526004016103619190610ec5565b50600061054860016107d3565b905060005b8181101561025e576105606001826107e3565b6001600160a01b0316638d404e98856040518263ffffffff1660e01b815260040161058b9190610fb1565b6000604051808303816000875af11580156105aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105d291908101906110c7565b8051909350156105e15761025e565b806105eb81611171565b91505061054d565b60606106277f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108cf565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b815250906106745760405162461bcd60e51b81526004016103619190610ec5565b50600061068160016107d3565b905060005b8181101561025e576106996001826107e3565b6001600160a01b031663c4ea1209856040518263ffffffff1660e01b81526004016106c49190610fb1565b6000604051808303816000875af11580156106e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070b91908101906110c7565b80519093501561071a5761025e565b8061072481611171565b915050610686565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146107715760405162461bcd60e51b81526004016103619190610ec5565b50600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c84910160405180910390a15050565b60006107dd825490565b92915050565b60006107ef8383610950565b9392505050565b60006107ef836001600160a01b03841661097a565b60606000610818836107d3565b905060008167ffffffffffffffff81111561083557610835610abc565b60405190808252806020026020018201604052801561085e578160200160208202803683370190505b50905060005b828110156108b25761087685826107e3565b8282815181106108885761088861118c565b6001600160a01b0390921660209283029190910190910152806108aa81611171565b915050610864565b509392505050565b60006107ef836001600160a01b0384166109c9565b6040516321f8a72160e01b8152724d4f54484552424f4152445f4144445245535360681b60048201526000906001600160a01b038316906321f8a72190602401602060405180830381865afa15801561092c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd91906111a2565b60008260000182815481106109675761096761118c565b9060005260206000200154905092915050565b60008181526001830160205260408120546109c1575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107dd565b5060006107dd565b60008181526001830160205260408120548015610ab25760006109ed6001836111bf565b8554909150600090610a01906001906111bf565b9050818114610a66576000866000018281548110610a2157610a2161118c565b9060005260206000200154905080876000018481548110610a4457610a4461118c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610a7757610a776111d6565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107dd565b60009150506107dd565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610af557610af5610abc565b60405290565b604051610100810167ffffffffffffffff81118282101715610af557610af5610abc565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b4857610b48610abc565b604052919050565b600067ffffffffffffffff821115610b6a57610b6a610abc565b5060051b60200190565b6001600160a01b0381168114610b8957600080fd5b50565b8035610b9781610b74565b919050565b803560ff81168114610b9757600080fd5b600060808284031215610bbf57600080fd5b6040516080810181811067ffffffffffffffff82111715610be257610be2610abc565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f830112610c2457600080fd5b81356020610c39610c3483610b50565b610b1f565b82815260069290921b84018101918181019086841115610c5857600080fd5b8286015b84811015610ca05760408189031215610c755760008081fd5b610c7d610ad2565b8135610c8881610b74565b81528185013585820152835291830191604001610c5c565b509695505050505050565b80358015158114610b9757600080fd5b600060208284031215610ccd57600080fd5b67ffffffffffffffff8083351115610ce457600080fd5b60408335840185031215610cf757600080fd5b610cff610ad2565b8184358501351115610d1057600080fd5b83358401803501601f81018613610d2657600080fd5b610d33610c348235610b50565b81358082526020808301929160051b840101881015610d5157600080fd5b602083015b6020843560051b850101811015610e73578581351115610d7557600080fd5b80358401601f196040828c0382011215610d8e57600080fd5b610d96610ad2565b8860208401351115610da757600080fd5b6020830135830161016083828f03011215610dc157600080fd5b610dc9610afb565b9250610dd760208201610b8c565b8352610de560408201610b9c565b602084015260608101356040840152610e018d60808301610bad565b6060840152610100810135608084015261012081013560a084015261014081013560c0840152896101608201351115610e3957600080fd5b610e4d8d6020610160840135840101610c13565b60e084015250908152604091909101356020808301919091529084529283019201610d56565b50835250610e88905084358501602001610cab565b6020820152949350505050565b60005b83811015610eb0578181015183820152602001610e98565b83811115610ebf576000848401525b50505050565b6020815260008251806020840152610ee4816040850160208701610e95565b601f01601f19169190910160400192915050565b600060208284031215610f0a57600080fd5b81356107ef81610b74565b6020808252825182820181905260009190848201906040850190845b81811015610f565783516001600160a01b031683529284019291840191600101610f31565b50909695505050505050565b600081518084526020808501945080840160005b83811015610fa657815180516001600160a01b031688528301518388015260409096019590820190600101610f76565b509495945050505050565b600060208083526060808401855160408085880152828251808552608094508489019150848160051b8a0101878501945060005b828110156110ac57607f198b83030184528551805186845280516001600160a01b0316878501528a81015160ff81168b8601525080870151848a015289810151805160a080870191909152602082015160c0870152604082015160e08701526060820151610100870152828b01516101208701528201516101408601525060c08101516101608086019190915260e09091015161018085019190915261108f6101a0850182610f62565b918b0151938b019390935295890195938901939150600101610fe5565b50968a0151801515848b0152969a9950505050505050505050565b6000602082840312156110d957600080fd5b815167ffffffffffffffff808211156110f157600080fd5b818401915084601f83011261110557600080fd5b81518181111561111757611117610abc565b61112a601f8201601f1916602001610b1f565b915080825285602082850101111561114157600080fd5b611152816020840160208601610e95565b50949350505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156111855761118561115b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156111b457600080fd5b81516107ef81610b74565b6000828210156111d1576111d161115b565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c0cc9123280ef218a690a42a4ecf5461fe34e860436491d1cc467e63faa7a23964736f6c634300080a0033", "bytecodeSha1": "8ec0df02d62691a779312cd34fe6d1b03b647b1e", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "RootSafetyCheck", "coverageMap": {"branches": {"10": {}, "12": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "18": {}, "19": {}, "2": {}, "21": {}, "23": {}, "24": {}, "26": {}, "27": {}, "28": {}, "3": {"EnumerableSet._remove": {"47": [2439, 2454, false], "48": [2921, 2947, false]}}, "4": {}, "5": {"RootSafetyCheck.addCheck": {"42": [1285, 1303, true]}, "RootSafetyCheck.checkAndPersistMint": {"44": [1966, 1987, false]}, "RootSafetyCheck.checkAndPersistRedeem": {"45": [834, 884, true], "46": [3281, 3302, false]}, "RootSafetyCheck.isMintSafe": {"40": [2392, 2413, false]}, "RootSafetyCheck.isRedeemSafe": {"41": [2822, 2843, false]}, "RootSafetyCheck.removeCheck": {"43": [1500, 1521, true]}}, "6": {}, "7": {}, "8": {}, "9": {}}, "statements": {"10": {}, "12": {}, "13": {}, "14": {}, "15": {}, "16": {}, "17": {}, "18": {}, "19": {}, "2": {}, "21": {}, "23": {"ConfigHelpers.getMotherboard": {"27": [2538, 2612]}}, "24": {}, "26": {"EnumerableExtensions.toArray": {"23": [888, 915], "24": [869, 872], "25": [935, 948]}}, "27": {}, "28": {}, "3": {"EnumerableSet._add": {"30": [1751, 1774], "31": [1909, 1949], "32": [1963, 1974], "33": [2005, 2017]}, "EnumerableSet._at": {"28": [4414, 4439]}, "EnumerableSet._contains": {"29": [3760, 3791]}, "EnumerableSet._length": {"20": [3954, 3979]}, "EnumerableSet._remove": {"34": [3109, 3147], "35": [3221, 3257], "36": [3393, 3410], "37": [3478, 3504], "38": [3519, 3530], "39": [3561, 3573]}, "EnumerableSet.add": {"22": [7631, 7688]}, "EnumerableSet.at": {"21": [8896, 8952]}, "EnumerableSet.length": {"19": [8428, 8454]}, "EnumerableSet.remove": {"26": [7952, 8012]}}, "4": {"Governable.changeGovernor": {"17": [671, 693], "18": [703, 753]}}, "5": {"RootSafetyCheck.addCheck": {"6": [1277, 1329], "7": [1339, 1361]}, "RootSafetyCheck.checkAndPersistMint": {"11": [1888, 1948], "12": [2007, 2012], "13": [1869, 1872]}, "RootSafetyCheck.checkAndPersistRedeem": {"14": [3201, 3263], "15": [3322, 3327], "16": [3182, 3185]}, "RootSafetyCheck.getChecks": {"8": [1128, 1152]}, "RootSafetyCheck.isMintSafe": {"0": [2323, 2374], "1": [2433, 2438], "2": [2304, 2307]}, "RootSafetyCheck.isRedeemSafe": {"3": [2751, 2804], "4": [2863, 2868], "5": [2732, 2735]}, "RootSafetyCheck.removeCheck": {"9": [1492, 1547], "10": [1557, 1581]}}, "6": {}, "7": {}, "8": {}, "9": {}}}, "dependencies": ["ConfigHelpers", "ConfigKeys", "EnumerableExtensions", "OpenZeppelin/openzeppelin-contracts@4.3.2/EnumerableMap", "EnumerableMapping", "OpenZeppelin/openzeppelin-contracts@4.3.2/EnumerableSet", "Errors", "Governable", "IBatchVaultPriceOracle", "IFeeBank", "IFeeHandler", "IGYDToken", "IGovernable", "IGyroConfig", "ILPTokenExchanger", "ILPTokenExchangerRegistry", "IMotherboard", "IPAMM", "IReserve", "IReserveManager", "ISafetyCheck", "IVaultRegistry"], "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80634d9a12c4116100665780634d9a12c41461014657806368b23e521461015b5780638d404e981461016e578063c4ea120914610181578063e4c0aaf41461019457600080fd5b8063071231cf146100a35780630c340a24146100cc57806329c97771146100f75780633d4d10e21461010a57806344bbdb551461011f575b600080fd5b6100b66100b1366004610cbb565b6101a7565b6040516100c39190610ec5565b60405180910390f35b6000546100df906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b6100b6610105366004610cbb565b610265565b61011d610118366004610ef8565b61031c565b005b6100df7f000000000000000000000000000000000000000000000000000000000000000081565b61014e6103e7565b6040516100c39190610f15565b61011d610169366004610ef8565b6103f8565b6100b661017c366004610cbb565b6104ba565b6100b661018f366004610cbb565b6105f3565b61011d6101a2366004610ef8565b61072c565b606060006101b560016107d3565b905060005b8181101561025e576101cd6001826107e3565b6001600160a01b031663071231cf856040518263ffffffff1660e01b81526004016101f89190610fb1565b600060405180830381865afa158015610215573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023d91908101906110c7565b80519093501561024c5761025e565b8061025681611171565b9150506101ba565b5050919050565b6060600061027360016107d3565b905060005b8181101561025e5761028b6001826107e3565b6001600160a01b03166329c97771856040518263ffffffff1660e01b81526004016102b69190610fb1565b600060405180830381865afa1580156102d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102fb91908101906110c7565b80519093501561030a5761025e565b8061031481611171565b915050610278565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b0316331461036a5760405162461bcd60e51b81526004016103619190610ec5565b60405180910390fd5b506103766001826107f6565b60405180604001604052806002815260200161333160f01b815250906103af5760405162461bcd60e51b81526004016103619190610ec5565b506040516001600160a01b038216907f75ec3ef6c1afb45dd0a2bbb3a4f14cac03241c33fc24c352e25ea690e22a923290600090a250565b60606103f3600161080b565b905090565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b0316331461043d5760405162461bcd60e51b81526004016103619190610ec5565b506104496001826108ba565b60405180604001604052806002815260200161333160f01b815250906104825760405162461bcd60e51b81526004016103619190610ec5565b506040516001600160a01b038216907fd37223475c04a60e97eb30bc3a38b4aef6a37def09d1ed6b88c881847362426d90600090a250565b60606104ee7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108cf565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b8152509061053b5760405162461bcd60e51b81526004016103619190610ec5565b50600061054860016107d3565b905060005b8181101561025e576105606001826107e3565b6001600160a01b0316638d404e98856040518263ffffffff1660e01b815260040161058b9190610fb1565b6000604051808303816000875af11580156105aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105d291908101906110c7565b8051909350156105e15761025e565b806105eb81611171565b91505061054d565b60606106277f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108cf565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b815250906106745760405162461bcd60e51b81526004016103619190610ec5565b50600061068160016107d3565b905060005b8181101561025e576106996001826107e3565b6001600160a01b031663c4ea1209856040518263ffffffff1660e01b81526004016106c49190610fb1565b6000604051808303816000875af11580156106e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070b91908101906110c7565b80519093501561071a5761025e565b8061072481611171565b915050610686565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146107715760405162461bcd60e51b81526004016103619190610ec5565b50600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c84910160405180910390a15050565b60006107dd825490565b92915050565b60006107ef8383610950565b9392505050565b60006107ef836001600160a01b03841661097a565b60606000610818836107d3565b905060008167ffffffffffffffff81111561083557610835610abc565b60405190808252806020026020018201604052801561085e578160200160208202803683370190505b50905060005b828110156108b25761087685826107e3565b8282815181106108885761088861118c565b6001600160a01b0390921660209283029190910190910152806108aa81611171565b915050610864565b509392505050565b60006107ef836001600160a01b0384166109c9565b6040516321f8a72160e01b8152724d4f54484552424f4152445f4144445245535360681b60048201526000906001600160a01b038316906321f8a72190602401602060405180830381865afa15801561092c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd91906111a2565b60008260000182815481106109675761096761118c565b9060005260206000200154905092915050565b60008181526001830160205260408120546109c1575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107dd565b5060006107dd565b60008181526001830160205260408120548015610ab25760006109ed6001836111bf565b8554909150600090610a01906001906111bf565b9050818114610a66576000866000018281548110610a2157610a2161118c565b9060005260206000200154905080876000018481548110610a4457610a4461118c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610a7757610a776111d6565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107dd565b60009150506107dd565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610af557610af5610abc565b60405290565b604051610100810167ffffffffffffffff81118282101715610af557610af5610abc565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b4857610b48610abc565b604052919050565b600067ffffffffffffffff821115610b6a57610b6a610abc565b5060051b60200190565b6001600160a01b0381168114610b8957600080fd5b50565b8035610b9781610b74565b919050565b803560ff81168114610b9757600080fd5b600060808284031215610bbf57600080fd5b6040516080810181811067ffffffffffffffff82111715610be257610be2610abc565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f830112610c2457600080fd5b81356020610c39610c3483610b50565b610b1f565b82815260069290921b84018101918181019086841115610c5857600080fd5b8286015b84811015610ca05760408189031215610c755760008081fd5b610c7d610ad2565b8135610c8881610b74565b81528185013585820152835291830191604001610c5c565b509695505050505050565b80358015158114610b9757600080fd5b600060208284031215610ccd57600080fd5b67ffffffffffffffff8083351115610ce457600080fd5b60408335840185031215610cf757600080fd5b610cff610ad2565b8184358501351115610d1057600080fd5b83358401803501601f81018613610d2657600080fd5b610d33610c348235610b50565b81358082526020808301929160051b840101881015610d5157600080fd5b602083015b6020843560051b850101811015610e73578581351115610d7557600080fd5b80358401601f196040828c0382011215610d8e57600080fd5b610d96610ad2565b8860208401351115610da757600080fd5b6020830135830161016083828f03011215610dc157600080fd5b610dc9610afb565b9250610dd760208201610b8c565b8352610de560408201610b9c565b602084015260608101356040840152610e018d60808301610bad565b6060840152610100810135608084015261012081013560a084015261014081013560c0840152896101608201351115610e3957600080fd5b610e4d8d6020610160840135840101610c13565b60e084015250908152604091909101356020808301919091529084529283019201610d56565b50835250610e88905084358501602001610cab565b6020820152949350505050565b60005b83811015610eb0578181015183820152602001610e98565b83811115610ebf576000848401525b50505050565b6020815260008251806020840152610ee4816040850160208701610e95565b601f01601f19169190910160400192915050565b600060208284031215610f0a57600080fd5b81356107ef81610b74565b6020808252825182820181905260009190848201906040850190845b81811015610f565783516001600160a01b031683529284019291840191600101610f31565b50909695505050505050565b600081518084526020808501945080840160005b83811015610fa657815180516001600160a01b031688528301518388015260409096019590820190600101610f76565b509495945050505050565b600060208083526060808401855160408085880152828251808552608094508489019150848160051b8a0101878501945060005b828110156110ac57607f198b83030184528551805186845280516001600160a01b0316878501528a81015160ff81168b8601525080870151848a015289810151805160a080870191909152602082015160c0870152604082015160e08701526060820151610100870152828b01516101208701528201516101408601525060c08101516101608086019190915260e09091015161018085019190915261108f6101a0850182610f62565b918b0151938b019390935295890195938901939150600101610fe5565b50968a0151801515848b0152969a9950505050505050505050565b6000602082840312156110d957600080fd5b815167ffffffffffffffff808211156110f157600080fd5b818401915084601f83011261110557600080fd5b81518181111561111757611117610abc565b61112a601f8201601f1916602001610b1f565b915080825285602082850101111561114157600080fd5b611152816020840160208601610e95565b50949350505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156111855761118561115b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156111b457600080fd5b81516107ef81610b74565b6000828210156111d1576111d161115b565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c0cc9123280ef218a690a42a4ecf5461fe34e860436491d1cc467e63faa7a23964736f6c634300080a0033", "deployedSourceMap": "386:2974:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:387;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;186:32:4;;;;;-1:-1:-1;;;;;186:32:4;;;;;;-1:-1:-1;;;;;6878:32:30;;;6860:51;;6848:2;6833:18;186:32:4;6714:203:30;2508:391:5;;;;;;:::i;:::-;;:::i;1210:158::-;;;;;;:::i;:::-;;:::i;:::-;;743:39;;;;;1058:101;;;:::i;:::-;;;;;;;:::i;1422:166::-;;;;;;:::i;:::-;;:::i;1627:416::-;;;;;;:::i;:::-;;:::i;2938:420::-;;;;;;:::i;:::-;;:::i;539:221:4:-;;;;;;:::i;:::-;;:::i;2082:387:5:-;2196:17;2229:14;2246:16;:7;:14;:16::i;:::-;2229:33;;2277:9;2272:191;2296:6;2292:1;:10;2272:191;;;2342:13;:7;2353:1;2342:10;:13::i;:::-;-1:-1:-1;;;;;2329:38:5;;2368:5;2329:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2329:45:5;;;;;;;;;;;;:::i;:::-;2392:17;;2323:51;;-1:-1:-1;2392:21:5;2388:65;;2433:5;;2388:65;2304:3;;;;:::i;:::-;;;;2272:191;;;;2219:250;2082:387;;;:::o;2508:391::-;2624:17;2657:14;2674:16;:7;:14;:16::i;:::-;2657:33;;2705:9;2700:193;2724:6;2720:1;:10;2700:193;;;2770:13;:7;2781:1;2770:10;:13::i;:::-;-1:-1:-1;;;;;2757:40:5;;2798:5;2757:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2757:47:5;;;;;;;;;;;;:::i;:::-;2822:17;;2751:53;;-1:-1:-1;2822:21:5;2818:65;;2863:5;;2818:65;2732:3;;;;:::i;:::-;;;;2700:193;;1210:158;395:8:4;;405:21;;;;;;;;;;;;-1:-1:-1;;;405:21:4;;;;;-1:-1:-1;;;;;395:8:4;381:10;:22;373:54;;;;-1:-1:-1;;;373:54:4;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1285:18:5::1;:7;1297:5:::0;1285:11:::1;:18::i;:::-;1305:23;;;;;;;;;;;;;-1:-1:-1::0;;;1305:23:5::1;;::::0;1277:52:::1;;;;;-1:-1:-1::0;;;1277:52:5::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1344:17:5::1;::::0;-1:-1:-1;;;;;1344:17:5;::::1;::::0;::::1;::::0;;;::::1;1210:158:::0;:::o;1058:101::-;1100:16;1135:17;:7;:15;:17::i;:::-;1128:24;;1058:101;:::o;1422:166::-;395:8:4;;405:21;;;;;;;;;;;;-1:-1:-1;;;405:21:4;;;;;-1:-1:-1;;;;;395:8:4;381:10;:22;373:54;;;;-1:-1:-1;;;373:54:4;;;;;;;;:::i;:::-;-1:-1:-1;1500:21:5::1;:7;1515:5:::0;1500:14:::1;:21::i;:::-;1523:23;;;;;;;;;;;;;-1:-1:-1::0;;;1523:23:5::1;;::::0;1492:55:::1;;;;;-1:-1:-1::0;;;1492:55:5::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1562:19:5::1;::::0;-1:-1:-1;;;;;1562:19:5;::::1;::::0;::::1;::::0;;;::::1;1422:166:::0;:::o;1627:416::-;1761:17;856:27;:10;-1:-1:-1;;;;;856:25:5;;:27::i;:::-;-1:-1:-1;;;;;834:50:5;:10;-1:-1:-1;;;;;834:50:5;;886:21;;;;;;;;;;;;;-1:-1:-1;;;886:21:5;;;826:82;;;;;-1:-1:-1;;;826:82:5;;;;;;;;:::i;:::-;;1794:14:::1;1811:16;:7;:14;:16::i;:::-;1794:33;;1842:9;1837:200;1861:6;1857:1;:10;1837:200;;;1907:13;:7;1918:1:::0;1907:10:::1;:13::i;:::-;-1:-1:-1::0;;;;;1894:47:5::1;;1942:5;1894:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1894:54:5::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1966:17:::0;;1888:60;;-1:-1:-1;1966:21:5;1962:65:::1;;2007:5;;1962:65;1869:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1837:200;;2938:420:::0;3074:17;856:27;:10;-1:-1:-1;;;;;856:25:5;;:27::i;:::-;-1:-1:-1;;;;;834:50:5;:10;-1:-1:-1;;;;;834:50:5;;886:21;;;;;;;;;;;;;-1:-1:-1;;;886:21:5;;;826:82;;;;;-1:-1:-1;;;826:82:5;;;;;;;;:::i;:::-;;3107:14:::1;3124:16;:7;:14;:16::i;:::-;3107:33;;3155:9;3150:202;3174:6;3170:1;:10;3150:202;;;3220:13;:7;3231:1:::0;3220:10:::1;:13::i;:::-;-1:-1:-1::0;;;;;3207:49:5::1;;3257:5;3207:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3207:56:5::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;3281:17:::0;;3201:62;;-1:-1:-1;3281:21:5;3277:65:::1;;3322:5;;3277:65;3182:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3150:202;;539:221:4::0;395:8;;405:21;;;;;;;;;;;;-1:-1:-1;;;405:21:4;;;;;-1:-1:-1;;;;;395:8:4;381:10;:22;373:54;;;;-1:-1:-1;;;373:54:4;;;;;;;;:::i;:::-;-1:-1:-1;627:23:4::1;653:8:::0;;-1:-1:-1;;;;;671:22:4;;::::1;-1:-1:-1::0;;;;;;671:22:4;::::1;::::0;::::1;::::0;;;708:45:::1;::::0;;653:8;;;::::1;12391:34:30::0;;;12456:2;12441:18;;12434:43;;;;708:45:4::1;::::0;12326:18:30;708:45:4::1;;;;;;;617:143;539:221:::0;:::o;8346:115:3:-;8409:7;8435:19;8443:3;3961:18;;3879:107;8435:19;8428:26;8346:115;-1:-1:-1;;8346:115:3:o;8803:156::-;8877:7;8927:22;8931:3;8943:5;8927:3;:22::i;:::-;8919:31;8803:156;-1:-1:-1;;;8803:156:3:o;7545:150::-;7615:4;7638:50;7643:3;-1:-1:-1;;;;;7663:23:3;;7638:4;:50::i;604:351:26:-;712:16;744:11;758:18;:9;:16;:18::i;:::-;744:32;;786:23;826:3;812:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;812:18:26;;786:44;;845:9;840:86;864:3;860:1;:7;840:86;;;900:15;:9;913:1;900:12;:15::i;:::-;888:6;895:1;888:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;888:27:26;;;:9;;;;;;;;;;;:27;869:3;;;;:::i;:::-;;;;840:86;;;-1:-1:-1;942:6:26;604:351;-1:-1:-1;;;604:351:26:o;7863:156:3:-;7936:4;7959:53;7967:3;-1:-1:-1;;;;;7987:23:3;;7959:7;:53::i;2443:176:23:-;2558:53;;-1:-1:-1;;;2558:53:23;;-1:-1:-1;;;2558:53:23;;;12766:25:30;2514:12:23;;-1:-1:-1;;;;;2558:21:23;;;;;12739:18:30;;2558:53:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4328:118:3:-;4395:7;4421:3;:11;;4433:5;4421:18;;;;;;;;:::i;:::-;;;;;;;;;4414:25;;4328:118;;;;:::o;1630:404::-;1693:4;3767:19;;;:12;;;:19;;;;;;1709:319;;-1:-1:-1;1751:23:3;;;;;;;;:11;:23;;;;;;;;;;;;;1931:18;;1909:19;;;:12;;;:19;;;;;;:40;;;;1963:11;;1709:319;-1:-1:-1;2012:5:3;2005:12;;2202:1388;2268:4;2405:19;;;:12;;;:19;;;;;;2439:15;;2435:1149;;2808:21;2832:14;2845:1;2832:10;:14;:::i;:::-;2880:18;;2808:38;;-1:-1:-1;2860:17:3;;2880:22;;2901:1;;2880:22;:::i;:::-;2860:42;;2934:13;2921:9;:26;2917:398;;2967:17;2987:3;:11;;2999:9;2987:22;;;;;;;;:::i;:::-;;;;;;;;;2967:42;;3138:9;3109:3;:11;;3121:13;3109:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3221:23;;;:12;;;:23;;;;;:36;;;2917:398;3393:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3485:3;:12;;:19;3498:5;3485:19;;;;;;;;;;;3478:26;;;3526:4;3519:11;;;;;;;2435:1149;3568:5;3561:12;;;;;14:127:30;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:257;218:4;212:11;;;250:17;;297:18;282:34;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:4;373:24;146:257;:::o;408:255::-;480:2;474:9;522:6;510:19;;559:18;544:34;;580:22;;;541:62;538:88;;;606:18;;:::i;668:275::-;739:2;733:9;804:2;785:13;;-1:-1:-1;;781:27:30;769:40;;839:18;824:34;;860:22;;;821:62;818:88;;;886:18;;:::i;:::-;922:2;915:22;668:275;;-1:-1:-1;668:275:30:o;948:198::-;1023:4;1056:18;1048:6;1045:30;1042:56;;;1078:18;;:::i;:::-;-1:-1:-1;1123:1:30;1119:14;1135:4;1115:25;;948:198::o;1151:131::-;-1:-1:-1;;;;;1226:31:30;;1216:42;;1206:70;;1272:1;1269;1262:12;1206:70;1151:131;:::o;1287:134::-;1355:20;;1384:31;1355:20;1384:31;:::i;:::-;1287:134;;;:::o;1426:156::-;1492:20;;1552:4;1541:16;;1531:27;;1521:55;;1572:1;1569;1562:12;1587:619;1656:5;1704:4;1692:9;1687:3;1683:19;1679:30;1676:50;;;1722:1;1719;1712:12;1676:50;1755:2;1749:9;1797:4;1789:6;1785:17;1868:6;1856:10;1853:22;1832:18;1820:10;1817:34;1814:62;1811:88;;;1879:18;;:::i;:::-;1919:10;1915:2;1908:22;;1948:6;1939:15;;1991:9;1978:23;1970:6;1963:39;2063:2;2052:9;2048:18;2035:32;2030:2;2022:6;2018:15;2011:57;2129:2;2118:9;2114:18;2101:32;2096:2;2088:6;2084:15;2077:57;2195:2;2184:9;2180:18;2167:32;2162:2;2154:6;2150:15;2143:57;;1587:619;;;;:::o;2211:1042::-;2276:5;2329:3;2322:4;2314:6;2310:17;2306:27;2296:55;;2347:1;2344;2337:12;2296:55;2383:6;2370:20;2409:4;2433:75;2449:58;2504:2;2449:58;:::i;:::-;2433:75;:::i;:::-;2542:15;;;2628:1;2624:10;;;;2612:23;;2608:32;;;2573:12;;;;2652:15;;;2649:35;;;2680:1;2677;2670:12;2649:35;2716:2;2708:6;2704:15;2728:496;2744:6;2739:3;2736:15;2728:496;;;2822:4;2816:3;2811;2807:13;2803:24;2800:114;;;2868:1;2897:2;2893;2886:14;2800:114;2940:22;;:::i;:::-;3003:3;2990:17;3020:33;3045:7;3020:33;:::i;:::-;3066:22;;3137:12;;;3124:26;3108:14;;;3101:50;3164:18;;3202:12;;;;2770:4;2761:14;2728:496;;;-1:-1:-1;3242:5:30;2211:1042;-1:-1:-1;;;;;;2211:1042:30:o;3258:160::-;3323:20;;3379:13;;3372:21;3362:32;;3352:60;;3408:1;3405;3398:12;3423:2635;3505:6;3558:2;3546:9;3537:7;3533:23;3529:32;3526:52;;;3574:1;3571;3564:12;3526:52;3597:18;3655:2;3643:9;3630:23;3627:31;3624:51;;;3671:1;3668;3661:12;3624:51;3746:4;3732:9;3719:23;3708:9;3704:39;3695:7;3691:53;3687:64;3684:84;;;3764:1;3761;3754:12;3684:84;3790:22;;:::i;:::-;3882:2;3868:9;3855:23;3844:9;3840:39;3827:53;3824:61;3821:81;;;3898:1;3895;3888:12;3821:81;3994:23;;3979:39;;3966:53;;3921:99;4051:4;4043:13;;4039:27;-1:-1:-1;4029:55:30;;4080:1;4077;4070:12;4029:55;4104:89;4120:72;4188:2;4175:16;4120:72;:::i;4104:89::-;4239:16;;4227:29;;;4281:2;4272:12;;;;4215:3;4315:1;4311:24;4303:33;;4299:42;4296:55;-1:-1:-1;4293:75:30;;;4364:1;4361;4354:12;4293:75;4396:2;4392;4388:11;4408:1493;4471:2;4464;4451:16;4448:1;4444:24;4440:2;4436:33;4432:42;4427:3;4424:51;4408:1493;;;4555:2;4549:3;4536:17;4533:25;4530:45;;;4571:1;4568;4561:12;4530:45;4606:17;;4598:26;;-1:-1:-1;;4701:4:30;4678:16;;;4674:25;;4670:36;4667:56;;;4719:1;4716;4709:12;4667:56;4751:22;;:::i;:::-;4819:2;4813;4809;4805:11;4792:25;4789:33;4786:53;;;4835:1;4832;4825:12;4786:53;4891:2;4887;4883:11;4870:25;4866:2;4862:34;4943:6;4938:2;4933;4924:7;4920:16;4916:25;4912:38;4909:58;;;4963:1;4960;4953:12;4909:58;4995:22;;:::i;:::-;4980:37;;5046:31;5073:2;5069;5065:11;5046:31;:::i;:::-;5037:7;5030:48;5116:31;5141:4;5137:2;5133:13;5116:31;:::i;:::-;5111:2;5102:7;5098:16;5091:57;5209:2;5205;5201:11;5188:25;5181:4;5172:7;5168:18;5161:53;5252:63;5307:7;5301:3;5297:2;5293:12;5252:63;:::i;:::-;5247:2;5238:7;5234:16;5227:89;5376:3;5372:2;5368:12;5355:26;5349:3;5340:7;5336:17;5329:53;5443:3;5439:2;5435:12;5422:26;5415:4;5406:7;5402:18;5395:54;5510:3;5506:2;5502:12;5489:26;5482:4;5473:7;5469:18;5462:54;5566:2;5556:6;5552:2;5548:15;5535:29;5532:37;5529:57;;;5582:1;5579;5572:12;5529:57;5625:97;5714:7;5709:2;5698:6;5694:2;5690:15;5677:29;5673:2;5669:38;5665:47;5625:97;:::i;:::-;5619:3;5606:17;;5599:124;-1:-1:-1;5736:24:30;;;5819:4;5811:13;;;;5798:27;5793:2;5780:16;;;5773:53;;;;5839:20;;;5879:12;;;;4493;4408:1493;;;-1:-1:-1;5910:20:30;;-1:-1:-1;5962:65:30;;-1:-1:-1;5997:23:30;;5982:39;;6023:2;5978:48;5962:65;:::i;:::-;5957:2;5946:14;;5939:89;5950:5;3423:2635;-1:-1:-1;;;;3423:2635:30:o;6063:258::-;6135:1;6145:113;6159:6;6156:1;6153:13;6145:113;;;6235:11;;;6229:18;6216:11;;;6209:39;6181:2;6174:10;6145:113;;;6276:6;6273:1;6270:13;6267:48;;;6311:1;6302:6;6297:3;6293:16;6286:27;6267:48;;6063:258;;;:::o;6326:383::-;6475:2;6464:9;6457:21;6438:4;6507:6;6501:13;6550:6;6545:2;6534:9;6530:18;6523:34;6566:66;6625:6;6620:2;6609:9;6605:18;6600:2;6592:6;6588:15;6566:66;:::i;:::-;6693:2;6672:15;-1:-1:-1;;6668:29:30;6653:45;;;;6700:2;6649:54;;6326:383;-1:-1:-1;;6326:383:30:o;6922:247::-;6981:6;7034:2;7022:9;7013:7;7009:23;7005:32;7002:52;;;7050:1;7047;7040:12;7002:52;7089:9;7076:23;7108:31;7133:5;7108:31;:::i;7402:658::-;7573:2;7625:21;;;7695:13;;7598:18;;;7717:22;;;7544:4;;7573:2;7796:15;;;;7770:2;7755:18;;;7544:4;7839:195;7853:6;7850:1;7847:13;7839:195;;;7918:13;;-1:-1:-1;;;;;7914:39:30;7902:52;;8009:15;;;;7974:12;;;;7950:1;7868:9;7839:195;;;-1:-1:-1;8051:3:30;;7402:658;-1:-1:-1;;;;;;7402:658:30:o;8425:559::-;8489:3;8527:5;8521:12;8554:6;8549:3;8542:19;8580:4;8609:2;8604:3;8600:12;8593:19;;8646:2;8639:5;8635:14;8667:1;8677:282;8691:6;8688:1;8685:13;8677:282;;;8750:13;;8792:9;;-1:-1:-1;;;;;8788:35:30;8776:48;;8864:11;;8858:18;8844:12;;;8837:40;8906:4;8897:14;;;;8934:15;;;;8820:1;8706:9;8677:282;;;-1:-1:-1;8975:3:30;;8425:559;-1:-1:-1;;;;;8425:559:30:o;9085:2106::-;9223:4;9252:2;9281;9270:9;9263:21;9303:2;9343;9332:9;9328:18;9381:6;9375:13;9407:4;9447:2;9442;9431:9;9427:18;9420:30;9470:6;9505:12;9499:19;9542:6;9534;9527:22;9568:3;9558:13;;9602:2;9591:9;9587:18;9580:25;;9664:2;9654:6;9651:1;9647:14;9636:9;9632:30;9628:39;9708:2;9694:12;9690:21;9676:35;;9729:1;9739:1310;9753:6;9750:1;9747:13;9739:1310;;;-1:-1:-1;;9818:22:30;;;9814:37;9802:50;;9875:13;;9923:9;;9945:18;;;10004:21;;-1:-1:-1;;;;;10000:47:30;9983:15;;;9976:72;10089:23;;;10083:30;8132:4;8121:16;;10159:15;;;8109:29;-1:-1:-1;10218:23:30;;;10212:30;10195:15;;;10188:55;10284:23;;;10278:30;8233:12;;10331:3;10404:15;;;8221:25;;;;8295:4;8284:16;;8278:23;8262:14;;;8255:47;8351:4;8340:16;;8334:23;8318:14;;;8311:47;8407:4;8396:16;;8390:23;8374:14;;;8367:47;10464:23;;;10458:30;10452:3;10440:16;;10433:56;10533:23;;10527:30;10521:3;10509:16;;10502:56;-1:-1:-1;10607:4:30;10587:25;;10581:32;10636:6;10662:15;;;10655:27;;;;10743:4;10723:25;;;10717:32;10781:3;10769:16;;10762:28;;;;10814:73;10882:3;10870:16;;10717:32;10814:73;:::i;:::-;10930:11;;;10924:18;10907:15;;;10900:43;;;;10992:15;;;;11027:12;;;;10803:84;-1:-1:-1;9775:1:30;9768:9;9739:1310;;;-1:-1:-1;11086:15:30;;;11080:22;9059:13;;9052:21;11143:18;;;9040:34;11080:22;11179:6;9085:2106;-1:-1:-1;;;;;;;;;;9085:2106:30:o;11196:706::-;11276:6;11329:2;11317:9;11308:7;11304:23;11300:32;11297:52;;;11345:1;11342;11335:12;11297:52;11378:9;11372:16;11407:18;11448:2;11440:6;11437:14;11434:34;;;11464:1;11461;11454:12;11434:34;11502:6;11491:9;11487:22;11477:32;;11547:7;11540:4;11536:2;11532:13;11528:27;11518:55;;11569:1;11566;11559:12;11518:55;11598:2;11592:9;11620:2;11616;11613:10;11610:36;;;11626:18;;:::i;:::-;11668:53;11711:2;11692:13;;-1:-1:-1;;11688:27:30;11717:2;11684:36;11668:53;:::i;:::-;11655:66;;11744:2;11737:5;11730:17;11784:7;11779:2;11774;11770;11766:11;11762:20;11759:33;11756:53;;;11805:1;11802;11795:12;11756:53;11818:54;11869:2;11864;11857:5;11853:14;11848:2;11844;11840:11;11818:54;:::i;:::-;-1:-1:-1;11891:5:30;11196:706;-1:-1:-1;;;;11196:706:30:o;11907:127::-;11968:10;11963:3;11959:20;11956:1;11949:31;11999:4;11996:1;11989:15;12023:4;12020:1;12013:15;12039:135;12078:3;-1:-1:-1;;12099:17:30;;12096:43;;;12119:18;;:::i;:::-;-1:-1:-1;12166:1:30;12155:13;;12039:135::o;12488:127::-;12549:10;12544:3;12540:20;12537:1;12530:31;12580:4;12577:1;12570:15;12604:4;12601:1;12594:15;12802:251;12872:6;12925:2;12913:9;12904:7;12900:23;12896:32;12893:52;;;12941:1;12938;12931:12;12893:52;12973:9;12967:16;12992:31;13017:5;12992:31;:::i;13058:125::-;13098:4;13126:1;13123;13120:8;13117:34;;;13131:18;;:::i;:::-;-1:-1:-1;13168:9:30;;13058:125::o;13188:127::-;13249:10;13244:3;13240:20;13237:1;13230:31;13280:4;13277:1;13270:15;13304:4;13301:1;13294:15", "language": "Solidity", "natspec": {"events": {"GovernorChanged(address,address)": {"notice": "Emmited when the governor is changed"}}, "kind": "dev", "methods": {"addCheck(address)": {"notice": "adds a check to be performed"}, "changeGovernor(address)": {"notice": "Changes the governor can only be called by the current governor"}, "checkAndPersistMint((((address,uint8,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a mint operation is safe This is only called when an actual mint is performed The implementation should store any relevant information for the mint", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "checkAndPersistRedeem((((address,uint8,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a redeem operation is safe This is only called when an actual redeem is performed The implementation should store any relevant information for the redeem", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "getChecks()": {"returns": {"_0": "all the checks registered"}}, "governor()": {"notice": "Returns the current governor"}, "isMintSafe((((address,uint8,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a mint operation is safe", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "isRedeemSafe((((address,uint8,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,uint256)[]),uint256)[],bool))": {"notice": "Checks whether a redeem operation is safe", "returns": {"err": "empty string if it is safe, otherwise the reason why it is not safe"}}, "removeCheck(address)": {"notice": "removes a check to be performed"}}, "version": 1}, "offset": [386, 3360], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4D9A12C4 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x4D9A12C4 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x68B23E52 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x8D404E98 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xC4EA1209 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71231CF EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x29C97771 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x3D4D10E2 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xDF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1B5 PUSH1 0x1 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH2 0x1CD PUSH1 0x1 DUP3 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x71231CF DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x23D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10C7 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP4 POP ISZERO PUSH2 0x24C JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH2 0x256 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BA JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x273 PUSH1 0x1 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH2 0x28B PUSH1 0x1 DUP3 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x29C97771 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2FB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10C7 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP4 POP ISZERO PUSH2 0x30A JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH2 0x314 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x278 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH1 0x1 DUP3 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x75EC3EF6C1AFB45DD0A2BBB3A4F14CAC03241C33FC24C352E25EA690E22A9232 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F3 PUSH1 0x1 PUSH2 0x80B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST POP PUSH2 0x449 PUSH1 0x1 DUP3 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3331 PUSH1 0xF0 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xD37223475C04A60E97EB30BC3A38B4AEF6A37DEF09D1ED6B88C881847362426D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4EE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x548 PUSH1 0x1 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH2 0x560 PUSH1 0x1 DUP3 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8D404E98 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58B SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x5D2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10C7 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP4 POP ISZERO PUSH2 0x5E1 JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH2 0x5EB DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x60 PUSH2 0x627 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x333 PUSH1 0xF4 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x681 PUSH1 0x1 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH2 0x699 PUSH1 0x1 DUP3 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC4EA1209 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x70B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x10C7 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP4 POP ISZERO PUSH2 0x71A JUMPI PUSH2 0x25E JUMP JUMPDEST DUP1 PUSH2 0x724 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x686 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xDE4B3F61490B74C0ED6237523974FE299126BBBF8A8A7482FD220104C59B0C84 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DD DUP3 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EF DUP4 DUP4 PUSH2 0x950 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x97A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x818 DUP4 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH2 0x835 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x876 DUP6 DUP3 PUSH2 0x7E3 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x888 JUMPI PUSH2 0x888 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x8AA DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x864 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH19 0x4D4F54484552424F4152445F41444452455353 PUSH1 0x68 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x967 JUMPI PUSH2 0x967 PUSH2 0x118C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x9C1 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x7DD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x0 PUSH2 0x9ED PUSH1 0x1 DUP4 PUSH2 0x11BF JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xA01 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x11BF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0xA66 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA21 JUMPI PUSH2 0xA21 PUSH2 0x118C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA44 JUMPI PUSH2 0xA44 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0xA77 JUMPI PUSH2 0xA77 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x7DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAF5 JUMPI PUSH2 0xAF5 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAF5 JUMPI PUSH2 0xAF5 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB6A PUSH2 0xABC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xB97 DUP2 PUSH2 0xB74 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE2 PUSH2 0xABC JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC39 PUSH2 0xC34 DUP4 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xC58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x40 DUP2 DUP10 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC7D PUSH2 0xAD2 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC88 DUP2 PUSH2 0xB74 JUMP JUMPDEST DUP2 MSTORE DUP2 DUP6 ADD CALLDATALOAD DUP6 DUP3 ADD MSTORE DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0xC5C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 CALLDATALOAD GT ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP4 CALLDATALOAD DUP5 ADD DUP6 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCFF PUSH2 0xAD2 JUMP JUMPDEST DUP2 DUP5 CALLDATALOAD DUP6 ADD CALLDATALOAD GT ISZERO PUSH2 0xD10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD DUP5 ADD DUP1 CALLDATALOAD ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD33 PUSH2 0xC34 DUP3 CALLDATALOAD PUSH2 0xB50 JUMP JUMPDEST DUP2 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP3 SWAP2 PUSH1 0x5 SHL DUP5 ADD ADD DUP9 LT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD JUMPDEST PUSH1 0x20 DUP5 CALLDATALOAD PUSH1 0x5 SHL DUP6 ADD ADD DUP2 LT ISZERO PUSH2 0xE73 JUMPI DUP6 DUP2 CALLDATALOAD GT ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP5 ADD PUSH1 0x1F NOT PUSH1 0x40 DUP3 DUP13 SUB DUP3 ADD SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD96 PUSH2 0xAD2 JUMP JUMPDEST DUP9 PUSH1 0x20 DUP5 ADD CALLDATALOAD GT ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP4 ADD PUSH2 0x160 DUP4 DUP3 DUP16 SUB ADD SLT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC9 PUSH2 0xAFB JUMP JUMPDEST SWAP3 POP PUSH2 0xDD7 PUSH1 0x20 DUP3 ADD PUSH2 0xB8C JUMP JUMPDEST DUP4 MSTORE PUSH2 0xDE5 PUSH1 0x40 DUP3 ADD PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xE01 DUP14 PUSH1 0x80 DUP4 ADD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x140 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE DUP10 PUSH2 0x160 DUP3 ADD CALLDATALOAD GT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4D DUP14 PUSH1 0x20 PUSH2 0x160 DUP5 ADD CALLDATALOAD DUP5 ADD ADD PUSH2 0xC13 JUMP JUMPDEST PUSH1 0xE0 DUP5 ADD MSTORE POP SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP5 MSTORE SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xD56 JUMP JUMPDEST POP DUP4 MSTORE POP PUSH2 0xE88 SWAP1 POP DUP5 CALLDATALOAD DUP6 ADD PUSH1 0x20 ADD PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE98 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xEE4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7EF DUP2 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF56 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF31 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFA6 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP4 ADD MLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF76 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP6 MLOAD PUSH1 0x40 DUP1 DUP6 DUP9 ADD MSTORE DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x80 SWAP5 POP DUP5 DUP10 ADD SWAP2 POP DUP5 DUP2 PUSH1 0x5 SHL DUP11 ADD ADD DUP8 DUP6 ADD SWAP5 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x10AC JUMPI PUSH1 0x7F NOT DUP12 DUP4 SUB ADD DUP5 MSTORE DUP6 MLOAD DUP1 MLOAD DUP7 DUP5 MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 ADD MSTORE DUP11 DUP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP12 DUP7 ADD MSTORE POP DUP1 DUP8 ADD MLOAD DUP5 DUP11 ADD MSTORE DUP10 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0xA0 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x100 DUP8 ADD MSTORE DUP3 DUP12 ADD MLOAD PUSH2 0x120 DUP8 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x160 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH2 0x180 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x108F PUSH2 0x1A0 DUP6 ADD DUP3 PUSH2 0xF62 JUMP JUMPDEST SWAP2 DUP12 ADD MLOAD SWAP4 DUP12 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP6 DUP10 ADD SWAP6 SWAP4 DUP10 ADD SWAP4 SWAP2 POP PUSH1 0x1 ADD PUSH2 0xFE5 JUMP JUMPDEST POP SWAP7 DUP11 ADD MLOAD DUP1 ISZERO ISZERO DUP5 DUP12 ADD MSTORE SWAP7 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1117 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x112A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP6 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1152 DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE95 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1185 JUMPI PUSH2 0x1185 PUSH2 0x115B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7EF DUP2 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11D1 JUMPI PUSH2 0x11D1 PUSH2 0x115B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xCC SWAP2 0x23 0x28 0xE CALLCODE XOR 0xA6 SWAP1 LOG4 0x2A 0x4E 0xCF SLOAD PUSH2 0xFE34 0xE8 PUSH1 0x43 PUSH5 0x91D1CC467E PUSH4 0xFAA7A239 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ", "sha1": "69dab68f6070d6c653fb56e6773a39af0eeae3c6", "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"../../interfaces/ISafetyCheck.sol\";\nimport \"../../interfaces/IGyroConfig.sol\";\n\nimport \"../../libraries/EnumerableExtensions.sol\";\nimport \"../../libraries/Errors.sol\";\nimport \"../../libraries/ConfigHelpers.sol\";\n\nimport \"../auth/Governable.sol\";\n\ncontract RootSafetyCheck is ISafetyCheck, Governable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableExtensions for EnumerableSet.AddressSet;\n    using ConfigHelpers for IGyroConfig;\n\n    event CheckAdded(address indexed check);\n    event CheckRemoved(address indexed check);\n\n    EnumerableSet.AddressSet internal _checks;\n\n    IGyroConfig public immutable gyroConfig;\n\n    modifier motherboardOnly() {\n        require(msg.sender == address(gyroConfig.getMotherboard()), Errors.NOT_AUTHORIZED);\n        _;\n    }\n\n    constructor(IGyroConfig _gyroConfig) {\n        gyroConfig = _gyroConfig;\n    }\n\n    /// @return all the checks registered\n    function getChecks() public view returns (address[] memory) {\n        return _checks.toArray();\n    }\n\n    /// @notice adds a check to be performed\n    function addCheck(address check) external governanceOnly {\n        require(_checks.add(check), Errors.INVALID_ARGUMENT);\n        emit CheckAdded(check);\n    }\n\n    /// @notice removes a check to be performed\n    function removeCheck(address check) external governanceOnly {\n        require(_checks.remove(check), Errors.INVALID_ARGUMENT);\n        emit CheckRemoved(check);\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function checkAndPersistMint(DataTypes.Order memory order)\n        external\n        override\n        motherboardOnly\n        returns (string memory err)\n    {\n        uint256 length = _checks.length();\n        for (uint256 i = 0; i < length; i++) {\n            err = ISafetyCheck(_checks.at(i)).checkAndPersistMint(order);\n            if (bytes(err).length > 0) {\n                break;\n            }\n        }\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function isMintSafe(DataTypes.Order memory order)\n        external\n        view\n        override\n        returns (string memory err)\n    {\n        uint256 length = _checks.length();\n        for (uint256 i = 0; i < length; i++) {\n            err = ISafetyCheck(_checks.at(i)).isMintSafe(order);\n            if (bytes(err).length > 0) {\n                break;\n            }\n        }\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function isRedeemSafe(DataTypes.Order memory order)\n        external\n        view\n        override\n        returns (string memory err)\n    {\n        uint256 length = _checks.length();\n        for (uint256 i = 0; i < length; i++) {\n            err = ISafetyCheck(_checks.at(i)).isRedeemSafe(order);\n            if (bytes(err).length > 0) {\n                break;\n            }\n        }\n    }\n\n    /// @inheritdoc ISafetyCheck\n    function checkAndPersistRedeem(DataTypes.Order memory order)\n        external\n        override\n        motherboardOnly\n        returns (string memory err)\n    {\n        uint256 length = _checks.length();\n        for (uint256 i = 0; i < length; i++) {\n            err = ISafetyCheck(_checks.at(i)).checkAndPersistRedeem(order);\n            if (bytes(err).length > 0) {\n                break;\n            }\n        }\n    }\n}\n", "sourceMap": "386:2974:5:-:0;;;932:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;249:8:4;:21;;-1:-1:-1;;;;;;249:21:4;260:10;249:21;;;;;285:39;;;541:34:30;;;606:2;591:18;;584:43;;;;285:39:4;;476:18:30;285:39:4;;;;;;;-1:-1:-1;;;;;979:24:5;;;386:2974;;14:310:30;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:30;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:30:o;329:304::-;386:2974:5;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/safety/RootSafetyCheck.sol", "type": "contract", "deployment": {"address": "0x5aB71Dc14F5A3E49E42c9A50d6BE596829c6eAcc", "chainid": "137", "blockHeight": 26856405}}