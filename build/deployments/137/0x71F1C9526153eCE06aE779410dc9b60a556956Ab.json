{"abi": [{"inputs": [{"internalType": "contract IGyroConfig", "name": "_gyroConfig", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChangeRequested", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "oldGovernor", "type": "address"}, {"indexed": false, "internalType": "address", "name": "newGovernor", "type": "address"}], "name": "GovernorChanged", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "vault", "type": "address"}], "name": "VaultDeregistered", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "vault", "type": "address"}], "name": "VaultRegistered", "type": "event"}, {"inputs": [], "name": "acceptGovernance", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newGovernor", "type": "address"}], "name": "changeGovernor", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "vault", "type": "address"}], "name": "deregisterVault", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "vault", "type": "address"}], "name": "getVaultMetadata", "outputs": [{"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "governor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "gyroConfig", "outputs": [{"internalType": "contract IGyroConfig", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_governor", "type": "address"}], "name": "initialize", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "listVaults", "outputs": [{"internalType": "address[]", "name": "", "type": "address[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "pendingGovernor", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "vault", "type": "address"}, {"components": [{"internalType": "uint256", "name": "initialPrice", "type": "uint256"}, {"internalType": "uint256", "name": "initialWeight", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowMemory", "type": "uint256"}, {"internalType": "uint256", "name": "shortFlowThreshold", "type": "uint256"}], "internalType": "struct DataTypes.PersistedVaultMetadata", "name": "persistedMetadata", "type": "tuple"}], "name": "registerVault", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "vault", "type": "address"}, {"internalType": "uint256", "name": "initialPrice", "type": "uint256"}], "name": "setInitialPrice", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address[]", "name": "vaultsToUpdate", "type": "address[]"}, {"internalType": "uint256[]", "name": "newShortFlowMemory", "type": "uint256[]"}, {"internalType": "uint256[]", "name": "newShortFlowThreshold", "type": "uint256[]"}], "name": "updatePersistedVaultFlowParams", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"100": "interfaces/IGyroConfig.sol", "103": "interfaces/IMotherboard.sol", "104": "interfaces/IPAMM.sol", "105": "interfaces/IReserve.sol", "106": "interfaces/IReserveManager.sol", "107": "interfaces/ISafetyCheck.sol", "108": "interfaces/IVaultRegistry.sol", "125": "interfaces/oracles/IBatchVaultPriceOracle.sol", "13": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/proxy/utils/Initializable.sol", "139": "libraries/ConfigHelpers.sol", "140": "libraries/ConfigKeys.sol", "143": "libraries/EnumerableExtensions.sol", "144": "libraries/EnumerableMapping.sol", "145": "libraries/Errors.sol", "30": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableMap.sol", "31": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "40": "contracts/VaultRegistry.sol", "43": "contracts/auth/GovernableBase.sol", "44": "contracts/auth/GovernableUpgradeable.sol", "94": "interfaces/IAssetRegistry.sol", "95": "interfaces/ICapAuthentication.sol", "96": "interfaces/IFeeBank.sol", "97": "interfaces/IFeeHandler.sol", "98": "interfaces/IGYDToken.sol", "99": "interfaces/IGovernable.sol"}, "ast": {"absolutePath": "contracts/VaultRegistry.sol", "exportedSymbols": {"ConfigHelpers": [17701], "ConfigKeys": [19049], "DataTypes": [19195], "EnumerableExtensions": [22415], "EnumerableMap": [25923], "EnumerableMapping": [18526], "EnumerableSet": [21876], "Errors": [19425], "Governable": [5243], "GovernableBase": [5337], "GovernableUpgradeable": [5376], "IAssetRegistry": [23062], "IBatchVaultPriceOracle": [23166], "ICapAuthentication": [23178], "IERC165": [29902], "IERC20": [18604], "IERC20Metadata": [25443], "IERC721": [27952], "IFeeBank": [16420], "IFeeHandler": [18626], "IGYDToken": [18667], "IGovernable": [23215], "IGyroConfig": [17416], "IGyroVault": [18782], "IMotherboard": [18927], "IPAMM": [19000], "IReserve": [21939], "IReserveManager": [23087], "ISafetyCheck": [26923], "IUSDPriceOracle": [24510], "IVaultRegistry": [23138], "IVaultWeightManager": [28003], "Initializable": [23261], "VaultRegistry": [5134], "Vaults": [24914]}, "id": 5135, "license": "LicenseRef-Gyro-1.0", "nodeType": "SourceUnit", "nodes": [{"id": 4860, "literals": ["solidity", "^", "0.8", ".4"], "nodeType": "PragmaDirective", "src": "174:23:40"}, {"absolutePath": "/home/daniel/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/structs/EnumerableSet.sol", "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol", "id": 4861, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5135, "sourceUnit": 21877, "src": "199:65:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/auth/GovernableUpgradeable.sol", "file": "./auth/GovernableUpgradeable.sol", "id": 4862, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5135, "sourceUnit": 5377, "src": "266:42:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ConfigKeys.sol", "file": "../libraries/ConfigKeys.sol", "id": 4863, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5135, "sourceUnit": 19050, "src": "310:37:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ConfigHelpers.sol", "file": "../libraries/ConfigHelpers.sol", "id": 4864, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5135, "sourceUnit": 17702, "src": "348:40:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/EnumerableExtensions.sol", "file": "../libraries/EnumerableExtensions.sol", "id": 4865, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5135, "sourceUnit": 22416, "src": "389:47:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IVaultRegistry.sol", "file": "../interfaces/IVaultRegistry.sol", "id": 4866, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5135, "sourceUnit": 23139, "src": "438:42:40", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IGyroConfig.sol", "file": "../interfaces/IGyroConfig.sol", "id": 4867, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5135, "sourceUnit": 17417, "src": "481:39:40", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 4868, "name": "IVaultRegistry", "nodeType": "IdentifierPath", "referencedDeclaration": 23138, "src": "548:14:40"}, "id": 4869, "nodeType": "InheritanceSpecifier", "src": "548:14:40"}, {"baseName": {"id": 4870, "name": "GovernableUpgradeable", "nodeType": "IdentifierPath", "referencedDeclaration": 5376, "src": "564:21:40"}, "id": 4871, "nodeType": "InheritanceSpecifier", "src": "564:21:40"}], "canonicalName": "VaultRegistry", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 5134, "linearizedBaseContracts": [5134, 5376, 23261, 5337, 23215, 23138], "name": "VaultRegistry", "nameLocation": "531:13:40", "nodeType": "ContractDefinition", "nodes": [{"id": 4875, "libraryName": {"id": 4872, "name": "EnumerableSet", "nodeType": "IdentifierPath", "referencedDeclaration": 21876, "src": "598:13:40"}, "nodeType": "UsingForDirective", "src": "592:49:40", "typeName": {"id": 4874, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4873, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 21589, "src": "616:24:40"}, "referencedDeclaration": 21589, "src": "616:24:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 4879, "libraryName": {"id": 4876, "name": "EnumerableExtensions", "nodeType": "IdentifierPath", "referencedDeclaration": 22415, "src": "652:20:40"}, "nodeType": "UsingForDirective", "src": "646:56:40", "typeName": {"id": 4878, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4877, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 21589, "src": "677:24:40"}, "referencedDeclaration": 21589, "src": "677:24:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}}, {"id": 4883, "libraryName": {"id": 4880, "name": "ConfigHelpers", "nodeType": "IdentifierPath", "referencedDeclaration": 17701, "src": "713:13:40"}, "nodeType": "UsingForDirective", "src": "707:36:40", "typeName": {"id": 4882, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4881, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 17416, "src": "731:11:40"}, "referencedDeclaration": 17416, "src": "731:11:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}}, {"constant": false, "functionSelector": "44bbdb55", "id": 4886, "mutability": "immutable", "name": "gyroConfig", "nameLocation": "778:10:40", "nodeType": "VariableDeclaration", "scope": 5134, "src": "749:39:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}, "typeName": {"id": 4885, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4884, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 17416, "src": "749:11:40"}, "referencedDeclaration": 17416, "src": "749:11:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "visibility": "public"}, {"constant": false, "id": 4889, "mutability": "mutable", "name": "vaultAddresses", "nameLocation": "829:14:40", "nodeType": "VariableDeclaration", "scope": 5134, "src": "795:48:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet"}, "typeName": {"id": 4888, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4887, "name": "EnumerableSet.AddressSet", "nodeType": "IdentifierPath", "referencedDeclaration": 21589, "src": "795:24:40"}, "referencedDeclaration": 21589, "src": "795:24:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage_ptr", "typeString": "struct EnumerableSet.AddressSet"}}, "visibility": "internal"}, {"constant": false, "id": 4894, "mutability": "mutable", "name": "vaultsMetadata", "nameLocation": "912:14:40", "nodeType": "VariableDeclaration", "scope": 5134, "src": "850:76:40", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata)"}, "typeName": {"id": 4893, "keyType": {"id": 4890, "name": "address", "nodeType": "ElementaryTypeName", "src": "858:7:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "850:52:40", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata)"}, "valueType": {"id": 4892, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4891, "name": "DataTypes.PersistedVaultMetadata", "nodeType": "IdentifierPath", "referencedDeclaration": 19094, "src": "869:32:40"}, "referencedDeclaration": 19094, "src": "869:32:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata"}}}, "visibility": "internal"}, {"body": {"id": 4904, "nodeType": "Block", "src": "970:41:40", "statements": [{"expression": {"id": 4902, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4900, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4886, "src": "980:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4901, "name": "_gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4897, "src": "993:11:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "src": "980:24:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "id": 4903, "nodeType": "ExpressionStatement", "src": "980:24:40"}]}, "id": 4905, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 4898, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4897, "mutability": "mutable", "name": "_gyroConfig", "nameLocation": "957:11:40", "nodeType": "VariableDeclaration", "scope": 4905, "src": "945:23:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}, "typeName": {"id": 4896, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4895, "name": "IGyroConfig", "nodeType": "IdentifierPath", "referencedDeclaration": 17416, "src": "945:11:40"}, "referencedDeclaration": 17416, "src": "945:11:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "visibility": "internal"}], "src": "944:25:40"}, "returnParameters": {"id": 4899, "nodeType": "ParameterList", "parameters": [], "src": "970:0:40"}, "scope": 5134, "src": "933:78:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 4922, "nodeType": "Block", "src": "1047:159:40", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 4916, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4908, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1078:3:40", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 4909, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1078:10:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4912, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4886, "src": "1100:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "id": 4913, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getReserveManager", "nodeType": "MemberAccess", "referencedDeclaration": 17523, "src": "1100:28:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$17416_$returns$_t_contract$_IReserveManager_$23087_$bound_to$_t_contract$_IGyroConfig_$17416_$", "typeString": "function (contract IGyroConfig) view returns (contract IReserveManager)"}}, "id": 4914, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1100:30:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IReserveManager_$23087", "typeString": "contract IReserveManager"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IReserveManager_$23087", "typeString": "contract IReserveManager"}], "id": 4911, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1092:7:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4910, "name": "address", "nodeType": "ElementaryTypeName", "src": "1092:7:40", "typeDescriptions": {}}}, "id": 4915, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1092:39:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1078:53:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4917, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "1145:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 4918, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "CALLER_NOT_RESERVE_MANAGER", "nodeType": "MemberAccess", "referencedDeclaration": 19409, "src": "1145:33:40", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4907, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1057:7:40", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4919, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1057:131:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4920, "nodeType": "ExpressionStatement", "src": "1057:131:40"}, {"id": 4921, "nodeType": "PlaceholderStatement", "src": "1198:1:40"}]}, "id": 4923, "name": "reserveManagerOnly", "nameLocation": "1026:18:40", "nodeType": "ModifierDefinition", "parameters": {"id": 4906, "nodeType": "ParameterList", "parameters": [], "src": "1044:2:40"}, "src": "1017:189:40", "virtual": false, "visibility": "internal"}, {"baseFunctions": [23114], "body": {"id": 4935, "nodeType": "Block", "src": "1319:48:40", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4931, "name": "vaultAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4889, "src": "1336:14:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 4932, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "toArray", "nodeType": "MemberAccess", "referencedDeclaration": 22014, "src": "1336:22:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}}, "id": 4933, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1336:24:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "functionReturnParameters": 4930, "id": 4934, "nodeType": "Return", "src": "1329:31:40"}]}, "documentation": {"id": 4924, "nodeType": "StructuredDocumentation", "src": "1212:30:40", "text": "@inheritdoc IVaultRegistry"}, "functionSelector": "50cc258e", "id": 4936, "implemented": true, "kind": "function", "modifiers": [], "name": "listVaults", "nameLocation": "1256:10:40", "nodeType": "FunctionDefinition", "overrides": {"id": 4926, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1283:8:40"}, "parameters": {"id": 4925, "nodeType": "ParameterList", "parameters": [], "src": "1266:2:40"}, "returnParameters": {"id": 4930, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4929, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4936, "src": "1301:16:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 4927, "name": "address", "nodeType": "ElementaryTypeName", "src": "1301:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4928, "nodeType": "ArrayTypeName", "src": "1301:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "1300:18:40"}, "scope": 5134, "src": "1247:120:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [23107], "body": {"id": 4950, "nodeType": "Block", "src": "1558:45:40", "statements": [{"expression": {"baseExpression": {"id": 4946, "name": "vaultsMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "1575:14:40", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata storage ref)"}}, "id": 4948, "indexExpression": {"id": 4947, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4939, "src": "1590:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1575:21:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage", "typeString": "struct DataTypes.PersistedVaultMetadata storage ref"}}, "functionReturnParameters": 4945, "id": 4949, "nodeType": "Return", "src": "1568:28:40"}]}, "documentation": {"id": 4937, "nodeType": "StructuredDocumentation", "src": "1373:30:40", "text": "@inheritdoc IVaultRegistry"}, "functionSelector": "dc4f1e49", "id": 4951, "implemented": true, "kind": "function", "modifiers": [], "name": "getVaultMetadata", "nameLocation": "1417:16:40", "nodeType": "FunctionDefinition", "overrides": {"id": 4941, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1487:8:40"}, "parameters": {"id": 4940, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4939, "mutability": "mutable", "name": "vault", "nameLocation": "1442:5:40", "nodeType": "VariableDeclaration", "scope": 4951, "src": "1434:13:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4938, "name": "address", "nodeType": "ElementaryTypeName", "src": "1434:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1433:15:40"}, "returnParameters": {"id": 4945, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4944, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4951, "src": "1513:39:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_memory_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata"}, "typeName": {"id": 4943, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4942, "name": "DataTypes.PersistedVaultMetadata", "nodeType": "IdentifierPath", "referencedDeclaration": 19094, "src": "1513:32:40"}, "referencedDeclaration": 19094, "src": "1513:32:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata"}}, "visibility": "internal"}], "src": "1512:41:40"}, "scope": 5134, "src": "1408:195:40", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [23123], "body": {"id": 5000, "nodeType": "Block", "src": "1806:302:40", "statements": [{"expression": {"arguments": [{"id": 4968, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1824:31:40", "subExpression": {"arguments": [{"id": 4966, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4954, "src": "1849:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 4964, "name": "vaultAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4889, "src": "1825:14:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 4965, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contains", "nodeType": "MemberAccess", "referencedDeclaration": 21670, "src": "1825:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}}, "id": 4967, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1825:30:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4969, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "1857:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 4970, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "VAULT_ALREADY_EXISTS", "nodeType": "MemberAccess", "referencedDeclaration": 19304, "src": "1857:27:40", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4963, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1816:7:40", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4971, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1816:69:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4972, "nodeType": "ExpressionStatement", "src": "1816:69:40"}, {"expression": {"arguments": [{"arguments": [{"id": 4978, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4954, "src": "1947:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4974, "name": "gyroConfig", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4886, "src": "1903:10:40", "typeDescriptions": {"typeIdentifier": "t_contract$_IGyroConfig_$17416", "typeString": "contract IGyroConfig"}}, "id": 4975, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getFeeHandler", "nodeType": "MemberAccess", "referencedDeclaration": 17595, "src": "1903:24:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$17416_$returns$_t_contract$_IFeeHandler_$18626_$bound_to$_t_contract$_IGyroConfig_$17416_$", "typeString": "function (contract IGyroConfig) view returns (contract IFeeHandler)"}}, "id": 4976, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1903:26:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IFeeHandler_$18626", "typeString": "contract IFeeHandler"}}, "id": 4977, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isVaultSupported", "nodeType": "MemberAccess", "referencedDeclaration": 18625, "src": "1903:43:40", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view external returns (bool)"}}, "id": 4979, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1903:50:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 4980, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "1955:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 4981, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "VAULT_NOT_FOUND", "nodeType": "MemberAccess", "referencedDeclaration": 19307, "src": "1955:22:40", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 4973, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1895:7:40", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 4982, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1895:83:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4983, "nodeType": "ExpressionStatement", "src": "1895:83:40"}, {"expression": {"arguments": [{"id": 4987, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4954, "src": "2007:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 4984, "name": "vaultAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4889, "src": "1988:14:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 4986, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 21616, "src": "1988:18:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$21589_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 4988, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1988:25:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4989, "nodeType": "ExpressionStatement", "src": "1988:25:40"}, {"expression": {"id": 4994, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 4990, "name": "vaultsMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "2023:14:40", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata storage ref)"}}, "id": 4992, "indexExpression": {"id": 4991, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4954, "src": "2038:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2023:21:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage", "typeString": "struct DataTypes.PersistedVaultMetadata storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4993, "name": "persistedMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4957, "src": "2047:17:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_memory_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata memory"}}, "src": "2023:41:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage", "typeString": "struct DataTypes.PersistedVaultMetadata storage ref"}}, "id": 4995, "nodeType": "ExpressionStatement", "src": "2023:41:40"}, {"eventCall": {"arguments": [{"id": 4997, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4954, "src": "2095:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4996, "name": "VaultRegistered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23094, "src": "2079:15:40", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 4998, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2079:22:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4999, "nodeType": "EmitStatement", "src": "2074:27:40"}]}, "documentation": {"id": 4952, "nodeType": "StructuredDocumentation", "src": "1609:30:40", "text": "@inheritdoc IVaultRegistry"}, "functionSelector": "e7464015", "id": 5001, "implemented": true, "kind": "function", "modifiers": [{"id": 4961, "kind": "modifierInvocation", "modifierName": {"id": 4960, "name": "reserveManagerOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 4923, "src": "1783:18:40"}, "nodeType": "ModifierInvocation", "src": "1783:18:40"}], "name": "registerVault", "nameLocation": "1653:13:40", "nodeType": "FunctionDefinition", "overrides": {"id": 4959, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1766:8:40"}, "parameters": {"id": 4958, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4954, "mutability": "mutable", "name": "vault", "nameLocation": "1675:5:40", "nodeType": "VariableDeclaration", "scope": 5001, "src": "1667:13:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4953, "name": "address", "nodeType": "ElementaryTypeName", "src": "1667:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4957, "mutability": "mutable", "name": "persistedMetadata", "nameLocation": "1722:17:40", "nodeType": "VariableDeclaration", "scope": 5001, "src": "1682:57:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_memory_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata"}, "typeName": {"id": 4956, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4955, "name": "DataTypes.PersistedVaultMetadata", "nodeType": "IdentifierPath", "referencedDeclaration": 19094, "src": "1682:32:40"}, "referencedDeclaration": 19094, "src": "1682:32:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage_ptr", "typeString": "struct DataTypes.PersistedVaultMetadata"}}, "visibility": "internal"}], "src": "1666:74:40"}, "returnParameters": {"id": 4962, "nodeType": "ParameterList", "parameters": [], "src": "1806:0:40"}, "scope": 5134, "src": "1644:464:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [23137], "body": {"id": 5037, "nodeType": "Block", "src": "2204:222:40", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 5013, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5003, "src": "2246:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5011, "name": "vaultAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4889, "src": "2222:14:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 5012, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contains", "nodeType": "MemberAccess", "referencedDeclaration": 21670, "src": "2222:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}}, "id": 5014, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2222:30:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5015, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "2254:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 5016, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "VAULT_NOT_FOUND", "nodeType": "MemberAccess", "referencedDeclaration": 19307, "src": "2254:22:40", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5010, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2214:7:40", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5017, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2214:63:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5018, "nodeType": "ExpressionStatement", "src": "2214:63:40"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5025, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 5020, "name": "vaultsMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "2295:14:40", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata storage ref)"}}, "id": 5022, "indexExpression": {"id": 5021, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5003, "src": "2310:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2295:21:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage", "typeString": "struct DataTypes.PersistedVaultMetadata storage ref"}}, "id": 5023, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "initialPrice", "nodeType": "MemberAccess", "referencedDeclaration": 19087, "src": "2295:34:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 5024, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2333:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2295:39:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5026, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "2336:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 5027, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INVALID_ARGUMENT", "nodeType": "MemberAccess", "referencedDeclaration": 19343, "src": "2336:23:40", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5019, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2287:7:40", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2287:73:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5029, "nodeType": "ExpressionStatement", "src": "2287:73:40"}, {"expression": {"id": 5035, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 5030, "name": "vaultsMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "2370:14:40", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata storage ref)"}}, "id": 5032, "indexExpression": {"id": 5031, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5003, "src": "2385:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2370:21:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage", "typeString": "struct DataTypes.PersistedVaultMetadata storage ref"}}, "id": 5033, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "initialPrice", "nodeType": "MemberAccess", "referencedDeclaration": 19087, "src": "2370:34:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5034, "name": "initialPrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5005, "src": "2407:12:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2370:49:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5036, "nodeType": "ExpressionStatement", "src": "2370:49:40"}]}, "functionSelector": "95e5171a", "id": 5038, "implemented": true, "kind": "function", "modifiers": [{"id": 5008, "kind": "modifierInvocation", "modifierName": {"id": 5007, "name": "reserveManagerOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 4923, "src": "2185:18:40"}, "nodeType": "ModifierInvocation", "src": "2185:18:40"}], "name": "setInitialPrice", "nameLocation": "2123:15:40", "nodeType": "FunctionDefinition", "parameters": {"id": 5006, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5003, "mutability": "mutable", "name": "vault", "nameLocation": "2147:5:40", "nodeType": "VariableDeclaration", "scope": 5038, "src": "2139:13:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5002, "name": "address", "nodeType": "ElementaryTypeName", "src": "2139:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5005, "mutability": "mutable", "name": "initialPrice", "nameLocation": "2162:12:40", "nodeType": "VariableDeclaration", "scope": 5038, "src": "2154:20:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5004, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2154:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2138:37:40"}, "returnParameters": {"id": 5009, "nodeType": "ParameterList", "parameters": [], "src": "2204:0:40"}, "scope": 5134, "src": "2114:312:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 5098, "nodeType": "Block", "src": "2636:345:40", "statements": [{"body": {"id": 5096, "nodeType": "Block", "src": "2698:277:40", "statements": [{"expression": {"arguments": [{"arguments": [{"baseExpression": {"id": 5066, "name": "vaultsToUpdate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5041, "src": "2744:14:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 5068, "indexExpression": {"id": 5067, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5053, "src": "2759:1:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2744:17:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5064, "name": "vaultAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4889, "src": "2720:14:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 5065, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contains", "nodeType": "MemberAccess", "referencedDeclaration": 21670, "src": "2720:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}}, "id": 5069, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2720:42:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5070, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "2764:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 5071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "VAULT_NOT_FOUND", "nodeType": "MemberAccess", "referencedDeclaration": 19307, "src": "2764:22:40", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5063, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2712:7:40", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5072, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2712:75:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5073, "nodeType": "ExpressionStatement", "src": "2712:75:40"}, {"expression": {"id": 5083, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 5074, "name": "vaultsMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "2801:14:40", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata storage ref)"}}, "id": 5078, "indexExpression": {"baseExpression": {"id": 5075, "name": "vaultsToUpdate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5041, "src": "2816:14:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 5077, "indexExpression": {"id": 5076, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5053, "src": "2831:1:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2816:17:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2801:33:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage", "typeString": "struct DataTypes.PersistedVaultMetadata storage ref"}}, "id": 5079, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "shortFlowMemory", "nodeType": "MemberAccess", "referencedDeclaration": 19091, "src": "2801:49:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 5080, "name": "newShortFlowMemory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5044, "src": "2853:18:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5082, "indexExpression": {"id": 5081, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5053, "src": "2872:1:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2853:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2801:73:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5084, "nodeType": "ExpressionStatement", "src": "2801:73:40"}, {"expression": {"id": 5094, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 5085, "name": "vaultsMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "2888:14:40", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata storage ref)"}}, "id": 5089, "indexExpression": {"baseExpression": {"id": 5086, "name": "vaultsToUpdate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5041, "src": "2903:14:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 5088, "indexExpression": {"id": 5087, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5053, "src": "2918:1:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2903:17:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2888:33:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage", "typeString": "struct DataTypes.PersistedVaultMetadata storage ref"}}, "id": 5090, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "shortFlowMemory", "nodeType": "MemberAccess", "referencedDeclaration": 19091, "src": "2888:49:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 5091, "name": "newShortFlowThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5047, "src": "2940:21:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 5093, "indexExpression": {"id": 5092, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5053, "src": "2962:1:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2940:24:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2888:76:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5095, "nodeType": "ExpressionStatement", "src": "2888:76:40"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5059, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5056, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5053, "src": "2666:1:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 5057, "name": "vaultsToUpdate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5041, "src": "2670:14:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 5058, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2670:21:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2666:25:40", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5097, "initializationExpression": {"assignments": [5053], "declarations": [{"constant": false, "id": 5053, "mutability": "mutable", "name": "i", "nameLocation": "2659:1:40", "nodeType": "VariableDeclaration", "scope": 5097, "src": "2651:9:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5052, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2651:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5055, "initialValue": {"hexValue": "30", "id": 5054, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2663:1:40", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "2651:13:40"}, "loopExpression": {"expression": {"id": 5061, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2693:3:40", "subExpression": {"id": 5060, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5053, "src": "2693:1:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5062, "nodeType": "ExpressionStatement", "src": "2693:3:40"}, "nodeType": "ForStatement", "src": "2646:329:40"}]}, "functionSelector": "753ed477", "id": 5099, "implemented": true, "kind": "function", "modifiers": [{"id": 5050, "kind": "modifierInvocation", "modifierName": {"id": 5049, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 5268, "src": "2621:14:40"}, "nodeType": "ModifierInvocation", "src": "2621:14:40"}], "name": "updatePersistedVaultFlowParams", "nameLocation": "2441:30:40", "nodeType": "FunctionDefinition", "parameters": {"id": 5048, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5041, "mutability": "mutable", "name": "vaultsToUpdate", "nameLocation": "2498:14:40", "nodeType": "VariableDeclaration", "scope": 5099, "src": "2481:31:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 5039, "name": "address", "nodeType": "ElementaryTypeName", "src": "2481:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 5040, "nodeType": "ArrayTypeName", "src": "2481:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}, {"constant": false, "id": 5044, "mutability": "mutable", "name": "newShortFlowMemory", "nameLocation": "2539:18:40", "nodeType": "VariableDeclaration", "scope": 5099, "src": "2522:35:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5042, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2522:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5043, "nodeType": "ArrayTypeName", "src": "2522:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}, {"constant": false, "id": 5047, "mutability": "mutable", "name": "newShortFlowThreshold", "nameLocation": "2584:21:40", "nodeType": "VariableDeclaration", "scope": 5099, "src": "2567:38:40", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 5045, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2567:7:40", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5046, "nodeType": "ArrayTypeName", "src": "2567:9:40", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "2471:140:40"}, "returnParameters": {"id": 5051, "nodeType": "ParameterList", "parameters": [], "src": "2636:0:40"}, "scope": 5134, "src": "2432:549:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [23129], "body": {"id": 5132, "nodeType": "Block", "src": "3095:195:40", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 5111, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5102, "src": "3137:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5109, "name": "vaultAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4889, "src": "3113:14:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 5110, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "contains", "nodeType": "MemberAccess", "referencedDeclaration": 21670, "src": "3113:23:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$21589_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}}, "id": 5112, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3113:30:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 5113, "name": "Errors", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19425, "src": "3145:6:40", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Errors_$19425_$", "typeString": "type(library Errors)"}}, "id": 5114, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "VAULT_NOT_FOUND", "nodeType": "MemberAccess", "referencedDeclaration": 19307, "src": "3145:22:40", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 5108, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3105:7:40", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5115, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3105:63:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5116, "nodeType": "ExpressionStatement", "src": "3105:63:40"}, {"expression": {"arguments": [{"id": 5120, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5102, "src": "3200:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5117, "name": "vaultAddresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4889, "src": "3178:14:40", "typeDescriptions": {"typeIdentifier": "t_struct$_AddressSet_$21589_storage", "typeString": "struct EnumerableSet.AddressSet storage ref"}}, "id": 5119, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "remove", "nodeType": "MemberAccess", "referencedDeclaration": 21643, "src": "3178:21:40", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$21589_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$21589_storage_ptr_$", "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}}, "id": 5121, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3178:28:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 5122, "nodeType": "ExpressionStatement", "src": "3178:28:40"}, {"expression": {"id": 5126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "3216:28:40", "subExpression": {"baseExpression": {"id": 5123, "name": "vaultsMetadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "3223:14:40", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PersistedVaultMetadata_$19094_storage_$", "typeString": "mapping(address => struct DataTypes.PersistedVaultMetadata storage ref)"}}, "id": 5125, "indexExpression": {"id": 5124, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5102, "src": "3238:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3223:21:40", "typeDescriptions": {"typeIdentifier": "t_struct$_PersistedVaultMetadata_$19094_storage", "typeString": "struct DataTypes.PersistedVaultMetadata storage ref"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5127, "nodeType": "ExpressionStatement", "src": "3216:28:40"}, {"eventCall": {"arguments": [{"id": 5129, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5102, "src": "3277:5:40", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5128, "name": "VaultDeregistered", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23098, "src": "3259:17:40", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 5130, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3259:24:40", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5131, "nodeType": "EmitStatement", "src": "3254:29:40"}]}, "documentation": {"id": 5100, "nodeType": "StructuredDocumentation", "src": "2987:30:40", "text": "@inheritdoc IVaultRegistry"}, "functionSelector": "38e270ed", "id": 5133, "implemented": true, "kind": "function", "modifiers": [{"id": 5106, "kind": "modifierInvocation", "modifierName": {"id": 5105, "name": "governanceOnly", "nodeType": "IdentifierPath", "referencedDeclaration": 5268, "src": "3080:14:40"}, "nodeType": "ModifierInvocation", "src": "3080:14:40"}], "name": "deregisterVault", "nameLocation": "3031:15:40", "nodeType": "FunctionDefinition", "overrides": {"id": 5104, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3071:8:40"}, "parameters": {"id": 5103, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5102, "mutability": "mutable", "name": "vault", "nameLocation": "3055:5:40", "nodeType": "VariableDeclaration", "scope": 5133, "src": "3047:13:40", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5101, "name": "address", "nodeType": "ElementaryTypeName", "src": "3047:7:40", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3046:15:40"}, "returnParameters": {"id": 5107, "nodeType": "ParameterList", "parameters": [], "src": "3095:0:40"}, "scope": 5134, "src": "3022:268:40", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 5135, "src": "522:2770:40", "usedErrors": []}], "src": "174:3119:40"}, "bytecode": "60a060405234801561001057600080fd5b5060405161132638038061132683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516112866100a06000396000818161010b0152818161054601528181610899015261095e01526112866000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806395e5171a1161007157806395e5171a14610155578063c4d66de814610168578063dc4f1e491461017b578063e3056a34146101c1578063e4c0aaf4146101d4578063e7464015146101e757600080fd5b80630c340a24146100b9578063238efcbc146100e957806338e270ed146100f357806344bbdb551461010657806350cc258e1461012d578063753ed47714610142575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101fa565b005b6100f1610101366004610e63565b6102b3565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b6101356103a1565b6040516100e09190610e87565b6100f1610150366004610faa565b6103b2565b6100f1610163366004611090565b610541565b6100f1610176366004610e63565b610676565b61018e610189366004610e63565b610746565b6040516100e091908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b6001546100cc906001600160a01b031681565b6100f16101e2366004610e63565b6107bf565b6100f16101f53660046110bc565b610894565b600154604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102485760405162461bcd60e51b815260040161023f9190611148565b60405180910390fd5b5060008054600180546001600160a01b03198084166001600160a01b03808416919091179095551690556040805192909116808352336020840152917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491015b60405180910390a150565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102f85760405162461bcd60e51b815260040161023f9190611148565b50610304600282610aa4565b604051806040016040528060018152602001603760f81b8152509061033c5760405162461bcd60e51b815260040161023f9190611148565b50610348600282610acb565b506001600160a01b0381166000818152600460205260408082208281556001810183905560028101839055600301829055517ff8769b01493238f5c26a42a7b690cb1ff2b53a7d89d9a57e6332458703db8b049190a250565b60606103ad6002610ae0565b905090565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146103f75760405162461bcd60e51b815260040161023f9190611148565b5060005b835181101561053b576104318482815181106104195761041961119d565b60200260200101516002610aa490919063ffffffff16565b604051806040016040528060018152602001603760f81b815250906104695760405162461bcd60e51b815260040161023f9190611148565b5082818151811061047c5761047c61119d565b60200260200101516004600086848151811061049a5761049a61119d565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600201819055508181815181106104db576104db61119d565b6020026020010151600460008684815181106104f9576104f961119d565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600201819055508080610533906111c9565b9150506103fb565b50505050565b6105737f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b8f565b6001600160a01b0316336001600160a01b0316146040518060400160405280600281526020016106a760f31b815250906105c05760405162461bcd60e51b815260040161023f9190611148565b506105cc600283610aa4565b604051806040016040528060018152602001603760f81b815250906106045760405162461bcd60e51b815260040161023f9190611148565b506001600160a01b0382166000908152600460209081526040918290205482518084019093526002835261333160f01b91830191909152156106595760405162461bcd60e51b815260040161023f9190611148565b506001600160a01b03909116600090815260046020526040902055565b600154600160a81b900460ff16806106985750600154600160a01b900460ff16155b6106fb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161023f565b600154600160a81b900460ff16158015610725576001805461ffff60a01b191661010160a01b1790555b61072e82610c1b565b8015610742576001805460ff60a81b191690555b5050565b6107716040518060800160405280600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260046020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146108045760405162461bcd60e51b815260040161023f9190611148565b50604080518082019091526002815261333160f01b60208201526001600160a01b0382166108455760405162461bcd60e51b815260040161023f9190611148565b50600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f67235ba2e63c748a35b95c4f92a3bbc2a1389938170a5ce6c9add5d0b03a314a906020016102a8565b6108c67f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b8f565b6001600160a01b0316336001600160a01b0316146040518060400160405280600281526020016106a760f31b815250906109135760405162461bcd60e51b815260040161023f9190611148565b5061091f600283610aa4565b15604051806040016040528060018152602001601b60f91b815250906109585760405162461bcd60e51b815260040161023f9190611148565b5061098b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c6f565b60405163240825cb60e01b81526001600160a01b038481166004830152919091169063240825cb90602401602060405180830381865afa1580156109d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f791906111e4565b604051806040016040528060018152602001603760f81b81525090610a2f5760405162461bcd60e51b815260040161023f9190611148565b50610a3b600283610cb4565b506001600160a01b0382166000818152600460209081526040808320855181559185015160018301558085015160028301556060850151600390920191909155517f8e0930709528779f1112249aac8fcca15dbb9c595db31092c7bc7f954b5679339190a25050565b6001600160a01b038116600090815260018301602052604081205415155b90505b92915050565b6000610ac2836001600160a01b038416610cc9565b60606000610aed83610dbc565b905060008167ffffffffffffffff811115610b0a57610b0a610ed4565b604051908082528060200260200182016040528015610b33578160200160208202803683370190505b50905060005b82811015610b8757610b4b8582610dc6565b828281518110610b5d57610b5d61119d565b6001600160a01b039092166020928302919091019091015280610b7f816111c9565b915050610b39565b509392505050565b6040516321f8a72160e01b81527f524553455256455f4d414e414745525f4144445245535300000000000000000060048201526000906001600160a01b038316906321f8a721906024015b602060405180830381865afa158015610bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac59190611206565b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491016102a8565b6040516321f8a72160e01b8152724645455f48414e444c45525f4144445245535360681b60048201526000906001600160a01b038316906321f8a72190602401610bda565b6000610ac2836001600160a01b038416610dd2565b60008181526001830160205260408120548015610db2576000610ced600183611223565b8554909150600090610d0190600190611223565b9050818114610d66576000866000018281548110610d2157610d2161119d565b9060005260206000200154905080876000018481548110610d4457610d4461119d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d7757610d7761123a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610ac5565b6000915050610ac5565b6000610ac5825490565b6000610ac28383610e21565b6000818152600183016020526040812054610e1957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ac5565b506000610ac5565b6000826000018281548110610e3857610e3861119d565b9060005260206000200154905092915050565b6001600160a01b0381168114610e6057600080fd5b50565b600060208284031215610e7557600080fd5b8135610e8081610e4b565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610ec85783516001600160a01b031683529284019291840191600101610ea3565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f1357610f13610ed4565b604052919050565b600067ffffffffffffffff821115610f3557610f35610ed4565b5060051b60200190565b600082601f830112610f5057600080fd5b81356020610f65610f6083610f1b565b610eea565b82815260059290921b84018101918181019086841115610f8457600080fd5b8286015b84811015610f9f5780358352918301918301610f88565b509695505050505050565b600080600060608486031215610fbf57600080fd5b833567ffffffffffffffff80821115610fd757600080fd5b818601915086601f830112610feb57600080fd5b81356020610ffb610f6083610f1b565b82815260059290921b8401810191818101908a84111561101a57600080fd5b948201945b8386101561104157853561103281610e4b565b8252948201949082019061101f565b9750508701359250508082111561105757600080fd5b61106387838801610f3f565b9350604086013591508082111561107957600080fd5b5061108686828701610f3f565b9150509250925092565b600080604083850312156110a357600080fd5b82356110ae81610e4b565b946020939093013593505050565b60008082840360a08112156110d057600080fd5b83356110db81610e4b565b92506080601f19820112156110ef57600080fd5b506040516080810181811067ffffffffffffffff8211171561111357611113610ed4565b806040525060208401358152604084013560208201526060840135604082015260808401356060820152809150509250929050565b600060208083528351808285015260005b8181101561117557858101830151858201604001528201611159565b81811115611187576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156111dd576111dd6111b3565b5060010190565b6000602082840312156111f657600080fd5b81518015158114610e8057600080fd5b60006020828403121561121857600080fd5b8151610e8081610e4b565b600082821015611235576112356111b3565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212208f98655a3cbad2e7ba06a2a7632c1b9c9dc6136baee99e1e91dd527e6551c61264736f6c634300080a0033", "bytecodeSha1": "5b26ce61a0851690c6e69fa58d18c80970129702", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.10+commit.fc410830"}, "contractName": "VaultRegistry", "coverageMap": {"branches": {"100": {}, "103": {}, "104": {}, "105": {}, "106": {}, "107": {}, "108": {}, "125": {}, "13": {"GovernableUpgradeable.initialize": {"62": [1409, 1422, true], "63": [1427, 1439, true]}}, "139": {}, "140": {}, "143": {}, "144": {}, "145": {}, "30": {}, "31": {"EnumerableSet._remove": {"58": [2439, 2454, false], "59": [2921, 2947, false]}}, "40": {"VaultRegistry.deregisterVault": {"51": [3113, 3143, true]}, "VaultRegistry.registerVault": {"55": [1078, 1131, true], "56": [1824, 1855, true], "57": [1903, 1953, true]}, "VaultRegistry.setInitialPrice": {"53": [2222, 2252, true], "54": [2295, 2334, true]}, "VaultRegistry.updatePersistedVaultFlowParams": {"52": [2720, 2762, true]}}, "43": {"GovernableBase.acceptGovernance": {"60": [910, 939, true]}, "GovernableBase.changeGovernor": {"61": [651, 685, true]}}, "44": {}, "94": {}, "95": {}, "96": {}, "97": {}, "98": {}, "99": {}}, "statements": {"100": {}, "103": {}, "104": {}, "105": {}, "106": {}, "107": {}, "108": {}, "125": {}, "13": {}, "139": {"ConfigHelpers.getFeeHandler": {"35": [2518, 2591]}, "ConfigHelpers.getReserveManager": {"32": [1827, 1908]}}, "140": {}, "143": {"EnumerableExtensions.toArray": {"29": [1023, 1050], "30": [1004, 1007], "31": [1070, 1083]}}, "144": {}, "145": {}, "30": {}, "31": {"EnumerableSet._add": {"46": [1751, 1774], "47": [1909, 1949], "48": [1963, 1974], "49": [2005, 2017]}, "EnumerableSet._at": {"50": [4414, 4439]}, "EnumerableSet._contains": {"27": [3760, 3791]}, "EnumerableSet._length": {"44": [3954, 3979]}, "EnumerableSet._remove": {"37": [3109, 3147], "38": [3221, 3257], "39": [3393, 3410], "40": [3478, 3504], "41": [3519, 3530], "42": [3561, 3573]}, "EnumerableSet.add": {"36": [7631, 7688]}, "EnumerableSet.at": {"45": [8896, 8952]}, "EnumerableSet.contains": {"26": [8196, 8258]}, "EnumerableSet.length": {"43": [8428, 8454]}, "EnumerableSet.remove": {"28": [7952, 8012]}}, "40": {"VaultRegistry.deregisterVault": {"4": [3105, 3168], "5": [3178, 3206], "6": [3216, 3244], "7": [3254, 3283]}, "VaultRegistry.getVaultMetadata": {"17": [1568, 1596]}, "VaultRegistry.listVaults": {"8": [1329, 1360]}, "VaultRegistry.registerVault": {"21": [1816, 1885], "22": [1895, 1978], "23": [1988, 2013], "24": [2023, 2064], "25": [2074, 2101]}, "VaultRegistry.setInitialPrice": {"13": [2214, 2277], "14": [2287, 2360], "15": [2370, 2419]}, "VaultRegistry.updatePersistedVaultFlowParams": {"9": [2712, 2787], "10": [2801, 2874], "11": [2888, 2964], "12": [2693, 2696]}}, "43": {"GovernableBase.acceptGovernance": {"0": [902, 963], "1": [1017, 1043], "2": [1053, 1081], "3": [1091, 1140]}, "GovernableBase.changeGovernor": {"18": [643, 711], "19": [721, 750], "20": [760, 801]}}, "44": {"GovernableUpgradeable.__GovernableUpgradeable_initialize": {"33": [500, 520], "34": [530, 573]}, "GovernableUpgradeable.initialize": {"16": [664, 709]}}, "94": {}, "95": {}, "96": {}, "97": {}, "98": {}, "99": {}}}, "dependencies": ["ConfigHelpers", "ConfigKeys", "EnumerableExtensions", "OpenZeppelin/openzeppelin-contracts@4.3.2/EnumerableMap", "EnumerableMapping", "OpenZeppelin/openzeppelin-contracts@4.3.2/EnumerableSet", "Errors", "GovernableBase", "GovernableUpgradeable", "IAssetRegistry", "IBatchVaultPriceOracle", "ICapAuthentication", "IFeeBank", "IFeeHandler", "IGYDToken", "IGovernable", "IGyroConfig", "IMotherboard", "IPAMM", "IReserve", "IReserveManager", "ISafetyCheck", "IVaultRegistry", "OpenZeppelin/openzeppelin-contracts@4.3.2/Initializable"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806395e5171a1161007157806395e5171a14610155578063c4d66de814610168578063dc4f1e491461017b578063e3056a34146101c1578063e4c0aaf4146101d4578063e7464015146101e757600080fd5b80630c340a24146100b9578063238efcbc146100e957806338e270ed146100f357806344bbdb551461010657806350cc258e1461012d578063753ed47714610142575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101fa565b005b6100f1610101366004610e63565b6102b3565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b6101356103a1565b6040516100e09190610e87565b6100f1610150366004610faa565b6103b2565b6100f1610163366004611090565b610541565b6100f1610176366004610e63565b610676565b61018e610189366004610e63565b610746565b6040516100e091908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b6001546100cc906001600160a01b031681565b6100f16101e2366004610e63565b6107bf565b6100f16101f53660046110bc565b610894565b600154604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102485760405162461bcd60e51b815260040161023f9190611148565b60405180910390fd5b5060008054600180546001600160a01b03198084166001600160a01b03808416919091179095551690556040805192909116808352336020840152917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491015b60405180910390a150565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102f85760405162461bcd60e51b815260040161023f9190611148565b50610304600282610aa4565b604051806040016040528060018152602001603760f81b8152509061033c5760405162461bcd60e51b815260040161023f9190611148565b50610348600282610acb565b506001600160a01b0381166000818152600460205260408082208281556001810183905560028101839055600301829055517ff8769b01493238f5c26a42a7b690cb1ff2b53a7d89d9a57e6332458703db8b049190a250565b60606103ad6002610ae0565b905090565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146103f75760405162461bcd60e51b815260040161023f9190611148565b5060005b835181101561053b576104318482815181106104195761041961119d565b60200260200101516002610aa490919063ffffffff16565b604051806040016040528060018152602001603760f81b815250906104695760405162461bcd60e51b815260040161023f9190611148565b5082818151811061047c5761047c61119d565b60200260200101516004600086848151811061049a5761049a61119d565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600201819055508181815181106104db576104db61119d565b6020026020010151600460008684815181106104f9576104f961119d565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600201819055508080610533906111c9565b9150506103fb565b50505050565b6105737f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b8f565b6001600160a01b0316336001600160a01b0316146040518060400160405280600281526020016106a760f31b815250906105c05760405162461bcd60e51b815260040161023f9190611148565b506105cc600283610aa4565b604051806040016040528060018152602001603760f81b815250906106045760405162461bcd60e51b815260040161023f9190611148565b506001600160a01b0382166000908152600460209081526040918290205482518084019093526002835261333160f01b91830191909152156106595760405162461bcd60e51b815260040161023f9190611148565b506001600160a01b03909116600090815260046020526040902055565b600154600160a81b900460ff16806106985750600154600160a01b900460ff16155b6106fb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161023f565b600154600160a81b900460ff16158015610725576001805461ffff60a01b191661010160a01b1790555b61072e82610c1b565b8015610742576001805460ff60a81b191690555b5050565b6107716040518060800160405280600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260046020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146108045760405162461bcd60e51b815260040161023f9190611148565b50604080518082019091526002815261333160f01b60208201526001600160a01b0382166108455760405162461bcd60e51b815260040161023f9190611148565b50600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f67235ba2e63c748a35b95c4f92a3bbc2a1389938170a5ce6c9add5d0b03a314a906020016102a8565b6108c67f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b8f565b6001600160a01b0316336001600160a01b0316146040518060400160405280600281526020016106a760f31b815250906109135760405162461bcd60e51b815260040161023f9190611148565b5061091f600283610aa4565b15604051806040016040528060018152602001601b60f91b815250906109585760405162461bcd60e51b815260040161023f9190611148565b5061098b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c6f565b60405163240825cb60e01b81526001600160a01b038481166004830152919091169063240825cb90602401602060405180830381865afa1580156109d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f791906111e4565b604051806040016040528060018152602001603760f81b81525090610a2f5760405162461bcd60e51b815260040161023f9190611148565b50610a3b600283610cb4565b506001600160a01b0382166000818152600460209081526040808320855181559185015160018301558085015160028301556060850151600390920191909155517f8e0930709528779f1112249aac8fcca15dbb9c595db31092c7bc7f954b5679339190a25050565b6001600160a01b038116600090815260018301602052604081205415155b90505b92915050565b6000610ac2836001600160a01b038416610cc9565b60606000610aed83610dbc565b905060008167ffffffffffffffff811115610b0a57610b0a610ed4565b604051908082528060200260200182016040528015610b33578160200160208202803683370190505b50905060005b82811015610b8757610b4b8582610dc6565b828281518110610b5d57610b5d61119d565b6001600160a01b039092166020928302919091019091015280610b7f816111c9565b915050610b39565b509392505050565b6040516321f8a72160e01b81527f524553455256455f4d414e414745525f4144445245535300000000000000000060048201526000906001600160a01b038316906321f8a721906024015b602060405180830381865afa158015610bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac59190611206565b600080546001600160a01b0319166001600160a01b03831690811782556040805192835260208301919091527fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491016102a8565b6040516321f8a72160e01b8152724645455f48414e444c45525f4144445245535360681b60048201526000906001600160a01b038316906321f8a72190602401610bda565b6000610ac2836001600160a01b038416610dd2565b60008181526001830160205260408120548015610db2576000610ced600183611223565b8554909150600090610d0190600190611223565b9050818114610d66576000866000018281548110610d2157610d2161119d565b9060005260206000200154905080876000018481548110610d4457610d4461119d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d7757610d7761123a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610ac5565b6000915050610ac5565b6000610ac5825490565b6000610ac28383610e21565b6000818152600183016020526040812054610e1957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610ac5565b506000610ac5565b6000826000018281548110610e3857610e3861119d565b9060005260206000200154905092915050565b6001600160a01b0381168114610e6057600080fd5b50565b600060208284031215610e7557600080fd5b8135610e8081610e4b565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610ec85783516001600160a01b031683529284019291840191600101610ea3565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f1357610f13610ed4565b604052919050565b600067ffffffffffffffff821115610f3557610f35610ed4565b5060051b60200190565b600082601f830112610f5057600080fd5b81356020610f65610f6083610f1b565b610eea565b82815260059290921b84018101918181019086841115610f8457600080fd5b8286015b84811015610f9f5780358352918301918301610f88565b509695505050505050565b600080600060608486031215610fbf57600080fd5b833567ffffffffffffffff80821115610fd757600080fd5b818601915086601f830112610feb57600080fd5b81356020610ffb610f6083610f1b565b82815260059290921b8401810191818101908a84111561101a57600080fd5b948201945b8386101561104157853561103281610e4b565b8252948201949082019061101f565b9750508701359250508082111561105757600080fd5b61106387838801610f3f565b9350604086013591508082111561107957600080fd5b5061108686828701610f3f565b9150509250925092565b600080604083850312156110a357600080fd5b82356110ae81610e4b565b946020939093013593505050565b60008082840360a08112156110d057600080fd5b83356110db81610e4b565b92506080601f19820112156110ef57600080fd5b506040516080810181811067ffffffffffffffff8211171561111357611113610ed4565b806040525060208401358152604084013560208201526060840135604082015260808401356060820152809150509250929050565b600060208083528351808285015260005b8181101561117557858101830151858201604001528201611159565b81811115611187576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156111dd576111dd6111b3565b5060010190565b6000602082840312156111f657600080fd5b81518015158114610e8057600080fd5b60006020828403121561121857600080fd5b8151610e8081610e4b565b600082821015611235576112356111b3565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212208f98655a3cbad2e7ba06a2a7632c1b9c9dc6136baee99e1e91dd527e6551c61264736f6c634300080a0033", "deployedSourceMap": "522:2770:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:32:43;;;;;-1:-1:-1;;;;;325:32:43;;;;;;-1:-1:-1;;;;;178:32:156;;;160:51;;148:2;133:18;325:32:43;;;;;;;;846:301;;;:::i;:::-;;3022:268:40;;;;;;:::i;:::-;;:::i;749:39::-;;;;;1247:120;;;:::i;:::-;;;;;;;:::i;2432:549::-;;;;;;:::i;:::-;;:::i;2114:312::-;;;;;;:::i;:::-;;:::i;586:130:44:-;;;;;;:::i;:::-;;:::i;1408:195:40:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;4782:13:156;;4764:32;;4852:4;4840:17;;;4834:24;4812:20;;;4805:54;4915:4;4903:17;;;4897:24;4875:20;;;4868:54;4978:4;4966:17;;;4960:24;4938:20;;;4931:54;;;;4751:3;4736:19;;4535:456;363:39:43;;;;;-1:-1:-1;;;;;363:39:43;;;555:253;;;;;;:::i;:::-;;:::i;1644:464:40:-;;;;;;:::i;:::-;;:::i;846:301:43:-;924:15;;941:21;;;;;;;;;;;;-1:-1:-1;;;941:21:43;;;;;-1:-1:-1;;;;;924:15:43;910:10;:29;902:61;;;;-1:-1:-1;;;902:61:43;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;973:23:43;999:8;;;1028:15;;-1:-1:-1;;;;;;1017:26:43;;;-1:-1:-1;;;;;1028:15:43;;;1017:26;;;;;;;1053:28;;;1096:44;;;999:8;;;;6684:34:156;;;1129:10:43;6749:2:156;6734:18;;6727:43;999:8:43;1096:44;;6619:18:156;1096:44:43;;;;;;;;892:255;846:301::o;3022:268:40:-;467:8:43;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:43;;;;;-1:-1:-1;;;;;467:8:43;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:43;;;;;;;;:::i;:::-;-1:-1:-1;3113:30:40::1;:14;3137:5:::0;3113:23:::1;:30::i;:::-;3145:22;;;;;;;;;;;;;-1:-1:-1::0;;;3145:22:40::1;;::::0;3105:63:::1;;;;;-1:-1:-1::0;;;3105:63:40::1;;;;;;;;:::i;:::-;-1:-1:-1::0;3178:28:40::1;:14;3200:5:::0;3178:21:::1;:28::i;:::-;-1:-1:-1::0;;;;;;3223:21:40;::::1;;::::0;;;:14:::1;:21;::::0;;;;;3216:28;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;;3259:24;::::1;::::0;3223:21;3259:24:::1;3022:268:::0;:::o;1247:120::-;1301:16;1336:24;:14;:22;:24::i;:::-;1329:31;;1247:120;:::o;2432:549::-;467:8:43;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:43;;;;;-1:-1:-1;;;;;467:8:43;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:43;;;;;;;;:::i;:::-;;2651:9:40::1;2646:329;2670:14;:21;2666:1;:25;2646:329;;;2720:42;2744:14;2759:1;2744:17;;;;;;;;:::i;:::-;;;;;;;2720:14;:23;;:42;;;;:::i;:::-;2764:22;;;;;;;;;;;;;-1:-1:-1::0;;;2764:22:40::1;;::::0;2712:75:::1;;;;;-1:-1:-1::0;;;2712:75:40::1;;;;;;;;:::i;:::-;;2853:18;2872:1;2853:21;;;;;;;;:::i;:::-;;;;;;;2801:14;:33;2816:14;2831:1;2816:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;2801:33:40::1;-1:-1:-1::0;;;;;2801:33:40::1;;;;;;;;;;;;:49;;:73;;;;2940:21;2962:1;2940:24;;;;;;;;:::i;:::-;;;;;;;2888:14;:33;2903:14;2918:1;2903:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;2888:33:40::1;-1:-1:-1::0;;;;;2888:33:40::1;;;;;;;;;;;;:49;;:76;;;;2693:3;;;;;:::i;:::-;;;;2646:329;;;;2432:549:::0;;;:::o;2114:312::-;1100:30;:10;-1:-1:-1;;;;;1100:28:40;;:30::i;:::-;-1:-1:-1;;;;;1078:53:40;:10;-1:-1:-1;;;;;1078:53:40;;1145:33;;;;;;;;;;;;;-1:-1:-1;;;1145:33:40;;;1057:131;;;;;-1:-1:-1;;;1057:131:40;;;;;;;;:::i;:::-;-1:-1:-1;2222:30:40::1;:14;2246:5:::0;2222:23:::1;:30::i;:::-;2254:22;;;;;;;;;;;;;-1:-1:-1::0;;;2254:22:40::1;;::::0;2214:63:::1;;;;;-1:-1:-1::0;;;2214:63:40::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;2295:21:40;::::1;;::::0;;;:14:::1;:21;::::0;;;;;;;;:34;2336:23;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2336:23:40;;::::1;::::0;;;;2295:39;2287:73:::1;;;;-1:-1:-1::0;;;2287:73:40::1;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;2370:21:40;;::::1;;::::0;;;:14:::1;:21;::::0;;;;:49;2114:312::o;586:130:44:-;1409:13:13;;-1:-1:-1;;;1409:13:13;;;;;:30;;-1:-1:-1;1427:12:13;;-1:-1:-1;;;1427:12:13;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:13;;7387:2:156;1401:89:13;;;7369:21:156;7426:2;7406:18;;;7399:30;7465:34;7445:18;;;7438:62;-1:-1:-1;;;7516:18:156;;;7509:44;7570:19;;1401:89:13;7185:410:156;1401:89:13;1524:13;;-1:-1:-1;;;1524:13:13;;;;1523:14;1547:98;;;;1597:4;1581:20;;-1:-1:-1;;;;1615:19:13;-1:-1:-1;;;1615:19:13;;;1547:98;664:45:44::1;699:9;664:34;:45::i;:::-;1671:14:13::0;1667:66;;;1701:13;:21;;-1:-1:-1;;;;1701:21:13;;;1667:66;1391:348;586:130:44;:::o;1408:195:40:-;1513:39;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:39:40;-1:-1:-1;;;;;;1575:21:40;;;;;:14;:21;;;;;;;;;1568:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1408:195::o;555:253:43:-;467:8;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:43;;;;;-1:-1:-1;;;;;467:8:43;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:43;;;;;;;;:::i;:::-;-1:-1:-1;687:23:43::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;687:23:43::1;::::0;::::1;::::0;-1:-1:-1;;;;;651:34:43;::::1;643:68;;;;-1:-1:-1::0;;;643:68:43::1;;;;;;;;:::i;:::-;-1:-1:-1::0;721:15:43::1;:29:::0;;-1:-1:-1;;;;;;721:29:43::1;-1:-1:-1::0;;;;;721:29:43;::::1;::::0;;::::1;::::0;;;765:36:::1;::::0;160:51:156;;;765:36:43::1;::::0;148:2:156;133:18;765:36:43::1;14:203:156::0;1644:464:40;1100:30;:10;-1:-1:-1;;;;;1100:28:40;;:30::i;:::-;-1:-1:-1;;;;;1078:53:40;:10;-1:-1:-1;;;;;1078:53:40;;1145:33;;;;;;;;;;;;;-1:-1:-1;;;1145:33:40;;;1057:131;;;;;-1:-1:-1;;;1057:131:40;;;;;;;;:::i;:::-;-1:-1:-1;1825:30:40::1;:14;1849:5:::0;1825:23:::1;:30::i;:::-;1824:31;1857:27;;;;;;;;;;;;;-1:-1:-1::0;;;1857:27:40::1;;::::0;1816:69:::1;;;;;-1:-1:-1::0;;;1816:69:40::1;;;;;;;;:::i;:::-;;1903:26;:10;-1:-1:-1::0;;;;;1903:24:40::1;;:26::i;:::-;:50;::::0;-1:-1:-1;;;1903:50:40;;-1:-1:-1;;;;;178:32:156;;;1903:50:40::1;::::0;::::1;160:51:156::0;1903:43:40;;;::::1;::::0;::::1;::::0;133:18:156;;1903:50:40::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1955:22;;;;;;;;;;;;;-1:-1:-1::0;;;1955:22:40::1;;::::0;1895:83:::1;;;;;-1:-1:-1::0;;;1895:83:40::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1988:25:40::1;:14;2007:5:::0;1988:18:::1;:25::i;:::-;-1:-1:-1::0;;;;;;2023:21:40;::::1;;::::0;;;:14:::1;:21;::::0;;;;;;;:41;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;2079:22;::::1;::::0;2023:21;2079:22:::1;1644:464:::0;;:::o;8100:165:31:-;-1:-1:-1;;;;;8233:23:31;;8180:4;3767:19;;;:12;;;:19;;;;;;:24;;8203:55;8196:62;;8100:165;;;;;:::o;7863:156::-;7936:4;7959:53;7967:3;-1:-1:-1;;;;;7987:23:31;;7959:7;:53::i;739:351:143:-;847:16;879:11;893:18;:9;:16;:18::i;:::-;879:32;;921:23;961:3;947:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:18:143;;921:44;;980:9;975:86;999:3;995:1;:7;975:86;;;1035:15;:9;1048:1;1035:12;:15::i;:::-;1023:6;1030:1;1023:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1023:27:143;;;:9;;;;;;;;;;;:27;1004:3;;;;:::i;:::-;;;;975:86;;;-1:-1:-1;1077:6:143;739:351;-1:-1:-1;;;739:351:143:o;1726:189:139:-;1850:57;;-1:-1:-1;;;1850:57:139;;1872:34;1850:57;;;8028:25:156;1800:15:139;;-1:-1:-1;;;;;1850:21:139;;;;;8001:18:156;;1850:57:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;418:162:44:-;500:8;:20;;-1:-1:-1;;;;;;500:20:44;-1:-1:-1;;;;;500:20:44;;;;;;;535:38;;;6684:34:156;;;6749:2;6734:18;;6727:43;;;;535:38:44;;6619:18:156;535:38:44;6472:304:156;2425:173:139;2537:53;;-1:-1:-1;;;2537:53:139;;-1:-1:-1;;;2537:53:139;;;8028:25:156;2495:11:139;;-1:-1:-1;;;;;2537:21:139;;;;;8001:18:156;;2537:53:139;7882:177:156;7545:150:31;7615:4;7638:50;7643:3;-1:-1:-1;;;;;7663:23:31;;7638:4;:50::i;2202:1388::-;2268:4;2405:19;;;:12;;;:19;;;;;;2439:15;;2435:1149;;2808:21;2832:14;2845:1;2832:10;:14;:::i;:::-;2880:18;;2808:38;;-1:-1:-1;2860:17:31;;2880:22;;2901:1;;2880:22;:::i;:::-;2860:42;;2934:13;2921:9;:26;2917:398;;2967:17;2987:3;:11;;2999:9;2987:22;;;;;;;;:::i;:::-;;;;;;;;;2967:42;;3138:9;3109:3;:11;;3121:13;3109:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3221:23;;;:12;;;:23;;;;;:36;;;2917:398;3393:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3485:3;:12;;:19;3498:5;3485:19;;;;;;;;;;;3478:26;;;3526:4;3519:11;;;;;;;2435:1149;3568:5;3561:12;;;;;8346:115;8409:7;8435:19;8443:3;3961:18;;3879:107;8803:156;8877:7;8927:22;8931:3;8943:5;8927:3;:22::i;1630:404::-;1693:4;3767:19;;;:12;;;:19;;;;;;1709:319;;-1:-1:-1;1751:23:31;;;;;;;;:11;:23;;;;;;;;;;;;;1931:18;;1909:19;;;:12;;;:19;;;;;;:40;;;;1963:11;;1709:319;-1:-1:-1;2012:5:31;2005:12;;4328:118;4395:7;4421:3;:11;;4433:5;4421:18;;;;;;;;:::i;:::-;;;;;;;;;4414:25;;4328:118;;;;:::o;222:131:156:-;-1:-1:-1;;;;;297:31:156;;287:42;;277:70;;343:1;340;333:12;277:70;222:131;:::o;358:247::-;417:6;470:2;458:9;449:7;445:23;441:32;438:52;;;486:1;483;476:12;438:52;525:9;512:23;544:31;569:5;544:31;:::i;:::-;594:5;358:247;-1:-1:-1;;;358:247:156:o;839:658::-;1010:2;1062:21;;;1132:13;;1035:18;;;1154:22;;;981:4;;1010:2;1233:15;;;;1207:2;1192:18;;;981:4;1276:195;1290:6;1287:1;1284:13;1276:195;;;1355:13;;-1:-1:-1;;;;;1351:39:156;1339:52;;1446:15;;;;1411:12;;;;1387:1;1305:9;1276:195;;;-1:-1:-1;1488:3:156;;839:658;-1:-1:-1;;;;;;839:658:156:o;1502:127::-;1563:10;1558:3;1554:20;1551:1;1544:31;1594:4;1591:1;1584:15;1618:4;1615:1;1608:15;1634:275;1705:2;1699:9;1770:2;1751:13;;-1:-1:-1;;1747:27:156;1735:40;;1805:18;1790:34;;1826:22;;;1787:62;1784:88;;;1852:18;;:::i;:::-;1888:2;1881:22;1634:275;;-1:-1:-1;1634:275:156:o;1914:183::-;1974:4;2007:18;1999:6;1996:30;1993:56;;;2029:18;;:::i;:::-;-1:-1:-1;2074:1:156;2070:14;2086:4;2066:25;;1914:183::o;2102:662::-;2156:5;2209:3;2202:4;2194:6;2190:17;2186:27;2176:55;;2227:1;2224;2217:12;2176:55;2263:6;2250:20;2289:4;2313:60;2329:43;2369:2;2329:43;:::i;:::-;2313:60;:::i;:::-;2407:15;;;2493:1;2489:10;;;;2477:23;;2473:32;;;2438:12;;;;2517:15;;;2514:35;;;2545:1;2542;2535:12;2514:35;2581:2;2573:6;2569:15;2593:142;2609:6;2604:3;2601:15;2593:142;;;2675:17;;2663:30;;2713:12;;;;2626;;2593:142;;;-1:-1:-1;2753:5:156;2102:662;-1:-1:-1;;;;;;2102:662:156:o;2769:1441::-;2921:6;2929;2937;2990:2;2978:9;2969:7;2965:23;2961:32;2958:52;;;3006:1;3003;2996:12;2958:52;3046:9;3033:23;3075:18;3116:2;3108:6;3105:14;3102:34;;;3132:1;3129;3122:12;3102:34;3170:6;3159:9;3155:22;3145:32;;3215:7;3208:4;3204:2;3200:13;3196:27;3186:55;;3237:1;3234;3227:12;3186:55;3273:2;3260:16;3295:4;3319:60;3335:43;3375:2;3335:43;:::i;3319:60::-;3413:15;;;3495:1;3491:10;;;;3483:19;;3479:28;;;3444:12;;;;3519:19;;;3516:39;;;3551:1;3548;3541:12;3516:39;3575:11;;;;3595:217;3611:6;3606:3;3603:15;3595:217;;;3691:3;3678:17;3708:31;3733:5;3708:31;:::i;:::-;3752:18;;3628:12;;;;3790;;;;3595:217;;;3831:5;-1:-1:-1;;3874:18:156;;3861:32;;-1:-1:-1;;3905:16:156;;;3902:36;;;3934:1;3931;3924:12;3902:36;3957:63;4012:7;4001:8;3990:9;3986:24;3957:63;:::i;:::-;3947:73;;4073:2;4062:9;4058:18;4045:32;4029:48;;4102:2;4092:8;4089:16;4086:36;;;4118:1;4115;4108:12;4086:36;;4141:63;4196:7;4185:8;4174:9;4170:24;4141:63;:::i;:::-;4131:73;;;2769:1441;;;;;:::o;4215:315::-;4283:6;4291;4344:2;4332:9;4323:7;4319:23;4315:32;4312:52;;;4360:1;4357;4350:12;4312:52;4399:9;4386:23;4418:31;4443:5;4418:31;:::i;:::-;4468:5;4520:2;4505:18;;;;4492:32;;-1:-1:-1;;;4215:315:156:o;4996:869::-;5105:6;5113;5157:9;5148:7;5144:23;5187:3;5183:2;5179:12;5176:32;;;5204:1;5201;5194:12;5176:32;5243:9;5230:23;5262:31;5287:5;5262:31;:::i;:::-;5312:5;-1:-1:-1;5351:4:156;-1:-1:-1;;5333:16:156;;5329:27;5326:47;;;5369:1;5366;5359:12;5326:47;;5402:2;5396:9;5444:4;5436:6;5432:17;5515:6;5503:10;5500:22;5479:18;5467:10;5464:34;5461:62;5458:88;;;5526:18;;:::i;:::-;5566:10;5562:2;5555:22;;5629:2;5618:9;5614:18;5601:32;5593:6;5586:48;5695:2;5684:9;5680:18;5667:32;5662:2;5654:6;5650:15;5643:57;5761:2;5750:9;5746:18;5733:32;5728:2;5720:6;5716:15;5709:57;5827:4;5816:9;5812:20;5799:34;5794:2;5786:6;5782:15;5775:59;5853:6;5843:16;;;4996:869;;;;;:::o;5870:597::-;5982:4;6011:2;6040;6029:9;6022:21;6072:6;6066:13;6115:6;6110:2;6099:9;6095:18;6088:34;6140:1;6150:140;6164:6;6161:1;6158:13;6150:140;;;6259:14;;;6255:23;;6249:30;6225:17;;;6244:2;6221:26;6214:66;6179:10;;6150:140;;;6308:6;6305:1;6302:13;6299:91;;;6378:1;6373:2;6364:6;6353:9;6349:22;6345:31;6338:42;6299:91;-1:-1:-1;6451:2:156;6430:15;-1:-1:-1;;6426:29:156;6411:45;;;;6458:2;6407:54;;5870:597;-1:-1:-1;;;5870:597:156:o;6781:127::-;6842:10;6837:3;6833:20;6830:1;6823:31;6873:4;6870:1;6863:15;6897:4;6894:1;6887:15;6913:127;6974:10;6969:3;6965:20;6962:1;6955:31;7005:4;7002:1;6995:15;7029:4;7026:1;7019:15;7045:135;7084:3;-1:-1:-1;;7105:17:156;;7102:43;;;7125:18;;:::i;:::-;-1:-1:-1;7172:1:156;7161:13;;7045:135::o;7600:277::-;7667:6;7720:2;7708:9;7699:7;7695:23;7691:32;7688:52;;;7736:1;7733;7726:12;7688:52;7768:9;7762:16;7821:5;7814:13;7807:21;7800:5;7797:32;7787:60;;7843:1;7840;7833:12;8064:251;8134:6;8187:2;8175:9;8166:7;8162:23;8158:32;8155:52;;;8203:1;8200;8193:12;8155:52;8235:9;8229:16;8254:31;8279:5;8254:31;:::i;8320:125::-;8360:4;8388:1;8385;8382:8;8379:34;;;8393:18;;:::i;:::-;-1:-1:-1;8430:9:156;;8320:125::o;8450:127::-;8511:10;8506:3;8502:20;8499:1;8492:31;8542:4;8539:1;8532:15;8566:4;8563:1;8556:15", "language": "Solidity", "natspec": {"events": {"GovernorChangeRequested(address)": {"notice": "Emmited when the governor is change is requested"}, "GovernorChanged(address,address)": {"notice": "Emmited when the governor is changed"}}, "kind": "dev", "methods": {"acceptGovernance()": {"notice": "Called by the pending governor to approve the change"}, "changeGovernor(address)": {"notice": "Changes the governor can only be called by the current governor"}, "deregisterVault(address)": {"notice": "Deregister a vault"}, "getVaultMetadata(address)": {"notice": "Returns the metadata for the given vault"}, "governor()": {"notice": "Returns the current governor"}, "listVaults()": {"notice": "Get the list of all vaults"}, "pendingGovernor()": {"notice": "Returns the pending governor"}, "registerVault(address,(uint256,uint256,uint256,uint256))": {"notice": "Registers a new vault"}, "setInitialPrice(address,uint256)": {"notice": "sets the initial price of a vault"}}, "version": 1}, "offset": [522, 3292], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95E5171A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95E5171A EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xDC4F1E49 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xE3056A34 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xE4C0AAF4 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xE7464015 EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x38E270ED EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x44BBDB55 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x50CC258E EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x753ED477 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x1FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0xCC PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x541 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x894 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP6 SSTORE AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP2 AND DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE SWAP2 PUSH32 0xDE4B3F61490B74C0ED6237523974FE299126BBBF8A8A7482FD220104C59B0C84 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH2 0x304 PUSH1 0x2 DUP3 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x37 PUSH1 0xF8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH2 0x348 PUSH1 0x2 DUP3 PUSH2 0xACB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 ADD DUP3 SWAP1 SSTORE MLOAD PUSH32 0xF8769B01493238F5C26A42A7B690CB1FF2B53A7D89D9A57E6332458703DB8B04 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AD PUSH1 0x2 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x53B JUMPI PUSH2 0x431 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x419 JUMPI PUSH2 0x419 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH2 0xAA4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x37 PUSH1 0xF8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x47C JUMPI PUSH2 0x47C PUSH2 0x119D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x49A PUSH2 0x119D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4DB JUMPI PUSH2 0x4DB PUSH2 0x119D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4F9 JUMPI PUSH2 0x4F9 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x533 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x573 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A7 PUSH1 0xF3 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x5C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH2 0x5CC PUSH1 0x2 DUP4 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x37 PUSH1 0xF8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x698 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x725 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH2 0x101 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMPDEST PUSH2 0x72E DUP3 PUSH2 0xC1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x771 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x333 PUSH1 0xF4 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x3331 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x67235BA2E63C748A35B95C4F92A3BBC2A1389938170A5CE6C9ADD5D0B03A314A SWAP1 PUSH1 0x20 ADD PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x8C6 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A7 PUSH1 0xF3 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH2 0x91F PUSH1 0x2 DUP4 PUSH2 0xAA4 JUMP JUMPDEST ISZERO PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1B PUSH1 0xF9 SHL DUP2 MSTORE POP SWAP1 PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH2 0x98B PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x240825CB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x240825CB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x37 PUSH1 0xF8 SHL DUP2 MSTORE POP SWAP1 PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH2 0xA3B PUSH1 0x2 DUP4 PUSH2 0xCB4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP2 DUP6 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x8E0930709528779F1112249AAC8FCCA15DBB9C595DB31092C7BC7F954B567933 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAED DUP4 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0A JUMPI PUSH2 0xB0A PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB33 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB87 JUMPI PUSH2 0xB4B DUP6 DUP3 PUSH2 0xDC6 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB5D JUMPI PUSH2 0xB5D PUSH2 0x119D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xB7F DUP2 PUSH2 0x11C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB39 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x524553455256455F4D414E414745525F41444452455353000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xDE4B3F61490B74C0ED6237523974FE299126BBBF8A8A7482FD220104C59B0C84 SWAP2 ADD PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21F8A721 PUSH1 0xE0 SHL DUP2 MSTORE PUSH19 0x4645455F48414E444C45525F41444452455353 PUSH1 0x68 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x21F8A721 SWAP1 PUSH1 0x24 ADD PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 PUSH2 0xCED PUSH1 0x1 DUP4 PUSH2 0x1223 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xD01 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1223 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0xD66 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD21 JUMPI PUSH2 0xD21 PUSH2 0x119D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xD44 JUMPI PUSH2 0xD44 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0xD77 JUMPI PUSH2 0xD77 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC5 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 DUP4 DUP4 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xE19 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xAC5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE38 JUMPI PUSH2 0xE38 PUSH2 0x119D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE80 DUP2 PUSH2 0xE4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEC8 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xEA3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF13 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF35 JUMPI PUSH2 0xF35 PUSH2 0xED4 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF65 PUSH2 0xF60 DUP4 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xF84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xF9F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xF88 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xFD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xFFB PUSH2 0xF60 DUP4 PUSH2 0xF1B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x101A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1041 JUMPI DUP6 CALLDATALOAD PUSH2 0x1032 DUP2 PUSH2 0xE4B JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x101F JUMP JUMPDEST SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1063 DUP8 DUP4 DUP9 ADD PUSH2 0xF3F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1086 DUP7 DUP3 DUP8 ADD PUSH2 0xF3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x10AE DUP2 PUSH2 0xE4B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB PUSH1 0xA0 DUP2 SLT ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x10DB DUP2 PUSH2 0xE4B JUMP JUMPDEST SWAP3 POP PUSH1 0x80 PUSH1 0x1F NOT DUP3 ADD SLT ISZERO PUSH2 0x10EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1113 JUMPI PUSH2 0x1113 PUSH2 0xED4 JUMP JUMPDEST DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP5 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1175 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1159 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1187 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x11DD JUMPI PUSH2 0x11DD PUSH2 0x11B3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE80 DUP2 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1235 JUMPI PUSH2 0x1235 PUSH2 0x11B3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SWAP9 PUSH6 0x5A3CBAD2E7BA MOD LOG2 0xA7 PUSH4 0x2C1B9C9D 0xC6 SGT PUSH12 0xAEE99E1E91DD527E6551C612 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ", "sha1": "7d5f6393c49a8c7f357e1e95543efebd5bdd97c1", "source": "// SPDX-License-Identifier: LicenseRef-Gyro-1.0\n// for information on licensing please see the README in the GitHub repository <https://github.com/gyrostable/core-protocol>.\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./auth/GovernableUpgradeable.sol\";\n\nimport \"../libraries/ConfigKeys.sol\";\nimport \"../libraries/ConfigHelpers.sol\";\nimport \"../libraries/EnumerableExtensions.sol\";\n\nimport \"../interfaces/IVaultRegistry.sol\";\nimport \"../interfaces/IGyroConfig.sol\";\n\ncontract VaultRegistry is IVaultRegistry, GovernableUpgradeable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableExtensions for EnumerableSet.AddressSet;\n    using ConfigHelpers for IGyroConfig;\n\n    IGyroConfig public immutable gyroConfig;\n\n    EnumerableSet.AddressSet internal vaultAddresses;\n\n    mapping(address => DataTypes.PersistedVaultMetadata) internal vaultsMetadata;\n\n    constructor(IGyroConfig _gyroConfig) {\n        gyroConfig = _gyroConfig;\n    }\n\n    modifier reserveManagerOnly() {\n        require(\n            msg.sender == address(gyroConfig.getReserveManager()),\n            Errors.CALLER_NOT_RESERVE_MANAGER\n        );\n        _;\n    }\n\n    /// @inheritdoc IVaultRegistry\n    function listVaults() external view override returns (address[] memory) {\n        return vaultAddresses.toArray();\n    }\n\n    /// @inheritdoc IVaultRegistry\n    function getVaultMetadata(address vault)\n        external\n        view\n        override\n        returns (DataTypes.PersistedVaultMetadata memory)\n    {\n        return vaultsMetadata[vault];\n    }\n\n    /// @inheritdoc IVaultRegistry\n    function registerVault(address vault, DataTypes.PersistedVaultMetadata memory persistedMetadata)\n        external\n        override\n        reserveManagerOnly\n    {\n        require(!vaultAddresses.contains(vault), Errors.VAULT_ALREADY_EXISTS);\n        require(gyroConfig.getFeeHandler().isVaultSupported(vault), Errors.VAULT_NOT_FOUND);\n        vaultAddresses.add(vault);\n        vaultsMetadata[vault] = persistedMetadata;\n        emit VaultRegistered(vault);\n    }\n\n    function setInitialPrice(address vault, uint256 initialPrice) external reserveManagerOnly {\n        require(vaultAddresses.contains(vault), Errors.VAULT_NOT_FOUND);\n        require(vaultsMetadata[vault].initialPrice == 0, Errors.INVALID_ARGUMENT);\n        vaultsMetadata[vault].initialPrice = initialPrice;\n    }\n\n    function updatePersistedVaultFlowParams(\n        address[] memory vaultsToUpdate,\n        uint256[] memory newShortFlowMemory,\n        uint256[] memory newShortFlowThreshold\n    ) external governanceOnly {\n        for (uint256 i = 0; i < vaultsToUpdate.length; i++) {\n            require(vaultAddresses.contains(vaultsToUpdate[i]), Errors.VAULT_NOT_FOUND);\n            vaultsMetadata[vaultsToUpdate[i]].shortFlowMemory = newShortFlowMemory[i];\n            vaultsMetadata[vaultsToUpdate[i]].shortFlowMemory = newShortFlowThreshold[i];\n        }\n    }\n\n    /// @inheritdoc IVaultRegistry\n    function deregisterVault(address vault) external override governanceOnly {\n        require(vaultAddresses.contains(vault), Errors.VAULT_NOT_FOUND);\n        vaultAddresses.remove(vault);\n        delete vaultsMetadata[vault];\n        emit VaultDeregistered(vault);\n    }\n}\n", "sourceMap": "522:2770:40:-:0;;;933:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;980:24:40;;;522:2770;;14:311:156;105:6;158:2;146:9;137:7;133:23;129:32;126:52;;;174:1;171;164:12;126:52;200:16;;-1:-1:-1;;;;;245:31:156;;235:42;;225:70;;291:1;288;281:12;225:70;314:5;14:311;-1:-1:-1;;;14:311:156:o;:::-;522:2770:40;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/VaultRegistry.sol", "type": "contract", "deployment": {"address": "0x71F1C9526153eCE06aE779410dc9b60a556956Ab", "chainid": "137", "blockHeight": 36343446}}