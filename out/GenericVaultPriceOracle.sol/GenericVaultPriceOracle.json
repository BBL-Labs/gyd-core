{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IGyroVault",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isStable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataTypes.PricedToken[]",
          "name": "underlyingPricedTokens",
          "type": "tuple[]"
        }
      ],
      "name": "getPoolTokenPriceUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IGyroVault",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isStable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataTypes.PricedToken[]",
          "name": "underlyingPricedTokens",
          "type": "tuple[]"
        }
      ],
      "name": "getPriceUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610376806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b141266e1461003b578063b7bb2fe014610060575b600080fd5b61004e6100493660046101c9565b610073565b60405190815260200160405180910390f35b61004e61006e3660046101c9565b61009d565b600081600081518110610088576100886102ca565b60200260200101516040015190505b92915050565b6000806100aa8484610073565b9050610118846001600160a01b0316633ba0b9a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011191906102e0565b8290610120565b949350505050565b60008061012d83856102f9565b9050610118670de0b6b3a76400008261031e565b6001600160a01b038116811461015657600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561019257610192610159565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156101c1576101c1610159565b604052919050565b60008060408084860312156101dd57600080fd5b83356101e881610141565b925060208481013567ffffffffffffffff8082111561020657600080fd5b818701915087601f83011261021a57600080fd5b81358181111561022c5761022c610159565b61023a848260051b01610198565b8181528481019250606091820284018501918a83111561025957600080fd5b938501935b828510156102b95780858c0312156102765760008081fd5b61027e61016f565b853561028981610141565b815285870135801515811461029e5760008081fd5b8188015285880135888201528452938401939285019261025e565b508096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156102f257600080fd5b5051919050565b808202811582820484141761009757634e487b7160e01b600052601160045260246000fd5b60008261033b57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220850db54c2848cc1c30852a4163084be4e74e3c72ccd0461db3f824a1d64d726664736f6c63430008110033",
    "sourceMap": "237:331:23:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063b141266e1461003b578063b7bb2fe014610060575b600080fd5b61004e6100493660046101c9565b610073565b60405190815260200160405180910390f35b61004e61006e3660046101c9565b61009d565b600081600081518110610088576100886102ca565b60200260200101516040015190505b92915050565b6000806100aa8484610073565b9050610118846001600160a01b0316633ba0b9a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011191906102e0565b8290610120565b949350505050565b60008061012d83856102f9565b9050610118670de0b6b3a76400008261031e565b6001600160a01b038116811461015657600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561019257610192610159565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156101c1576101c1610159565b604052919050565b60008060408084860312156101dd57600080fd5b83356101e881610141565b925060208481013567ffffffffffffffff8082111561020657600080fd5b818701915087601f83011261021a57600080fd5b81358181111561022c5761022c610159565b61023a848260051b01610198565b8181528481019250606091820284018501918a83111561025957600080fd5b938501935b828510156102b95780858c0312156102765760008081fd5b61027e61016f565b853561028981610141565b815285870135801515811461029e5760008081fd5b8188015285880135888201528452938401939285019261025e565b508096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156102f257600080fd5b5051919050565b808202811582820484141761009757634e487b7160e01b600052601160045260246000fd5b60008261033b57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220850db54c2848cc1c30852a4163084be4e74e3c72ccd0461db3f824a1d64d726664736f6c63430008110033",
    "sourceMap": "237:331:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;341:225;;;;;;:::i;:::-;;:::i;:::-;;;2777:25:168;;;2765:2;2750:18;341:225:23;;;;;;;438:314:18;;;;;;:::i;:::-;;:::i;341:225:23:-;502:7;528:22;551:1;528:25;;;;;;;;:::i;:::-;;;;;;;:31;;;521:38;;341:225;;;;;:::o;438:314:18:-;579:7;602:25;630:51;651:5;658:22;630:20;:51::i;:::-;602:79;;698:47;724:5;-1:-1:-1;;;;;724:18:18;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;698:17;;:25;:47::i;:::-;691:54;438:314;-1:-1:-1;;;;438:314:18:o;750:142:159:-;812:7;;849:5;853:1;849;:5;:::i;:::-;831:23;-1:-1:-1;872:13:159;364:4;831:23;872:13;:::i;14:143:168:-;-1:-1:-1;;;;;101:31:168;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:127::-;223:10;218:3;214:20;211:1;204:31;254:4;251:1;244:15;278:4;275:1;268:15;294:252;365:2;359:9;407:4;395:17;;442:18;427:34;;463:22;;;424:62;421:88;;;489:18;;:::i;:::-;525:2;518:22;294:252;:::o;551:275::-;622:2;616:9;687:2;668:13;;-1:-1:-1;;664:27:168;652:40;;722:18;707:34;;743:22;;;704:62;701:88;;;769:18;;:::i;:::-;805:2;798:22;551:275;;-1:-1:-1;551:275:168:o;831:1795::-;974:6;982;1013:2;1056;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1111:9;1098:23;1130:43;1167:5;1130:43;:::i;:::-;1192:5;-1:-1:-1;1216:2:168;1254:18;;;1241:32;1292:18;1322:14;;;1319:34;;;1349:1;1346;1339:12;1319:34;1387:6;1376:9;1372:22;1362:32;;1432:7;1425:4;1421:2;1417:13;1413:27;1403:55;;1454:1;1451;1444:12;1403:55;1490:2;1477:16;1512:2;1508;1505:10;1502:36;;;1518:18;;:::i;:::-;1558:36;1590:2;1585;1582:1;1578:10;1574:19;1558:36;:::i;:::-;1628:15;;;1659:12;;;;-1:-1:-1;1690:4:168;1729:11;;;1721:20;;1717:29;;;1758:19;;;1755:39;;;1790:1;1787;1780:12;1755:39;1814:11;;;;1834:762;1850:6;1845:3;1842:15;1834:762;;;1930:2;1924:3;1915:7;1911:17;1907:26;1904:116;;;1974:1;2003:2;1999;1992:14;1904:116;2048:21;;:::i;:::-;2110:3;2097:17;2127:45;2164:7;2127:45;:::i;:::-;2185:24;;2250:12;;;2237:26;2305:15;;2298:23;2286:36;;2276:134;;2364:1;2393:2;2389;2382:14;2276:134;2430:16;;;2423:33;2507:12;;;2494:26;2476:16;;;2469:52;2534:20;;1867:12;;;;2574;;;;1834:762;;;1838:3;2615:5;2605:15;;;;;;;;831:1795;;;;;:::o;2813:127::-;2874:10;2869:3;2865:20;2862:1;2855:31;2905:4;2902:1;2895:15;2929:4;2926:1;2919:15;2945:184;3015:6;3068:2;3056:9;3047:7;3043:23;3039:32;3036:52;;;3084:1;3081;3074:12;3036:52;-1:-1:-1;3107:16:168;;2945:184;-1:-1:-1;2945:184:168:o;3134:265::-;3207:9;;;3238;;3255:15;;;3249:22;;3235:37;3225:168;;3315:10;3310:3;3306:20;3303:1;3296:31;3350:4;3347:1;3340:15;3378:4;3375:1;3368:15;3404:217;3444:1;3470;3460:132;;3514:10;3509:3;3505:20;3502:1;3495:31;3549:4;3546:1;3539:15;3577:4;3574:1;3567:15;3460:132;-1:-1:-1;3606:9:168;;3404:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getPoolTokenPriceUSD(address,(address,bool,uint256)[])": "b141266e",
    "getPriceUSD(address,(address,bool,uint256)[])": "b7bb2fe0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IGyroVault\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"underlyingPricedTokens\",\"type\":\"tuple[]\"}],\"name\":\"getPoolTokenPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGyroVault\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"underlyingPricedTokens\",\"type\":\"tuple[]\"}],\"name\":\"getPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceUSD(address,(address,bool,uint256)[])\":{\"params\":{\"vault\":\"the vault of which the price is to be quoted\"},\"returns\":{\"_0\":\"the USD price of the vault token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPoolTokenPriceUSD(address,(address,bool,uint256)[])\":{\"notice\":\"returns the price of the underlying pool token (e.g. BPT token) rather than the price of the vault token itself\"},\"getPriceUSD(address,(address,bool,uint256)[])\":{\"notice\":\"Quotes the USD price of `vault` tokens The quoted price is always scaled with 18 decimals regardless of the source used for the oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/GenericVaultPriceOracle.sol\":\"GenericVaultPriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/oracles/BaseVaultPriceOracle.sol\":{\"keccak256\":\"0x0363ece7cc538851f0ce2501f66e5855c942522bcfe25feeef8b4eed8b541390\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://30fe611893a1bd8a19afb66b27cee359d190f2cb6c932fd75fb43436a503da87\",\"dweb:/ipfs/QmWm8de1mYfnqsYuyS5A6xbfg3fBLGj8gp85u5tsPgcx9m\"]},\"contracts/oracles/GenericVaultPriceOracle.sol\":{\"keccak256\":\"0xab90770e2766d36436e906c0eb06f6818ab167b5bb12e514eed9b52bb6f24ffb\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://1eb84526d79c8ec223fbf27fbc526117dffb6d109fd658e22b271a188d1676dc\",\"dweb:/ipfs/QmU58VWHo3MLpdsmpPeyzhTs7ED24naYSMezRbhspzvVoe\"]},\"interfaces/IGyroVault.sol\":{\"keccak256\":\"0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4\",\"dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL\"]},\"interfaces/oracles/IVaultPriceOracle.sol\":{\"keccak256\":\"0x30e382fee81585687181890ea2c2e420dbaaf098ecbe407f84e528ef837ef5f9\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://b8112141542ddab4cfa8904d9cbeed1a4f2cc249f038ccdcbabb094e75e66ee0\",\"dweb:/ipfs/QmWh2MXTL3zpB7mJ3dPeTzXmwX6ePnqnudrmJkVvwwPjjc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494\",\"dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC\"]},\"libraries/Errors.sol\":{\"keccak256\":\"0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55\",\"dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC\"]},\"libraries/FixedPoint.sol\":{\"keccak256\":\"0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235\",\"dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz\"]},\"libraries/LogExpMath.sol\":{\"keccak256\":\"0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4\",\"dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm\"]},\"libraries/Vaults.sol\":{\"keccak256\":\"0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b\",\"dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IGyroVault",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct DataTypes.PricedToken[]",
              "name": "underlyingPricedTokens",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isStable",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getPoolTokenPriceUSD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IGyroVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct DataTypes.PricedToken[]",
              "name": "underlyingPricedTokens",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isStable",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriceUSD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getPriceUSD(address,(address,bool,uint256)[])": {
            "params": {
              "vault": "the vault of which the price is to be quoted"
            },
            "returns": {
              "_0": "the USD price of the vault token"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getPoolTokenPriceUSD(address,(address,bool,uint256)[])": {
            "notice": "returns the price of the underlying pool token (e.g. BPT token) rather than the price of the vault token itself"
          },
          "getPriceUSD(address,(address,bool,uint256)[])": {
            "notice": "Quotes the USD price of `vault` tokens The quoted price is always scaled with 18 decimals regardless of the source used for the oracle."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/oracles/GenericVaultPriceOracle.sol": "GenericVaultPriceOracle"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/oracles/BaseVaultPriceOracle.sol": {
        "keccak256": "0x0363ece7cc538851f0ce2501f66e5855c942522bcfe25feeef8b4eed8b541390",
        "urls": [
          "bzz-raw://30fe611893a1bd8a19afb66b27cee359d190f2cb6c932fd75fb43436a503da87",
          "dweb:/ipfs/QmWm8de1mYfnqsYuyS5A6xbfg3fBLGj8gp85u5tsPgcx9m"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/oracles/GenericVaultPriceOracle.sol": {
        "keccak256": "0xab90770e2766d36436e906c0eb06f6818ab167b5bb12e514eed9b52bb6f24ffb",
        "urls": [
          "bzz-raw://1eb84526d79c8ec223fbf27fbc526117dffb6d109fd658e22b271a188d1676dc",
          "dweb:/ipfs/QmU58VWHo3MLpdsmpPeyzhTs7ED24naYSMezRbhspzvVoe"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGyroVault.sol": {
        "keccak256": "0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644",
        "urls": [
          "bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4",
          "dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/oracles/IVaultPriceOracle.sol": {
        "keccak256": "0x30e382fee81585687181890ea2c2e420dbaaf098ecbe407f84e528ef837ef5f9",
        "urls": [
          "bzz-raw://b8112141542ddab4cfa8904d9cbeed1a4f2cc249f038ccdcbabb094e75e66ee0",
          "dweb:/ipfs/QmWh2MXTL3zpB7mJ3dPeTzXmwX6ePnqnudrmJkVvwwPjjc"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "libraries/DataTypes.sol": {
        "keccak256": "0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29",
        "urls": [
          "bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494",
          "dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Errors.sol": {
        "keccak256": "0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd",
        "urls": [
          "bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55",
          "dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/FixedPoint.sol": {
        "keccak256": "0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f",
        "urls": [
          "bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235",
          "dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/LogExpMath.sol": {
        "keccak256": "0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6",
        "urls": [
          "bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4",
          "dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Vaults.sol": {
        "keccak256": "0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f",
        "urls": [
          "bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b",
          "dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/oracles/GenericVaultPriceOracle.sol",
    "id": 8509,
    "exportedSymbols": {
      "BaseVaultPriceOracle": [
        6432
      ],
      "DataTypes": [
        54575
      ],
      "Errors": [
        56112
      ],
      "FixedPoint": [
        56482
      ],
      "GenericVaultPriceOracle": [
        8508
      ],
      "IERC20": [
        47587
      ],
      "IERC20Metadata": [
        47612
      ],
      "IGyroVault": [
        16470
      ],
      "IVaultPriceOracle": [
        17783
      ],
      "LogExpMath": [
        57864
      ],
      "Vaults": [
        58285
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:395:23",
    "nodes": [
      {
        "id": 8484,
        "nodeType": "PragmaDirective",
        "src": "174:23:23",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 8485,
        "nodeType": "ImportDirective",
        "src": "199:36:23",
        "nodes": [],
        "absolutePath": "contracts/oracles/BaseVaultPriceOracle.sol",
        "file": "./BaseVaultPriceOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8509,
        "sourceUnit": 6433,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8508,
        "nodeType": "ContractDefinition",
        "src": "237:331:23",
        "nodes": [
          {
            "id": 8507,
            "nodeType": "FunctionDefinition",
            "src": "341:225:23",
            "nodes": [],
            "body": {
              "id": 8506,
              "nodeType": "Block",
              "src": "511:55:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 8501,
                        "name": "underlyingPricedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8495,
                        "src": "528:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PricedToken_$54444_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.PricedToken memory[] memory"
                        }
                      },
                      "id": 8503,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 8502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "551:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "528:25:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PricedToken_$54444_memory_ptr",
                        "typeString": "struct DataTypes.PricedToken memory"
                      }
                    },
                    "id": 8504,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "554:5:23",
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 54443,
                    "src": "528:31:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8500,
                  "id": 8505,
                  "nodeType": "Return",
                  "src": "521:38:23"
                }
              ]
            },
            "baseFunctions": [
              6431
            ],
            "documentation": {
              "id": 8488,
              "nodeType": "StructuredDocumentation",
              "src": "300:36:23",
              "text": "@inheritdoc BaseVaultPriceOracle"
            },
            "functionSelector": "b141266e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolTokenPriceUSD",
            "nameLocation": "350:20:23",
            "overrides": {
              "id": 8497,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "484:8:23"
            },
            "parameters": {
              "id": 8496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8507,
                  "src": "380:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGyroVault_$16470",
                    "typeString": "contract IGyroVault"
                  },
                  "typeName": {
                    "id": 8490,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8489,
                      "name": "IGyroVault",
                      "nameLocations": [
                        "380:10:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16470,
                      "src": "380:10:23"
                    },
                    "referencedDeclaration": 16470,
                    "src": "380:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGyroVault_$16470",
                      "typeString": "contract IGyroVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8495,
                  "mutability": "mutable",
                  "name": "underlyingPricedTokens",
                  "nameLocation": "443:22:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8507,
                  "src": "412:53:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PricedToken_$54444_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct DataTypes.PricedToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8493,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 8492,
                        "name": "DataTypes.PricedToken",
                        "nameLocations": [
                          "412:9:23",
                          "422:11:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54444,
                        "src": "412:21:23"
                      },
                      "referencedDeclaration": 54444,
                      "src": "412:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PricedToken_$54444_storage_ptr",
                        "typeString": "struct DataTypes.PricedToken"
                      }
                    },
                    "id": 8494,
                    "nodeType": "ArrayTypeName",
                    "src": "412:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PricedToken_$54444_storage_$dyn_storage_ptr",
                      "typeString": "struct DataTypes.PricedToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "370:101:23"
            },
            "returnParameters": {
              "id": 8500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8507,
                  "src": "502:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "501:9:23"
            },
            "scope": 8508,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8486,
              "name": "BaseVaultPriceOracle",
              "nameLocations": [
                "273:20:23"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6432,
              "src": "273:20:23"
            },
            "id": 8487,
            "nodeType": "InheritanceSpecifier",
            "src": "273:20:23"
          }
        ],
        "canonicalName": "GenericVaultPriceOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          8508,
          6432,
          17783
        ],
        "name": "GenericVaultPriceOracle",
        "nameLocation": "246:23:23",
        "scope": 8509,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 23
}