{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IGyroVault",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isStable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataTypes.PricedToken[]",
          "name": "underlyingPricedTokens",
          "type": "tuple[]"
        }
      ],
      "name": "getPoolTokenPriceUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IGyroVault",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isStable",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataTypes.PricedToken[]",
          "name": "underlyingPricedTokens",
          "type": "tuple[]"
        }
      ],
      "name": "getPriceUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getPoolTokenPriceUSD(address,(address,bool,uint256)[])": "b141266e",
    "getPriceUSD(address,(address,bool,uint256)[])": "b7bb2fe0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IGyroVault\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"underlyingPricedTokens\",\"type\":\"tuple[]\"}],\"name\":\"getPoolTokenPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGyroVault\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"underlyingPricedTokens\",\"type\":\"tuple[]\"}],\"name\":\"getPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPriceUSD(address,(address,bool,uint256)[])\":{\"params\":{\"vault\":\"the vault of which the price is to be quoted\"},\"returns\":{\"_0\":\"the USD price of the vault token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPoolTokenPriceUSD(address,(address,bool,uint256)[])\":{\"notice\":\"returns the price of the underlying pool token (e.g. BPT token) rather than the price of the vault token itself\"},\"getPriceUSD(address,(address,bool,uint256)[])\":{\"notice\":\"Quotes the USD price of `vault` tokens The quoted price is always scaled with 18 decimals regardless of the source used for the oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/balancer/BaseBalancerPriceOracle.sol\":\"BaseBalancerPriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/oracles/BaseVaultPriceOracle.sol\":{\"keccak256\":\"0x0363ece7cc538851f0ce2501f66e5855c942522bcfe25feeef8b4eed8b541390\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://30fe611893a1bd8a19afb66b27cee359d190f2cb6c932fd75fb43436a503da87\",\"dweb:/ipfs/QmWm8de1mYfnqsYuyS5A6xbfg3fBLGj8gp85u5tsPgcx9m\"]},\"contracts/oracles/balancer/BalancerLPSharePricing.sol\":{\"keccak256\":\"0xb64903eaaed47e994767242b02fe4ed4700e3461a283058e06de211b9965ab21\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://63ecc83da84c9ddd534cb4d1ed5b6887f8e869501b5c31389c389baf91b39937\",\"dweb:/ipfs/QmUucvJqPDfSkYUXuxMRQHoHUGg3nebLckKqgDVdibACHj\"]},\"contracts/oracles/balancer/BaseBalancerPriceOracle.sol\":{\"keccak256\":\"0x585420c2f18b2bb6e91398cb7334b05760753c2c83a2fe0fd478084e260d64cd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://0121bce96318c9ac211deef7813652df2e28d66f0cdd9467d10a3efd9c4aa94d\",\"dweb:/ipfs/QmcRXBuqbsRB6GjoCgs9eMeFWFswqggWqLVjApADRqqQiU\"]},\"interfaces/IGyroVault.sol\":{\"keccak256\":\"0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4\",\"dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL\"]},\"interfaces/balancer/IECLP.sol\":{\"keccak256\":\"0xfdb6a15d02e7726ee16533467ca0aeb7446f4aa3eddfb2d084c63a35c254c107\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://8828359a16585007fb7d0be3656b3d4fb669f751c02b9cbef067ffe821b21a8e\",\"dweb:/ipfs/QmfAykxtRryU4FxkxZYWKKqG1NrwsZoMnBLcWUDBCHXWfZ\"]},\"interfaces/balancer/IMinimalPoolView.sol\":{\"keccak256\":\"0x1a7e9fb35537abc36556bdef83626fced3a2d6ad0aeb8113e93b2982fb5aa234\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://d87fb2ecb3bd96c17e03f6f65a15737e6b12fedf81b0ed7058aa16f79ec2bea4\",\"dweb:/ipfs/QmQAsJ7XSc8DngGLaNh76SBSuUSeEiyYxR2K56c6Joysmc\"]},\"interfaces/oracles/IVaultPriceOracle.sol\":{\"keccak256\":\"0x30e382fee81585687181890ea2c2e420dbaaf098ecbe407f84e528ef837ef5f9\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://b8112141542ddab4cfa8904d9cbeed1a4f2cc249f038ccdcbabb094e75e66ee0\",\"dweb:/ipfs/QmWh2MXTL3zpB7mJ3dPeTzXmwX6ePnqnudrmJkVvwwPjjc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494\",\"dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC\"]},\"libraries/Errors.sol\":{\"keccak256\":\"0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55\",\"dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC\"]},\"libraries/FixedPoint.sol\":{\"keccak256\":\"0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235\",\"dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz\"]},\"libraries/LogExpMath.sol\":{\"keccak256\":\"0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4\",\"dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm\"]},\"libraries/SignedFixedPoint.sol\":{\"keccak256\":\"0x25194c8cea0ba1b4ba4420d03cca2e9c34f71d22e2f2952368685810238bd7f3\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://25f13a520f791f3757f24ff463dc8a3956a46239eddcdf9084245eafba1db164\",\"dweb:/ipfs/QmasFzq3xXsgLEvm9HYypKtCAg8BVRezk52k9DDvoVt7r8\"]},\"libraries/TypeConversion.sol\":{\"keccak256\":\"0x4ad7bb0fc2c2c1b040610d243fc9370edebc6b6da1b7c0637184455fb6c16559\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4a1d001ec09e19837b53aa4cec2d329ca7d67e90eff058ca0a583006328733b4\",\"dweb:/ipfs/QmWZb87Vtbf2dDBbqXQVMrttAcGK2b8mq5eZ8GHMqkh3eg\"]},\"libraries/Vaults.sol\":{\"keccak256\":\"0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b\",\"dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IGyroVault",
              "name": "vaultAddress",
              "type": "address"
            },
            {
              "internalType": "struct DataTypes.PricedToken[]",
              "name": "underlyingPricedTokens",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isStable",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolTokenPriceUSD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IGyroVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct DataTypes.PricedToken[]",
              "name": "underlyingPricedTokens",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isStable",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriceUSD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getPriceUSD(address,(address,bool,uint256)[])": {
            "params": {
              "vault": "the vault of which the price is to be quoted"
            },
            "returns": {
              "_0": "the USD price of the vault token"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getPoolTokenPriceUSD(address,(address,bool,uint256)[])": {
            "notice": "returns the price of the underlying pool token (e.g. BPT token) rather than the price of the vault token itself"
          },
          "getPriceUSD(address,(address,bool,uint256)[])": {
            "notice": "Quotes the USD price of `vault` tokens The quoted price is always scaled with 18 decimals regardless of the source used for the oracle."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/oracles/balancer/BaseBalancerPriceOracle.sol": "BaseBalancerPriceOracle"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/oracles/BaseVaultPriceOracle.sol": {
        "keccak256": "0x0363ece7cc538851f0ce2501f66e5855c942522bcfe25feeef8b4eed8b541390",
        "urls": [
          "bzz-raw://30fe611893a1bd8a19afb66b27cee359d190f2cb6c932fd75fb43436a503da87",
          "dweb:/ipfs/QmWm8de1mYfnqsYuyS5A6xbfg3fBLGj8gp85u5tsPgcx9m"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/oracles/balancer/BalancerLPSharePricing.sol": {
        "keccak256": "0xb64903eaaed47e994767242b02fe4ed4700e3461a283058e06de211b9965ab21",
        "urls": [
          "bzz-raw://63ecc83da84c9ddd534cb4d1ed5b6887f8e869501b5c31389c389baf91b39937",
          "dweb:/ipfs/QmUucvJqPDfSkYUXuxMRQHoHUGg3nebLckKqgDVdibACHj"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/oracles/balancer/BaseBalancerPriceOracle.sol": {
        "keccak256": "0x585420c2f18b2bb6e91398cb7334b05760753c2c83a2fe0fd478084e260d64cd",
        "urls": [
          "bzz-raw://0121bce96318c9ac211deef7813652df2e28d66f0cdd9467d10a3efd9c4aa94d",
          "dweb:/ipfs/QmcRXBuqbsRB6GjoCgs9eMeFWFswqggWqLVjApADRqqQiU"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGyroVault.sol": {
        "keccak256": "0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644",
        "urls": [
          "bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4",
          "dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IECLP.sol": {
        "keccak256": "0xfdb6a15d02e7726ee16533467ca0aeb7446f4aa3eddfb2d084c63a35c254c107",
        "urls": [
          "bzz-raw://8828359a16585007fb7d0be3656b3d4fb669f751c02b9cbef067ffe821b21a8e",
          "dweb:/ipfs/QmfAykxtRryU4FxkxZYWKKqG1NrwsZoMnBLcWUDBCHXWfZ"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IMinimalPoolView.sol": {
        "keccak256": "0x1a7e9fb35537abc36556bdef83626fced3a2d6ad0aeb8113e93b2982fb5aa234",
        "urls": [
          "bzz-raw://d87fb2ecb3bd96c17e03f6f65a15737e6b12fedf81b0ed7058aa16f79ec2bea4",
          "dweb:/ipfs/QmQAsJ7XSc8DngGLaNh76SBSuUSeEiyYxR2K56c6Joysmc"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/oracles/IVaultPriceOracle.sol": {
        "keccak256": "0x30e382fee81585687181890ea2c2e420dbaaf098ecbe407f84e528ef837ef5f9",
        "urls": [
          "bzz-raw://b8112141542ddab4cfa8904d9cbeed1a4f2cc249f038ccdcbabb094e75e66ee0",
          "dweb:/ipfs/QmWh2MXTL3zpB7mJ3dPeTzXmwX6ePnqnudrmJkVvwwPjjc"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "libraries/DataTypes.sol": {
        "keccak256": "0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29",
        "urls": [
          "bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494",
          "dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Errors.sol": {
        "keccak256": "0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd",
        "urls": [
          "bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55",
          "dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/FixedPoint.sol": {
        "keccak256": "0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f",
        "urls": [
          "bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235",
          "dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/LogExpMath.sol": {
        "keccak256": "0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6",
        "urls": [
          "bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4",
          "dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/SignedFixedPoint.sol": {
        "keccak256": "0x25194c8cea0ba1b4ba4420d03cca2e9c34f71d22e2f2952368685810238bd7f3",
        "urls": [
          "bzz-raw://25f13a520f791f3757f24ff463dc8a3956a46239eddcdf9084245eafba1db164",
          "dweb:/ipfs/QmasFzq3xXsgLEvm9HYypKtCAg8BVRezk52k9DDvoVt7r8"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/TypeConversion.sol": {
        "keccak256": "0x4ad7bb0fc2c2c1b040610d243fc9370edebc6b6da1b7c0637184455fb6c16559",
        "urls": [
          "bzz-raw://4a1d001ec09e19837b53aa4cec2d329ca7d67e90eff058ca0a583006328733b4",
          "dweb:/ipfs/QmWZb87Vtbf2dDBbqXQVMrttAcGK2b8mq5eZ8GHMqkh3eg"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Vaults.sol": {
        "keccak256": "0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f",
        "urls": [
          "bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b",
          "dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/oracles/balancer/BaseBalancerPriceOracle.sol",
    "id": 10369,
    "exportedSymbols": {
      "BalancerLPSharePricing": [
        10325
      ],
      "BaseBalancerPriceOracle": [
        10368
      ],
      "BaseVaultPriceOracle": [
        6471
      ],
      "DataTypes": [
        54558
      ],
      "Errors": [
        56095
      ],
      "FixedPoint": [
        56465
      ],
      "IECLP": [
        17024
      ],
      "IERC20": [
        47570
      ],
      "IERC20Metadata": [
        47595
      ],
      "IGyroVault": [
        16453
      ],
      "IMinimalPoolView": [
        17062
      ],
      "IVaultPriceOracle": [
        17766
      ],
      "LogExpMath": [
        57847
      ],
      "SafeCast": [
        52047
      ],
      "SignedFixedPoint": [
        58110
      ],
      "TypeConversion": [
        58259
      ],
      "Vaults": [
        58268
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:624:30",
    "nodes": [
      {
        "id": 10327,
        "nodeType": "PragmaDirective",
        "src": "174:23:30",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 10328,
        "nodeType": "ImportDirective",
        "src": "199:38:30",
        "nodes": [],
        "absolutePath": "contracts/oracles/balancer/BalancerLPSharePricing.sol",
        "file": "./BalancerLPSharePricing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10369,
        "sourceUnit": 10326,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10329,
        "nodeType": "ImportDirective",
        "src": "238:37:30",
        "nodes": [],
        "absolutePath": "contracts/oracles/BaseVaultPriceOracle.sol",
        "file": "../BaseVaultPriceOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10369,
        "sourceUnit": 6472,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10330,
        "nodeType": "ImportDirective",
        "src": "277:47:30",
        "nodes": [],
        "absolutePath": "libraries/TypeConversion.sol",
        "file": "../../../libraries/TypeConversion.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10369,
        "sourceUnit": 58260,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10331,
        "nodeType": "ImportDirective",
        "src": "326:59:30",
        "nodes": [],
        "absolutePath": "interfaces/balancer/IMinimalPoolView.sol",
        "file": "../../../interfaces/balancer/IMinimalPoolView.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10369,
        "sourceUnit": 17063,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10368,
        "nodeType": "ContractDefinition",
        "src": "387:410:30",
        "nodes": [
          {
            "id": 10338,
            "nodeType": "UsingForDirective",
            "src": "459:49:30",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 10334,
              "name": "TypeConversion",
              "nameLocations": [
                "465:14:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58259,
              "src": "465:14:30"
            },
            "typeName": {
              "baseType": {
                "id": 10336,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10335,
                  "name": "DataTypes.PricedToken",
                  "nameLocations": [
                    "484:9:30",
                    "494:11:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54427,
                  "src": "484:21:30"
                },
                "referencedDeclaration": 54427,
                "src": "484:21:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PricedToken_$54427_storage_ptr",
                  "typeString": "struct DataTypes.PricedToken"
                }
              },
              "id": 10337,
              "nodeType": "ArrayTypeName",
              "src": "484:23:30",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PricedToken_$54427_storage_$dyn_storage_ptr",
                "typeString": "struct DataTypes.PricedToken[]"
              }
            }
          },
          {
            "id": 10341,
            "nodeType": "UsingForDirective",
            "src": "513:29:30",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 10339,
              "name": "FixedPoint",
              "nameLocations": [
                "519:10:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56465,
              "src": "519:10:30"
            },
            "typeName": {
              "id": 10340,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "534:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 10367,
            "nodeType": "FunctionDefinition",
            "src": "548:247:30",
            "nodes": [],
            "body": {
              "id": 10366,
              "nodeType": "Block",
              "src": "642:153:30",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10350,
                      "mutability": "mutable",
                      "name": "invariant",
                      "nameLocation": "660:9:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10366,
                      "src": "652:17:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "652:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10354,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10351,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10344,
                        "src": "672:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMinimalPoolView_$17062",
                          "typeString": "contract IMinimalPoolView"
                        }
                      },
                      "id": 10352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "677:12:30",
                      "memberName": "getInvariant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17051,
                      "src": "672:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 10353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:19:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "652:39:30"
                },
                {
                  "assignments": [
                    10356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10356,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "709:11:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10366,
                      "src": "701:19:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10355,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "701:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10360,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10357,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10344,
                        "src": "723:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMinimalPoolView_$17062",
                          "typeString": "contract IMinimalPoolView"
                        }
                      },
                      "id": 10358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "728:11:30",
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17061,
                      "src": "723:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 10359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:18:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "701:40:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10363,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10356,
                        "src": "776:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10361,
                        "name": "invariant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10350,
                        "src": "758:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 10362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "768:7:30",
                      "memberName": "divDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56245,
                      "src": "758:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 10364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "758:30:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10348,
                  "id": 10365,
                  "nodeType": "Return",
                  "src": "751:37:30"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInvariantDivSupply",
            "nameLocation": "557:21:30",
            "parameters": {
              "id": 10345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10344,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "596:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10367,
                  "src": "579:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMinimalPoolView_$17062",
                    "typeString": "contract IMinimalPoolView"
                  },
                  "typeName": {
                    "id": 10343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10342,
                      "name": "IMinimalPoolView",
                      "nameLocations": [
                        "579:16:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17062,
                      "src": "579:16:30"
                    },
                    "referencedDeclaration": 17062,
                    "src": "579:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMinimalPoolView_$17062",
                      "typeString": "contract IMinimalPoolView"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "578:23:30"
            },
            "returnParameters": {
              "id": 10348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10367,
                  "src": "633:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:9:30"
            },
            "scope": 10368,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 10332,
              "name": "BaseVaultPriceOracle",
              "nameLocations": [
                "432:20:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6471,
              "src": "432:20:30"
            },
            "id": 10333,
            "nodeType": "InheritanceSpecifier",
            "src": "432:20:30"
          }
        ],
        "canonicalName": "BaseBalancerPriceOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          10368,
          6471,
          17766
        ],
        "name": "BaseBalancerPriceOracle",
        "nameLocation": "405:23:30",
        "scope": 10369,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 30
}