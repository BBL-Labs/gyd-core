{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "inputAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "destinationVault",
              "type": "address"
            }
          ],
          "internalType": "struct DataTypes.MintAsset[]",
          "name": "assets",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "minReceivedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "dryMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedGYDAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gydToRedeem",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minOutputAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "valueRatio",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "originVault",
              "type": "address"
            }
          ],
          "internalType": "struct DataTypes.RedeemAsset[]",
          "name": "assets",
          "type": "tuple[]"
        }
      ],
      "name": "dryRedeem",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "outputAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gydToken",
      "outputs": [
        {
          "internalType": "contract IGYDToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gyroConfig",
      "outputs": [
        {
          "internalType": "contract IGyroConfig",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "inputAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "destinationVault",
              "type": "address"
            }
          ],
          "internalType": "struct DataTypes.MintAsset[]",
          "name": "assets",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "minReceivedAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintedGYDAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pamm",
      "outputs": [
        {
          "internalType": "contract IPAMM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gydToRedeem",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minOutputAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "valueRatio",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "originVault",
              "type": "address"
            }
          ],
          "internalType": "struct DataTypes.RedeemAsset[]",
          "name": "assets",
          "type": "tuple[]"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "outputAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "contract IReserve",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "dryMint((address,uint256,address)[],uint256,address)": "56529403",
    "dryRedeem(uint256,(address,uint256,uint256,address)[])": "4d8ca4c5",
    "gydToken()": "fbf60028",
    "gyroConfig()": "44bbdb55",
    "mint((address,uint256,address)[],uint256)": "2799c6cf",
    "pamm()": "85b0c781",
    "redeem(uint256,(address,uint256,uint256,address)[])": "4e4d822a",
    "reserve()": "cd3293de"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destinationVault\",\"type\":\"address\"}],\"internalType\":\"struct DataTypes.MintAsset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"minReceivedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"dryMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedGYDAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gydToRedeem\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueRatio\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originVault\",\"type\":\"address\"}],\"internalType\":\"struct DataTypes.RedeemAsset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"}],\"name\":\"dryRedeem\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"outputAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gydToken\",\"outputs\":[{\"internalType\":\"contract IGYDToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gyroConfig\",\"outputs\":[{\"internalType\":\"contract IGyroConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destinationVault\",\"type\":\"address\"}],\"internalType\":\"struct DataTypes.MintAsset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"minReceivedAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedGYDAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pamm\",\"outputs\":[{\"internalType\":\"contract IPAMM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gydToRedeem\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueRatio\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originVault\",\"type\":\"address\"}],\"internalType\":\"struct DataTypes.RedeemAsset[]\",\"name\":\"assets\",\"type\":\"tuple[]\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"outputAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"contract IReserve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"dryMint((address,uint256,address)[],uint256,address)\":{\"params\":{\"account\":\"the account that wants to mint\",\"assets\":\"the assets and associated amounts used to mint GYD\",\"minReceivedAmount\":\"the minimum amount of GYD to be minted\"},\"returns\":{\"err\":\"a non-empty error message in case an error would happen when minting\",\"mintedGYDAmount\":\"the amount that would be minted, or 0 if it an error would occur\"}},\"dryRedeem(uint256,(address,uint256,uint256,address)[])\":{\"params\":{\"assets\":\"the output tokens and associated amounts to return against GYD\",\"gydToRedeem\":\"the maximum amount of GYD to redeem\"},\"returns\":{\"err\":\"a non-empty error message in case an error would happen when redeeming\",\"outputAmounts\":\"the amounts receivd against the redeemed GYD\"}},\"gydToken()\":{\"details\":\"The GYD token is not upgradable so this will always return the same value\",\"returns\":{\"_0\":\"the address of the GYD token\"}},\"gyroConfig()\":{\"returns\":{\"_0\":\"the global configuration address\"}},\"mint((address,uint256,address)[],uint256)\":{\"params\":{\"assets\":\"the assets and associated amounts used to mint GYD\",\"minReceivedAmount\":\"the minimum amount of GYD to be minted\"},\"returns\":{\"mintedGYDAmount\":\"GYD token minted amount\"}},\"pamm()\":{\"returns\":{\"_0\":\"the PAMM address\"}},\"redeem(uint256,(address,uint256,uint256,address)[])\":{\"params\":{\"assets\":\"the output tokens and associated amounts to return against GYD\",\"gydToRedeem\":\"the maximum amount of GYD to redeem\"},\"returns\":{\"outputAmounts\":\"the amounts receivd against the redeemed GYD\"}},\"reserve()\":{\"returns\":{\"_0\":\"the address of the reserve\"}}},\"title\":\"IMotherboard is the central contract connecting the different pieces of the Gyro protocol\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dryMint((address,uint256,address)[],uint256,address)\":{\"notice\":\"Simulates a mint to know whether it would succeed and how much would be minted The parameters are the same as the `mint` function\"},\"dryRedeem(uint256,(address,uint256,uint256,address)[])\":{\"notice\":\"Dry version of the `redeem` function exact outputs as specified by `tokens` and `amounts`\"},\"gyroConfig()\":{\"notice\":\"Returns the address of the global configuration\"},\"mint((address,uint256,address)[],uint256)\":{\"notice\":\"Main minting function to be called by a depositor This mints using the exact input amount and mints at least `minMintedAmount` All the `inputTokens` should be approved for the motherboard to spend at least `inputAmounts` on behalf of the sender\"},\"pamm()\":{\"notice\":\"Returns the address for the PAMM\"},\"redeem(uint256,(address,uint256,uint256,address)[])\":{\"notice\":\"Main redemption function to be called by a withdrawer This redeems using at most `maxRedeemedAmount` of GYD and returns the exact outputs as specified by `tokens` and `amounts`\"},\"reserve()\":{\"notice\":\"Returns the address for the reserve\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IMotherboard.sol\":\"IMotherboard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/auth/Governable.sol\":{\"keccak256\":\"0x8e35f59c8df176f2f2ec0b27bc567106f419942f28b317c4aeb459572c7cddc9\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://2bbe14ec52921d7a1a67116dbfa1729647f94aded19b4949765f4260c46b99fd\",\"dweb:/ipfs/QmXhqMmvwZRUgAFNCxifNKPE2FkDEDVpCBMQNs2LBEQsFi\"]},\"contracts/auth/GovernableBase.sol\":{\"keccak256\":\"0x076c1535458771c52ae11bdd7747704ff990bb8e778c678c5963d4453c43eff0\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://90296c3c42624636dc61c63dccb91807566d905607e13cf3f85dadde65e4ef9f\",\"dweb:/ipfs/QmNdL6uFNGLgwvgwuGVqp2wmmdsKViQhuFeMGNgHsdCeQ6\"]},\"interfaces/IFeeBank.sol\":{\"keccak256\":\"0xbae0c79fd80887c105efb69dcf7bc75aa6266ef611ce33be0569b93b668ed413\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://bfaa26c1f2ef522fa6166108eb5e8925f6f3e9057156d061d2c7dcf9641f718a\",\"dweb:/ipfs/Qmcyd9hDh7iATWJrYsJ359mHYns2WPG7ngTJygUparQG2a\"]},\"interfaces/IGYDToken.sol\":{\"keccak256\":\"0xaecf6133bdc678ae1487cd097cd7dee99e1b48cd6644d880c362542474a32874\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://993ce8c1d61bc60c35a6b7575365c6e546d0c01efc734d7004f6327b1c1703dd\",\"dweb:/ipfs/QmcuTb57tU7YyDEQLFXh4z5zUPVd9mbZvsDxxWLN1k1mAN\"]},\"interfaces/IGovernable.sol\":{\"keccak256\":\"0x5e0804b45ef3fb3cfd9bf24999ea98307d157dd1e3fb4965ab902f16a8a7a834\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cc9a2bcf74ff86ae5c89873dd7eea6bb4d9c71bf67f63414cf6519a17bb60066\",\"dweb:/ipfs/QmT45sh3fadFtq6gD1STeTxtFgE1AQ6SNVtCbChoWdRkid\"]},\"interfaces/IGyroConfig.sol\":{\"keccak256\":\"0x502db81331c4302bbe2a52b246a850400a03e20458f5f13cb0e4b15b804cdb63\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://bbddf716c9dcab1fcb6c11e6c8e772ea6fbe5d1ae59dd35fe26570d28943255d\",\"dweb:/ipfs/QmPhjMqQRN3TCxcRMJT1YasmkFK8Hu1Hifw9NhTYR8cYdz\"]},\"interfaces/IMotherboard.sol\":{\"keccak256\":\"0x76dfe1c34dd98f437298bdb6fc4db66c7ed5111bcec7fb54bc5a3433d37775ec\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://0ed06a10647994f5eca3adccefffc7b9187c8bee40404232ccfb920add315870\",\"dweb:/ipfs/QmT2bpUExnTyE87KZ7Q5FVT5Ykjft4DHa89cdP9gBPByhL\"]},\"interfaces/IPAMM.sol\":{\"keccak256\":\"0x26e4ae598f71529d34a91298ce208c6f34686a4f67360274d20309680f237db2\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://ceda5a304d4c9564cda5c7ac1f0fa5a2ee3933d2843dbdb7ee87b16e75ebb616\",\"dweb:/ipfs/QmV974iH2s27qXvo6Mrx3E5xwAXiHbELCbUtPQzCwj8v3o\"]},\"interfaces/IReserve.sol\":{\"keccak256\":\"0xd9d9d8f44fb69ae14c1f51bdc88ab20cf356422ca9de17209cbba9e3024861d7\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://6fa4b7a768d16c840ec24063fe921eae94094f3fc639ec8695ef0bc7d6cc11d7\",\"dweb:/ipfs/QmboDFRYZDgWhMobsU3XJKpuykrxJ6d5FCke85Q485f8H3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494\",\"dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC\"]},\"libraries/Errors.sol\":{\"keccak256\":\"0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55\",\"dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.MintAsset[]",
              "name": "assets",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "destinationVault",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "minReceivedAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "dryMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintedGYDAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "err",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gydToRedeem",
              "type": "uint256"
            },
            {
              "internalType": "struct DataTypes.RedeemAsset[]",
              "name": "assets",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minOutputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valueRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "originVault",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "dryRedeem",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "outputAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "err",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gydToken",
          "outputs": [
            {
              "internalType": "contract IGYDToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gyroConfig",
          "outputs": [
            {
              "internalType": "contract IGyroConfig",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.MintAsset[]",
              "name": "assets",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "inputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "inputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "destinationVault",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "minReceivedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintedGYDAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pamm",
          "outputs": [
            {
              "internalType": "contract IPAMM",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gydToRedeem",
              "type": "uint256"
            },
            {
              "internalType": "struct DataTypes.RedeemAsset[]",
              "name": "assets",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "outputToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minOutputAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valueRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "originVault",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "outputAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "reserve",
          "outputs": [
            {
              "internalType": "contract IReserve",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "dryMint((address,uint256,address)[],uint256,address)": {
            "params": {
              "account": "the account that wants to mint",
              "assets": "the assets and associated amounts used to mint GYD",
              "minReceivedAmount": "the minimum amount of GYD to be minted"
            },
            "returns": {
              "err": "a non-empty error message in case an error would happen when minting",
              "mintedGYDAmount": "the amount that would be minted, or 0 if it an error would occur"
            }
          },
          "dryRedeem(uint256,(address,uint256,uint256,address)[])": {
            "params": {
              "assets": "the output tokens and associated amounts to return against GYD",
              "gydToRedeem": "the maximum amount of GYD to redeem"
            },
            "returns": {
              "err": "a non-empty error message in case an error would happen when redeeming",
              "outputAmounts": "the amounts receivd against the redeemed GYD"
            }
          },
          "gydToken()": {
            "details": "The GYD token is not upgradable so this will always return the same value",
            "returns": {
              "_0": "the address of the GYD token"
            }
          },
          "gyroConfig()": {
            "returns": {
              "_0": "the global configuration address"
            }
          },
          "mint((address,uint256,address)[],uint256)": {
            "params": {
              "assets": "the assets and associated amounts used to mint GYD",
              "minReceivedAmount": "the minimum amount of GYD to be minted"
            },
            "returns": {
              "mintedGYDAmount": "GYD token minted amount"
            }
          },
          "pamm()": {
            "returns": {
              "_0": "the PAMM address"
            }
          },
          "redeem(uint256,(address,uint256,uint256,address)[])": {
            "params": {
              "assets": "the output tokens and associated amounts to return against GYD",
              "gydToRedeem": "the maximum amount of GYD to redeem"
            },
            "returns": {
              "outputAmounts": "the amounts receivd against the redeemed GYD"
            }
          },
          "reserve()": {
            "returns": {
              "_0": "the address of the reserve"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "dryMint((address,uint256,address)[],uint256,address)": {
            "notice": "Simulates a mint to know whether it would succeed and how much would be minted The parameters are the same as the `mint` function"
          },
          "dryRedeem(uint256,(address,uint256,uint256,address)[])": {
            "notice": "Dry version of the `redeem` function exact outputs as specified by `tokens` and `amounts`"
          },
          "gyroConfig()": {
            "notice": "Returns the address of the global configuration"
          },
          "mint((address,uint256,address)[],uint256)": {
            "notice": "Main minting function to be called by a depositor This mints using the exact input amount and mints at least `minMintedAmount` All the `inputTokens` should be approved for the motherboard to spend at least `inputAmounts` on behalf of the sender"
          },
          "pamm()": {
            "notice": "Returns the address for the PAMM"
          },
          "redeem(uint256,(address,uint256,uint256,address)[])": {
            "notice": "Main redemption function to be called by a withdrawer This redeems using at most `maxRedeemedAmount` of GYD and returns the exact outputs as specified by `tokens` and `amounts`"
          },
          "reserve()": {
            "notice": "Returns the address for the reserve"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "interfaces/IMotherboard.sol": "IMotherboard"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/auth/Governable.sol": {
        "keccak256": "0x8e35f59c8df176f2f2ec0b27bc567106f419942f28b317c4aeb459572c7cddc9",
        "urls": [
          "bzz-raw://2bbe14ec52921d7a1a67116dbfa1729647f94aded19b4949765f4260c46b99fd",
          "dweb:/ipfs/QmXhqMmvwZRUgAFNCxifNKPE2FkDEDVpCBMQNs2LBEQsFi"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/auth/GovernableBase.sol": {
        "keccak256": "0x076c1535458771c52ae11bdd7747704ff990bb8e778c678c5963d4453c43eff0",
        "urls": [
          "bzz-raw://90296c3c42624636dc61c63dccb91807566d905607e13cf3f85dadde65e4ef9f",
          "dweb:/ipfs/QmNdL6uFNGLgwvgwuGVqp2wmmdsKViQhuFeMGNgHsdCeQ6"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IFeeBank.sol": {
        "keccak256": "0xbae0c79fd80887c105efb69dcf7bc75aa6266ef611ce33be0569b93b668ed413",
        "urls": [
          "bzz-raw://bfaa26c1f2ef522fa6166108eb5e8925f6f3e9057156d061d2c7dcf9641f718a",
          "dweb:/ipfs/Qmcyd9hDh7iATWJrYsJ359mHYns2WPG7ngTJygUparQG2a"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGYDToken.sol": {
        "keccak256": "0xaecf6133bdc678ae1487cd097cd7dee99e1b48cd6644d880c362542474a32874",
        "urls": [
          "bzz-raw://993ce8c1d61bc60c35a6b7575365c6e546d0c01efc734d7004f6327b1c1703dd",
          "dweb:/ipfs/QmcuTb57tU7YyDEQLFXh4z5zUPVd9mbZvsDxxWLN1k1mAN"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGovernable.sol": {
        "keccak256": "0x5e0804b45ef3fb3cfd9bf24999ea98307d157dd1e3fb4965ab902f16a8a7a834",
        "urls": [
          "bzz-raw://cc9a2bcf74ff86ae5c89873dd7eea6bb4d9c71bf67f63414cf6519a17bb60066",
          "dweb:/ipfs/QmT45sh3fadFtq6gD1STeTxtFgE1AQ6SNVtCbChoWdRkid"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGyroConfig.sol": {
        "keccak256": "0x502db81331c4302bbe2a52b246a850400a03e20458f5f13cb0e4b15b804cdb63",
        "urls": [
          "bzz-raw://bbddf716c9dcab1fcb6c11e6c8e772ea6fbe5d1ae59dd35fe26570d28943255d",
          "dweb:/ipfs/QmPhjMqQRN3TCxcRMJT1YasmkFK8Hu1Hifw9NhTYR8cYdz"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IMotherboard.sol": {
        "keccak256": "0x76dfe1c34dd98f437298bdb6fc4db66c7ed5111bcec7fb54bc5a3433d37775ec",
        "urls": [
          "bzz-raw://0ed06a10647994f5eca3adccefffc7b9187c8bee40404232ccfb920add315870",
          "dweb:/ipfs/QmT2bpUExnTyE87KZ7Q5FVT5Ykjft4DHa89cdP9gBPByhL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IPAMM.sol": {
        "keccak256": "0x26e4ae598f71529d34a91298ce208c6f34686a4f67360274d20309680f237db2",
        "urls": [
          "bzz-raw://ceda5a304d4c9564cda5c7ac1f0fa5a2ee3933d2843dbdb7ee87b16e75ebb616",
          "dweb:/ipfs/QmV974iH2s27qXvo6Mrx3E5xwAXiHbELCbUtPQzCwj8v3o"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IReserve.sol": {
        "keccak256": "0xd9d9d8f44fb69ae14c1f51bdc88ab20cf356422ca9de17209cbba9e3024861d7",
        "urls": [
          "bzz-raw://6fa4b7a768d16c840ec24063fe921eae94094f3fc639ec8695ef0bc7d6cc11d7",
          "dweb:/ipfs/QmboDFRYZDgWhMobsU3XJKpuykrxJ6d5FCke85Q485f8H3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "libraries/DataTypes.sol": {
        "keccak256": "0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29",
        "urls": [
          "bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494",
          "dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Errors.sol": {
        "keccak256": "0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd",
        "urls": [
          "bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55",
          "dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "interfaces/IMotherboard.sol",
    "id": 16616,
    "exportedSymbols": {
      "DataTypes": [
        54575
      ],
      "Errors": [
        56112
      ],
      "Governable": [
        5458
      ],
      "GovernableBase": [
        5552
      ],
      "IERC20": [
        47587
      ],
      "IFeeBank": [
        16132
      ],
      "IGYDToken": [
        16195
      ],
      "IGovernable": [
        16232
      ],
      "IGyroConfig": [
        16355
      ],
      "IMotherboard": [
        16615
      ],
      "IPAMM": [
        16688
      ],
      "IReserve": [
        16751
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:3473:72",
    "nodes": [
      {
        "id": 16524,
        "nodeType": "PragmaDirective",
        "src": "174:23:72",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16525,
        "nodeType": "ImportDirective",
        "src": "199:27:72",
        "nodes": [],
        "absolutePath": "interfaces/IGyroConfig.sol",
        "file": "./IGyroConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16616,
        "sourceUnit": 16356,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16526,
        "nodeType": "ImportDirective",
        "src": "227:25:72",
        "nodes": [],
        "absolutePath": "interfaces/IGYDToken.sol",
        "file": "./IGYDToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16616,
        "sourceUnit": 16196,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16527,
        "nodeType": "ImportDirective",
        "src": "253:24:72",
        "nodes": [],
        "absolutePath": "interfaces/IReserve.sol",
        "file": "./IReserve.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16616,
        "sourceUnit": 16752,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16528,
        "nodeType": "ImportDirective",
        "src": "278:21:72",
        "nodes": [],
        "absolutePath": "interfaces/IPAMM.sol",
        "file": "./IPAMM.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16616,
        "sourceUnit": 16689,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16529,
        "nodeType": "ImportDirective",
        "src": "300:24:72",
        "nodes": [],
        "absolutePath": "interfaces/IFeeBank.sol",
        "file": "./IFeeBank.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16616,
        "sourceUnit": 16133,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16615,
        "nodeType": "ContractDefinition",
        "src": "431:3215:72",
        "nodes": [
          {
            "id": 16537,
            "nodeType": "FunctionDefinition",
            "src": "592:54:72",
            "nodes": [],
            "documentation": {
              "id": 16531,
              "nodeType": "StructuredDocumentation",
              "src": "460:127:72",
              "text": "@dev The GYD token is not upgradable so this will always return the same value\n @return the address of the GYD token"
            },
            "functionSelector": "fbf60028",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gydToken",
            "nameLocation": "601:8:72",
            "parameters": {
              "id": 16532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:2:72"
            },
            "returnParameters": {
              "id": 16536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16537,
                  "src": "635:9:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGYDToken_$16195",
                    "typeString": "contract IGYDToken"
                  },
                  "typeName": {
                    "id": 16534,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16533,
                      "name": "IGYDToken",
                      "nameLocations": [
                        "635:9:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16195,
                      "src": "635:9:72"
                    },
                    "referencedDeclaration": 16195,
                    "src": "635:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGYDToken_$16195",
                      "typeString": "contract IGYDToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "634:11:72"
            },
            "scope": 16615,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16544,
            "nodeType": "FunctionDefinition",
            "src": "734:46:72",
            "nodes": [],
            "documentation": {
              "id": 16538,
              "nodeType": "StructuredDocumentation",
              "src": "652:77:72",
              "text": "@notice Returns the address for the PAMM\n @return the PAMM address"
            },
            "functionSelector": "85b0c781",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pamm",
            "nameLocation": "743:4:72",
            "parameters": {
              "id": 16539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:2:72"
            },
            "returnParameters": {
              "id": 16543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16542,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16544,
                  "src": "773:5:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPAMM_$16688",
                    "typeString": "contract IPAMM"
                  },
                  "typeName": {
                    "id": 16541,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16540,
                      "name": "IPAMM",
                      "nameLocations": [
                        "773:5:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16688,
                      "src": "773:5:72"
                    },
                    "referencedDeclaration": 16688,
                    "src": "773:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPAMM_$16688",
                      "typeString": "contract IPAMM"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:7:72"
            },
            "scope": 16615,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16551,
            "nodeType": "FunctionDefinition",
            "src": "881:52:72",
            "nodes": [],
            "documentation": {
              "id": 16545,
              "nodeType": "StructuredDocumentation",
              "src": "786:90:72",
              "text": "@notice Returns the address for the reserve\n @return the address of the reserve"
            },
            "functionSelector": "cd3293de",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reserve",
            "nameLocation": "890:7:72",
            "parameters": {
              "id": 16546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:2:72"
            },
            "returnParameters": {
              "id": 16550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16549,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16551,
                  "src": "923:8:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IReserve_$16751",
                    "typeString": "contract IReserve"
                  },
                  "typeName": {
                    "id": 16548,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16547,
                      "name": "IReserve",
                      "nameLocations": [
                        "923:8:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16751,
                      "src": "923:8:72"
                    },
                    "referencedDeclaration": 16751,
                    "src": "923:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IReserve_$16751",
                      "typeString": "contract IReserve"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "922:10:72"
            },
            "scope": 16615,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16558,
            "nodeType": "FunctionDefinition",
            "src": "1052:58:72",
            "nodes": [],
            "documentation": {
              "id": 16552,
              "nodeType": "StructuredDocumentation",
              "src": "939:108:72",
              "text": "@notice Returns the address of the global configuration\n @return the global configuration address"
            },
            "functionSelector": "44bbdb55",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gyroConfig",
            "nameLocation": "1061:10:72",
            "parameters": {
              "id": 16553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1071:2:72"
            },
            "returnParameters": {
              "id": 16557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16558,
                  "src": "1097:11:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGyroConfig_$16355",
                    "typeString": "contract IGyroConfig"
                  },
                  "typeName": {
                    "id": 16555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16554,
                      "name": "IGyroConfig",
                      "nameLocations": [
                        "1097:11:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16355,
                      "src": "1097:11:72"
                    },
                    "referencedDeclaration": 16355,
                    "src": "1097:11:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGyroConfig_$16355",
                      "typeString": "contract IGyroConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:13:72"
            },
            "scope": 16615,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16570,
            "nodeType": "FunctionDefinition",
            "src": "1602:139:72",
            "nodes": [],
            "documentation": {
              "id": 16559,
              "nodeType": "StructuredDocumentation",
              "src": "1116:481:72",
              "text": "@notice Main minting function to be called by a depositor\n This mints using the exact input amount and mints at least `minMintedAmount`\n All the `inputTokens` should be approved for the motherboard to spend at least\n `inputAmounts` on behalf of the sender\n @param assets the assets and associated amounts used to mint GYD\n @param minReceivedAmount the minimum amount of GYD to be minted\n @return mintedGYDAmount GYD token minted amount"
            },
            "functionSelector": "2799c6cf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1611:4:72",
            "parameters": {
              "id": 16566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16563,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "1647:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "1616:37:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MintAsset_$54456_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct DataTypes.MintAsset[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16561,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16560,
                        "name": "DataTypes.MintAsset",
                        "nameLocations": [
                          "1616:9:72",
                          "1626:9:72"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54456,
                        "src": "1616:19:72"
                      },
                      "referencedDeclaration": 54456,
                      "src": "1616:19:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintAsset_$54456_storage_ptr",
                        "typeString": "struct DataTypes.MintAsset"
                      }
                    },
                    "id": 16562,
                    "nodeType": "ArrayTypeName",
                    "src": "1616:21:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MintAsset_$54456_storage_$dyn_storage_ptr",
                      "typeString": "struct DataTypes.MintAsset[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16565,
                  "mutability": "mutable",
                  "name": "minReceivedAmount",
                  "nameLocation": "1663:17:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "1655:25:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1615:66:72"
            },
            "returnParameters": {
              "id": 16569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16568,
                  "mutability": "mutable",
                  "name": "mintedGYDAmount",
                  "nameLocation": "1724:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "1716:23:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1715:25:72"
            },
            "scope": 16615,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16583,
            "nodeType": "FunctionDefinition",
            "src": "2179:144:72",
            "nodes": [],
            "documentation": {
              "id": 16571,
              "nodeType": "StructuredDocumentation",
              "src": "1747:427:72",
              "text": "@notice Main redemption function to be called by a withdrawer\n This redeems using at most `maxRedeemedAmount` of GYD and returns the\n exact outputs as specified by `tokens` and `amounts`\n @param gydToRedeem the maximum amount of GYD to redeem\n @param assets the output tokens and associated amounts to return against GYD\n @return outputAmounts the amounts receivd against the redeemed GYD"
            },
            "functionSelector": "4e4d822a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "2188:6:72",
            "parameters": {
              "id": 16578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16573,
                  "mutability": "mutable",
                  "name": "gydToRedeem",
                  "nameLocation": "2203:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16583,
                  "src": "2195:19:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16577,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "2249:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16583,
                  "src": "2216:39:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RedeemAsset_$54465_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct DataTypes.RedeemAsset[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16575,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16574,
                        "name": "DataTypes.RedeemAsset",
                        "nameLocations": [
                          "2216:9:72",
                          "2226:11:72"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54465,
                        "src": "2216:21:72"
                      },
                      "referencedDeclaration": 54465,
                      "src": "2216:21:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemAsset_$54465_storage_ptr",
                        "typeString": "struct DataTypes.RedeemAsset"
                      }
                    },
                    "id": 16576,
                    "nodeType": "ArrayTypeName",
                    "src": "2216:23:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RedeemAsset_$54465_storage_$dyn_storage_ptr",
                      "typeString": "struct DataTypes.RedeemAsset[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:62:72"
            },
            "returnParameters": {
              "id": 16582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16581,
                  "mutability": "mutable",
                  "name": "outputAmounts",
                  "nameLocation": "2308:13:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16583,
                  "src": "2291:30:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16579,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2291:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16580,
                    "nodeType": "ArrayTypeName",
                    "src": "2291:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2290:32:72"
            },
            "scope": 16615,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16599,
            "nodeType": "FunctionDefinition",
            "src": "2868:178:72",
            "nodes": [],
            "documentation": {
              "id": 16584,
              "nodeType": "StructuredDocumentation",
              "src": "2329:534:72",
              "text": "@notice Simulates a mint to know whether it would succeed and how much would be minted\n The parameters are the same as the `mint` function\n @param assets the assets and associated amounts used to mint GYD\n @param minReceivedAmount the minimum amount of GYD to be minted\n @param account the account that wants to mint\n @return mintedGYDAmount the amount that would be minted, or 0 if it an error would occur\n @return err a non-empty error message in case an error would happen when minting"
            },
            "functionSelector": "56529403",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "dryMint",
            "nameLocation": "2877:7:72",
            "parameters": {
              "id": 16593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16588,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "2916:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16599,
                  "src": "2885:37:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MintAsset_$54456_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct DataTypes.MintAsset[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16586,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16585,
                        "name": "DataTypes.MintAsset",
                        "nameLocations": [
                          "2885:9:72",
                          "2895:9:72"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54456,
                        "src": "2885:19:72"
                      },
                      "referencedDeclaration": 54456,
                      "src": "2885:19:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintAsset_$54456_storage_ptr",
                        "typeString": "struct DataTypes.MintAsset"
                      }
                    },
                    "id": 16587,
                    "nodeType": "ArrayTypeName",
                    "src": "2885:21:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MintAsset_$54456_storage_$dyn_storage_ptr",
                      "typeString": "struct DataTypes.MintAsset[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16590,
                  "mutability": "mutable",
                  "name": "minReceivedAmount",
                  "nameLocation": "2932:17:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16599,
                  "src": "2924:25:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2924:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16592,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2959:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16599,
                  "src": "2951:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2884:83:72"
            },
            "returnParameters": {
              "id": 16598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16595,
                  "mutability": "mutable",
                  "name": "mintedGYDAmount",
                  "nameLocation": "3010:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16599,
                  "src": "3002:23:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3002:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16597,
                  "mutability": "mutable",
                  "name": "err",
                  "nameLocation": "3041:3:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16599,
                  "src": "3027:17:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16596,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3001:44:72"
            },
            "scope": 16615,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16614,
            "nodeType": "FunctionDefinition",
            "src": "3480:164:72",
            "nodes": [],
            "documentation": {
              "id": 16600,
              "nodeType": "StructuredDocumentation",
              "src": "3052:423:72",
              "text": "@notice Dry version of the `redeem` function\n exact outputs as specified by `tokens` and `amounts`\n @param gydToRedeem the maximum amount of GYD to redeem\n @param assets the output tokens and associated amounts to return against GYD\n @return outputAmounts the amounts receivd against the redeemed GYD\n @return err a non-empty error message in case an error would happen when redeeming"
            },
            "functionSelector": "4d8ca4c5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "dryRedeem",
            "nameLocation": "3489:9:72",
            "parameters": {
              "id": 16607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16602,
                  "mutability": "mutable",
                  "name": "gydToRedeem",
                  "nameLocation": "3507:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16614,
                  "src": "3499:19:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3499:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16606,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "3551:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16614,
                  "src": "3520:37:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RedeemAsset_$54465_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct DataTypes.RedeemAsset[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16604,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16603,
                        "name": "DataTypes.RedeemAsset",
                        "nameLocations": [
                          "3520:9:72",
                          "3530:11:72"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54465,
                        "src": "3520:21:72"
                      },
                      "referencedDeclaration": 54465,
                      "src": "3520:21:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemAsset_$54465_storage_ptr",
                        "typeString": "struct DataTypes.RedeemAsset"
                      }
                    },
                    "id": 16605,
                    "nodeType": "ArrayTypeName",
                    "src": "3520:23:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RedeemAsset_$54465_storage_$dyn_storage_ptr",
                      "typeString": "struct DataTypes.RedeemAsset[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3498:60:72"
            },
            "returnParameters": {
              "id": 16613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16610,
                  "mutability": "mutable",
                  "name": "outputAmounts",
                  "nameLocation": "3610:13:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16614,
                  "src": "3593:30:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16608,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3593:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16609,
                    "nodeType": "ArrayTypeName",
                    "src": "3593:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16612,
                  "mutability": "mutable",
                  "name": "err",
                  "nameLocation": "3639:3:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 16614,
                  "src": "3625:17:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16611,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3625:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3592:51:72"
            },
            "scope": 16615,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IMotherboard",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 16530,
          "nodeType": "StructuredDocumentation",
          "src": "326:105:72",
          "text": "@title IMotherboard is the central contract connecting the different pieces\n of the Gyro protocol"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          16615
        ],
        "name": "IMotherboard",
        "nameLocation": "441:12:72",
        "scope": 16616,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 72
}