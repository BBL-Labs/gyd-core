{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "VaultDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "VaultRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "deregisterVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "getVaultMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortFlowMemory",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortFlowThreshold",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataTypes.PersistedVaultMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listVaults",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortFlowMemory",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortFlowThreshold",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataTypes.PersistedVaultMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "registerVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialPrice",
          "type": "uint256"
        }
      ],
      "name": "setInitialPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deregisterVault(address)": "38e270ed",
    "getVaultMetadata(address)": "dc4f1e49",
    "listVaults()": "50cc258e",
    "registerVault(address,(uint256,uint256,uint256,uint256))": "e7464015",
    "setInitialPrice(address,uint256)": "95e5171a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"deregisterVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"getVaultMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listVaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"registerVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"}],\"name\":\"setInitialPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deregisterVault(address)\":{\"notice\":\"Deregister a vault\"},\"getVaultMetadata(address)\":{\"notice\":\"Returns the metadata for the given vault\"},\"listVaults()\":{\"notice\":\"Get the list of all vaults\"},\"registerVault(address,(uint256,uint256,uint256,uint256))\":{\"notice\":\"Registers a new vault\"},\"setInitialPrice(address,uint256)\":{\"notice\":\"sets the initial price of a vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IVaultRegistry.sol\":\"IVaultRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xb1b715c3744f62abdc6d472d6798f07e1bd07b66ad102375ca2730139cfd8330\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://345aaaab487357f53db2fdd204e5d7dfdfcc56bd5eaef5ab4ece49337043bc5e\",\"dweb:/ipfs/QmTQGQuN8V3NY6Z3ofpgVvzaQoHUr1TUGYvkfxJuPPnnzE\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494\",\"dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "VaultDeregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "VaultRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVaultMetadata",
          "outputs": [
            {
              "internalType": "struct DataTypes.PersistedVaultMetadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "initialPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortFlowMemory",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortFlowThreshold",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "listVaults",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "struct DataTypes.PersistedVaultMetadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "initialPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortFlowMemory",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortFlowThreshold",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setInitialPrice"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deregisterVault(address)": {
            "notice": "Deregister a vault"
          },
          "getVaultMetadata(address)": {
            "notice": "Returns the metadata for the given vault"
          },
          "listVaults()": {
            "notice": "Get the list of all vaults"
          },
          "registerVault(address,(uint256,uint256,uint256,uint256))": {
            "notice": "Registers a new vault"
          },
          "setInitialPrice(address,uint256)": {
            "notice": "sets the initial price of a vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "interfaces/IVaultRegistry.sol": "IVaultRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "interfaces/IVaultRegistry.sol": {
        "keccak256": "0xb1b715c3744f62abdc6d472d6798f07e1bd07b66ad102375ca2730139cfd8330",
        "urls": [
          "bzz-raw://345aaaab487357f53db2fdd204e5d7dfdfcc56bd5eaef5ab4ece49337043bc5e",
          "dweb:/ipfs/QmTQGQuN8V3NY6Z3ofpgVvzaQoHUr1TUGYvkfxJuPPnnzE"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/DataTypes.sol": {
        "keccak256": "0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29",
        "urls": [
          "bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494",
          "dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "interfaces/IVaultRegistry.sol",
    "id": 16864,
    "exportedSymbols": {
      "DataTypes": [
        54575
      ],
      "IVaultRegistry": [
        16863
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:847:77",
    "nodes": [
      {
        "id": 16814,
        "nodeType": "PragmaDirective",
        "src": "174:23:77",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16815,
        "nodeType": "ImportDirective",
        "src": "199:36:77",
        "nodes": [],
        "absolutePath": "libraries/DataTypes.sol",
        "file": "../libraries/DataTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16864,
        "sourceUnit": 54576,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16863,
        "nodeType": "ContractDefinition",
        "src": "237:783:77",
        "nodes": [
          {
            "id": 16819,
            "nodeType": "EventDefinition",
            "src": "268:45:77",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8e0930709528779f1112249aac8fcca15dbb9c595db31092c7bc7f954b567933",
            "name": "VaultRegistered",
            "nameLocation": "274:15:77",
            "parameters": {
              "id": 16818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16817,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "306:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 16819,
                  "src": "290:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "289:23:77"
            }
          },
          {
            "id": 16823,
            "nodeType": "EventDefinition",
            "src": "318:47:77",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f8769b01493238f5c26a42a7b690cb1ff2b53a7d89d9a57e6332458703db8b04",
            "name": "VaultDeregistered",
            "nameLocation": "324:17:77",
            "parameters": {
              "id": 16822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16821,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "358:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 16823,
                  "src": "342:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "341:23:77"
            }
          },
          {
            "id": 16832,
            "nodeType": "FunctionDefinition",
            "src": "428:129:77",
            "nodes": [],
            "documentation": {
              "id": 16824,
              "nodeType": "StructuredDocumentation",
              "src": "371:52:77",
              "text": "@notice Returns the metadata for the given vault"
            },
            "functionSelector": "dc4f1e49",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultMetadata",
            "nameLocation": "437:16:77",
            "parameters": {
              "id": 16827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16826,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "462:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 16832,
                  "src": "454:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "453:15:77"
            },
            "returnParameters": {
              "id": 16831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16832,
                  "src": "516:39:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersistedVaultMetadata_$54474_memory_ptr",
                    "typeString": "struct DataTypes.PersistedVaultMetadata"
                  },
                  "typeName": {
                    "id": 16829,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16828,
                      "name": "DataTypes.PersistedVaultMetadata",
                      "nameLocations": [
                        "516:9:77",
                        "526:22:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54474,
                      "src": "516:32:77"
                    },
                    "referencedDeclaration": 54474,
                    "src": "516:32:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersistedVaultMetadata_$54474_storage_ptr",
                      "typeString": "struct DataTypes.PersistedVaultMetadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "515:41:77"
            },
            "scope": 16863,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16839,
            "nodeType": "FunctionDefinition",
            "src": "606:63:77",
            "nodes": [],
            "documentation": {
              "id": 16833,
              "nodeType": "StructuredDocumentation",
              "src": "563:38:77",
              "text": "@notice Get the list of all vaults"
            },
            "functionSelector": "50cc258e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "listVaults",
            "nameLocation": "615:10:77",
            "parameters": {
              "id": 16834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:2:77"
            },
            "returnParameters": {
              "id": 16838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16839,
                  "src": "651:16:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16835,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "651:7:77",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16836,
                    "nodeType": "ArrayTypeName",
                    "src": "651:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "650:18:77"
            },
            "scope": 16863,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16848,
            "nodeType": "FunctionDefinition",
            "src": "713:88:77",
            "nodes": [],
            "documentation": {
              "id": 16840,
              "nodeType": "StructuredDocumentation",
              "src": "675:33:77",
              "text": "@notice Registers a new vault"
            },
            "functionSelector": "e7464015",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerVault",
            "nameLocation": "722:13:77",
            "parameters": {
              "id": 16846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16842,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "744:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 16848,
                  "src": "736:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16848,
                  "src": "751:39:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PersistedVaultMetadata_$54474_memory_ptr",
                    "typeString": "struct DataTypes.PersistedVaultMetadata"
                  },
                  "typeName": {
                    "id": 16844,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16843,
                      "name": "DataTypes.PersistedVaultMetadata",
                      "nameLocations": [
                        "751:9:77",
                        "761:22:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54474,
                      "src": "751:32:77"
                    },
                    "referencedDeclaration": 54474,
                    "src": "751:32:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PersistedVaultMetadata_$54474_storage_ptr",
                      "typeString": "struct DataTypes.PersistedVaultMetadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:56:77"
            },
            "returnParameters": {
              "id": 16847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:77"
            },
            "scope": 16863,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16854,
            "nodeType": "FunctionDefinition",
            "src": "842:49:77",
            "nodes": [],
            "documentation": {
              "id": 16849,
              "nodeType": "StructuredDocumentation",
              "src": "807:30:77",
              "text": "@notice Deregister a vault"
            },
            "functionSelector": "38e270ed",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deregisterVault",
            "nameLocation": "851:15:77",
            "parameters": {
              "id": 16852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16851,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "875:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 16854,
                  "src": "867:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "866:15:77"
            },
            "returnParameters": {
              "id": 16853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "890:0:77"
            },
            "scope": 16863,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 16862,
            "nodeType": "FunctionDefinition",
            "src": "947:71:77",
            "nodes": [],
            "documentation": {
              "id": 16855,
              "nodeType": "StructuredDocumentation",
              "src": "897:45:77",
              "text": "@notice sets the initial price of a vault"
            },
            "functionSelector": "95e5171a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInitialPrice",
            "nameLocation": "956:15:77",
            "parameters": {
              "id": 16860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16857,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "980:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 16862,
                  "src": "972:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16859,
                  "mutability": "mutable",
                  "name": "initialPrice",
                  "nameLocation": "995:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 16862,
                  "src": "987:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:37:77"
            },
            "returnParameters": {
              "id": 16861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1017:0:77"
            },
            "scope": 16863,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IVaultRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          16863
        ],
        "name": "IVaultRegistry",
        "nameLocation": "247:14:77",
        "scope": 16864,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 77
}