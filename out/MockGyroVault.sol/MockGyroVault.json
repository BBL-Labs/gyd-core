{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "underlying_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lpTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lpTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "depositFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lpTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dryDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "error",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dryWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lpTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "error",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategyAddress",
          "type": "address"
        }
      ],
      "name": "setStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "setTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultType",
      "outputs": [
        {
          "internalType": "enum Vaults.Type",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lpTokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "464:2459:36:-:0;;;687:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:132;;;;;;;;;;;;;-1:-1:-1;;;1976:113:132;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:132;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:132;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;752:11:36::1;:25:::0;;-1:-1:-1;;;;;;752:25:36::1;-1:-1:-1::0;;;;;752:25:36;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;800:12:36::1;787:25;::::0;464:2459;;14:290:168;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:168;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:168:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:168;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:168;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:168;;;2875:26;2826:89;-1:-1:-1;;1630:1:168;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:168;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:168;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:168;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:168:o;:::-;464:2459:36;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c8063625adaf2116100de578063a9059cbb11610097578063cc04feff11610071578063cc04feff14610362578063dd62ed3e1461037a578063e2bbb1581461038d578063eae4c19f146103a057600080fd5b8063a9059cbb14610332578063aa6ca80814610345578063c70920bc1461035a57600080fd5b8063625adaf2146102a55780636f307dc3146102b857806370a08231146102dd57806395d89b4114610306578063a457c2d71461030e578063a8c62e761461032157600080fd5b80633950935111610130578063395093511461021f5780633ba0b9a914610232578063441a3e70146102405780634ac032be146102535780634cf5fbf514610262578063550d2b621461027557600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de57806333a100ca146101ed575b600080fd5b6101806103c7565b60405161018d9190610fe6565b60405180910390f35b6101a96101a4366004611015565b610459565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d936600461103f565b610473565b6040516012815260200161018d565b61021d6101fb36600461107b565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b005b6101a961022d366004611015565b610497565b670de0b6b3a76400006101bd565b6101bd61024e366004611096565b6104b9565b600060405161018d91906110b8565b6101bd6102703660046110e0565b610542565b610297610283366004611096565b506040805160208101909152600081529091565b60405161018d929190611113565b61021d6102b336600461112c565b61056f565b6006546001600160a01b03165b6040516001600160a01b03909116815260200161018d565b6101bd6102eb36600461107b565b6001600160a01b031660009081526020819052604090205490565b610180610580565b6101a961031c366004611015565b61058f565b6005546001600160a01b03166102c5565b6101a9610340366004611015565b61060f565b61034d61061d565b60405161018d91906111a1565b6101bd61067e565b610297610370366004611096565b5060009160609150565b6101bd6103883660046111ee565b6106f0565b6101bd61039b366004611096565b61071b565b6101bd7f000000000000000000000000000000000000000000000000000000000000000081565b6060600380546103d690611221565b80601f016020809104026020016040519081016040528092919081815260200182805461040290611221565b801561044f5780601f106104245761010080835404028352916020019161044f565b820191906000526020600020905b81548152906001019060200180831161043257829003601f168201915b5050505050905090565b60003361046781858561072f565b60019150505b92915050565b600033610481858285610853565b61048c8585856108cd565b506001949350505050565b6000336104678185856104aa83836106f0565b6104b4919061125b565b61072f565b60006104c53384610a71565b60065460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053a919061127c565b509192915050565b60065460009061055d906001600160a01b0316338686610ba3565b6105678484610bfd565b509092915050565b61057b60078383610f1e565b505050565b6060600480546103d690611221565b6000338161059d82866106f0565b9050838110156106025760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61048c828686840361072f565b6000336104678185856108cd565b6060600780548060200260200160405190810160405280929190818152602001828054801561044f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610657575050505050905090565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb919061129e565b905090565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610728338484610542565b9392505050565b6001600160a01b0383166107915760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105f9565b6001600160a01b0382166107f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105f9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061085f84846106f0565b905060001981146108c757818110156108ba5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105f9565b6108c7848484840361072f565b50505050565b6001600160a01b0383166109315760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105f9565b6001600160a01b0382166109935760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105f9565b6001600160a01b03831660009081526020819052604090205481811015610a0b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105f9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108c7565b6001600160a01b038216610ad15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105f9565b6001600160a01b03821660009081526020819052604090205481811015610b455760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105f9565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526108c7908590610cbc565b6001600160a01b038216610c535760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105f9565b8060026000828254610c65919061125b565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610d11826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d8e9092919063ffffffff16565b80519091501561057b5780806020019051810190610d2f919061127c565b61057b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105f9565b6060610d9d8484600085610da5565b949350505050565b606082471015610e065760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105f9565b600080866001600160a01b03168587604051610e2291906112b7565b60006040518083038185875af1925050503d8060008114610e5f576040519150601f19603f3d011682016040523d82523d6000602084013e610e64565b606091505b5091509150610e7587838387610e80565b979650505050505050565b60608315610eef578251600003610ee8576001600160a01b0385163b610ee85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105f9565b5081610d9d565b610d9d8383815115610f045781518083602001fd5b8060405162461bcd60e51b81526004016105f99190610fe6565b828054828255906000526020600020908101928215610f71579160200282015b82811115610f715781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610f3e565b50610f7d929150610f81565b5090565b5b80821115610f7d5760008155600101610f82565b60005b83811015610fb1578181015183820152602001610f99565b50506000910152565b60008151808452610fd2816020860160208601610f96565b601f01601f19169290920160200192915050565b6020815260006107286020830184610fba565b80356001600160a01b038116811461101057600080fd5b919050565b6000806040838503121561102857600080fd5b61103183610ff9565b946020939093013593505050565b60008060006060848603121561105457600080fd5b61105d84610ff9565b925061106b60208501610ff9565b9150604084013590509250925092565b60006020828403121561108d57600080fd5b61072882610ff9565b600080604083850312156110a957600080fd5b50508035926020909101359150565b60208101600583106110da57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000606084860312156110f557600080fd5b6110fe84610ff9565b95602085013595506040909401359392505050565b828152604060208201526000610d9d6040830184610fba565b6000806020838503121561113f57600080fd5b823567ffffffffffffffff8082111561115757600080fd5b818501915085601f83011261116b57600080fd5b81358181111561117a57600080fd5b8660208260051b850101111561118f57600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b818110156111e25783516001600160a01b0316835292840192918401916001016111bd565b50909695505050505050565b6000806040838503121561120157600080fd5b61120a83610ff9565b915061121860208401610ff9565b90509250929050565b600181811c9082168061123557607f821691505b60208210810361125557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561046d57634e487b7160e01b600052601160045260246000fd5b60006020828403121561128e57600080fd5b8151801515811461072857600080fd5b6000602082840312156112b057600080fd5b5051919050565b600082516112c9818460208701610f96565b919091019291505056fea26469706673582212204889f40b7638906f0a76040b3ff1e1753f5c7a617663169687b74212fa1fd4da64736f6c63430008110033",
    "sourceMap": "464:2459:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:132;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1372:14:168;;1365:22;1347:41;;1335:2;1320:18;4431:197:132;1207:187:168;3242:106:132;3329:12;;3242:106;;;1545:25:168;;;1533:2;1518:18;3242:106:132;1399:177:168;5190:286:132;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;2056:36:168;;2044:2;2029:18;3091:91:132;1914:184:168;2813:108:36;;;;;;:::i;:::-;2887:9;:27;;-1:-1:-1;;;;;;2887:27:36;-1:-1:-1;;;;;2887:27:36;;;;;;;;;;2813:108;;;5871:234:132;;;;;;:::i;:::-;;:::i;1598:101:36:-;364:4:159;1598:101:36;;2247:284;;;;;;:::i;:::-;;:::i;825:109::-;878:11;825:109;;;;;;:::i;1705:320::-;;;;;;:::i;:::-;;:::i;2031:210::-;;;;;;:::i;:::-;-1:-1:-1;2208:26:36;;;;;;;;;-1:-1:-1;2208:26:36;;2216:13;;2031:210;;;;;;;;;:::i;1047:87::-;;;;;;:::i;:::-;;:::i;1140:98::-;1220:11;;-1:-1:-1;;;;;1220:11:36;1140:98;;;-1:-1:-1;;;;;4313:32:168;;;4295:51;;4283:2;4268:18;1140:98:36;4149:203:168;3406:125:132;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:132;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;2713:94:36:-;2791:9;;-1:-1:-1;;;;;2791:9:36;2713:94;;3727:189:132;;;;;;:::i;:::-;;:::i;940:101:36:-;;;:::i;:::-;;;;;;;:::i;1244:136::-;;;:::i;2537:170::-;;;;;;:::i;:::-;-1:-1:-1;2657:21:36;;2680:19;;-1:-1:-1;2537:170:36;3974:149:132;;;;;;:::i;:::-;;:::i;1386:206:36:-;;;;;;:::i;:::-;;:::i;645:35::-;;;;;2154:98:132;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:142;4568:32:132;719:10:142;4584:7:132;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:142;5373:38:132;5389:4;719:10:142;5404:6:132;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:132;;5190:286;-1:-1:-1;;;;5190:286:132:o;5871:234::-;5959:4;719:10:142;6013:64:132;719:10:142;6029:7:132;6066:10;6038:25;719:10:142;6029:7:132;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2247:284:36:-;2351:21;2388:35;2394:10;2406:16;2388:5;:35::i;:::-;2440:11;;2433:58;;-1:-1:-1;;;2433:58:36;;2462:10;2433:58;;;6087:51:168;6154:18;;;6147:34;;;-1:-1:-1;;;;;2440:11:36;;;;2433:28;;6060:18:168;;2433:58:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2508:16:36;;2247:284;-1:-1:-1;;2247:284:36:o;1705:320::-;1876:11;;1833:24;;1869:76;;-1:-1:-1;;;;;1876:11:36;1906:10;1918:11;1931:13;1869:36;:76::i;:::-;1955:33;1961:11;1974:13;1955:5;:33::i;:::-;-1:-1:-1;2005:13:36;;1705:320;-1:-1:-1;;1705:320:36:o;1047:87::-;1111:16;:7;1121:6;;1111:16;:::i;:::-;;1047:87;;:::o;2365:102:132:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:142;6685:4:132;6766:25;719:10:142;6783:7:132;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:132;;6676:2:168;6801:85:132;;;6658:21:168;6715:2;6695:18;;;6688:30;6754:34;6734:18;;;6727:62;-1:-1:-1;;;6805:18:168;;;6798:35;6850:19;;6801:85:132;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:142;3860:28:132;719:10:142;3877:2:132;3881:6;3860:9;:28::i;940:101:36:-;993:15;1027:7;1020:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1020:14:36;;;;;;;;;;;;;;;;;;;;;;940:101;:::o;1244:136::-;1336:11;;1329:44;;-1:-1:-1;;;1329:44:36;;1367:4;1329:44;;;4295:51:168;1303:7:36;;-1:-1:-1;;;;;1336:11:36;;1329:29;;4268:18:168;;1329:44:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1322:51;;1244:136;:::o;3974:149:132:-;-1:-1:-1;;;;;4089:18:132;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;1386:206:36:-;1493:24;1540:45;1551:10;1563:13;1578:6;1540:10;:45::i;:::-;1533:52;1386:206;-1:-1:-1;;;1386:206:36:o;10504:370:132:-;-1:-1:-1;;;;;10635:19:132;;10627:68;;;;-1:-1:-1;;;10627:68:132;;7271:2:168;10627:68:132;;;7253:21:168;7310:2;7290:18;;;7283:30;7349:34;7329:18;;;7322:62;-1:-1:-1;;;7400:18:168;;;7393:34;7444:19;;10627:68:132;7069:400:168;10627:68:132;-1:-1:-1;;;;;10713:21:132;;10705:68;;;;-1:-1:-1;;;10705:68:132;;7676:2:168;10705:68:132;;;7658:21:168;7715:2;7695:18;;;7688:30;7754:34;7734:18;;;7727:62;-1:-1:-1;;;7805:18:168;;;7798:32;7847:19;;10705:68:132;7474:398:168;10705:68:132;-1:-1:-1;;;;;10784:18:132;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1545:25:168;;;10835:32:132;;1518:18:168;10835:32:132;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:132;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:132;;8079:2:168;11404:68:132;;;8061:21:168;8118:2;8098:18;;;8091:30;8157:31;8137:18;;;8130:59;8206:18;;11404:68:132;7877:353:168;11404:68:132;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:132;;7591:68;;;;-1:-1:-1;;;7591:68:132;;8437:2:168;7591:68:132;;;8419:21:168;8476:2;8456:18;;;8449:30;8515:34;8495:18;;;8488:62;-1:-1:-1;;;8566:18:168;;;8559:35;8611:19;;7591:68:132;8235:401:168;7591:68:132;-1:-1:-1;;;;;7677:16:132;;7669:64;;;;-1:-1:-1;;;7669:64:132;;8843:2:168;7669:64:132;;;8825:21:168;8882:2;8862:18;;;8855:30;8921:34;8901:18;;;8894:62;-1:-1:-1;;;8972:18:168;;;8965:33;9015:19;;7669:64:132;8641:399:168;7669:64:132;-1:-1:-1;;;;;7815:15:132;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:132;;9247:2:168;7840:72:132;;;9229:21:168;9286:2;9266:18;;;9259:30;9325:34;9305:18;;;9298:62;-1:-1:-1;;;9376:18:168;;;9369:36;9422:19;;7840:72:132;9045:402:168;7840:72:132;-1:-1:-1;;;;;7946:15:132;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1545:25:168;;;8161:13:132;;8210:26;;1518:18:168;8210:26:132;;;;;;;8247:37;1047:87:36;9422:659:132;-1:-1:-1;;;;;9505:21:132;;9497:67;;;;-1:-1:-1;;;9497:67:132;;9654:2:168;9497:67:132;;;9636:21:168;9693:2;9673:18;;;9666:30;9732:34;9712:18;;;9705:62;-1:-1:-1;;;9783:18:168;;;9776:31;9824:19;;9497:67:132;9452:397:168;9497:67:132;-1:-1:-1;;;;;9660:18:132;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:132;;10056:2:168;9688:71:132;;;10038:21:168;10095:2;10075:18;;;10068:30;10134:34;10114:18;;;10107:62;-1:-1:-1;;;10185:18:168;;;10178:32;10227:19;;9688:71:132;9854:398:168;9688:71:132;-1:-1:-1;;;;;9793:18:132;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1545:25:168;;;9793:9:132;;:18;9978:37;;1518:18:168;9978:37:132;;;;;;;1111:16:36;1047:87;;:::o;974:241:136:-;1139:68;;;-1:-1:-1;;;;;10515:15:168;;;1139:68:136;;;10497:34:168;10567:15;;10547:18;;;10540:43;10599:18;;;;10592:34;;;1139:68:136;;;;;;;;;;10432:18:168;;;;1139:68:136;;;;;;;;-1:-1:-1;;;;;1139:68:136;-1:-1:-1;;;1139:68:136;;;1112:96;;1132:5;;1112:19;:96::i;8567:535:132:-;-1:-1:-1;;;;;8650:21:132;;8642:65;;;;-1:-1:-1;;;8642:65:132;;10839:2:168;8642:65:132;;;10821:21:168;10878:2;10858:18;;;10851:30;10917:33;10897:18;;;10890:61;10968:18;;8642:65:132;10637:355:168;8642:65:132;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:132;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1545:25:168;;;8999:37:132;;1518:18:168;8999:37:132;;;;;;;8567:535;;:::o;3747:706:136:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:136;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:136;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:136;;11199:2:168;4351:85:136;;;11181:21:168;11238:2;11218:18;;;11211:30;11277:34;11257:18;;;11250:62;-1:-1:-1;;;11328:18:168;;;11321:40;11378:19;;4351:85:136;10997:406:168;3873:223:141;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:141:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:141;;11610:2:168;5149:81:141;;;11592:21:168;11649:2;11629:18;;;11622:30;11688:34;11668:18;;;11661:62;-1:-1:-1;;;11739:18:168;;;11732:36;11785:19;;5149:81:141;11408:402:168;5149:81:141;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:141;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:141:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:141;;;7908:60;;;;-1:-1:-1;;;7908:60:141;;12309:2:168;7908:60:141;;;12291:21:168;12348:2;12328:18;;;12321:30;12387:31;12367:18;;;12360:59;12436:18;;7908:60:141;12107:353:168;7908:60:141;-1:-1:-1;8003:10:141;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:141;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:250:168;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:168;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:168;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:168:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:173::-;838:20;;-1:-1:-1;;;;;887:31:168;;877:42;;867:70;;933:1;930;923:12;867:70;770:173;;;:::o;948:254::-;1016:6;1024;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;1116:29;1135:9;1116:29;:::i;:::-;1106:39;1192:2;1177:18;;;;1164:32;;-1:-1:-1;;;948:254:168:o;1581:328::-;1658:6;1666;1674;1727:2;1715:9;1706:7;1702:23;1698:32;1695:52;;;1743:1;1740;1733:12;1695:52;1766:29;1785:9;1766:29;:::i;:::-;1756:39;;1814:38;1848:2;1837:9;1833:18;1814:38;:::i;:::-;1804:48;;1899:2;1888:9;1884:18;1871:32;1861:42;;1581:328;;;;;:::o;2103:186::-;2162:6;2215:2;2203:9;2194:7;2190:23;2186:32;2183:52;;;2231:1;2228;2221:12;2183:52;2254:29;2273:9;2254:29;:::i;2294:248::-;2362:6;2370;2423:2;2411:9;2402:7;2398:23;2394:32;2391:52;;;2439:1;2436;2429:12;2391:52;-1:-1:-1;;2462:23:168;;;2532:2;2517:18;;;2504:32;;-1:-1:-1;2294:248:168:o;2547:338::-;2689:2;2674:18;;2722:1;2711:13;;2701:144;;2767:10;2762:3;2758:20;2755:1;2748:31;2802:4;2799:1;2792:15;2830:4;2827:1;2820:15;2701:144;2854:25;;;2547:338;:::o;2890:322::-;2967:6;2975;2983;3036:2;3024:9;3015:7;3011:23;3007:32;3004:52;;;3052:1;3049;3042:12;3004:52;3075:29;3094:9;3075:29;:::i;:::-;3065:39;3151:2;3136:18;;3123:32;;-1:-1:-1;3202:2:168;3187:18;;;3174:32;;2890:322;-1:-1:-1;;;2890:322:168:o;3217:291::-;3394:6;3383:9;3376:25;3437:2;3432;3421:9;3417:18;3410:30;3357:4;3457:45;3498:2;3487:9;3483:18;3475:6;3457:45;:::i;3513:631::-;3615:6;3623;3676:2;3664:9;3655:7;3651:23;3647:32;3644:52;;;3692:1;3689;3682:12;3644:52;3732:9;3719:23;3761:18;3802:2;3794:6;3791:14;3788:34;;;3818:1;3815;3808:12;3788:34;3856:6;3845:9;3841:22;3831:32;;3901:7;3894:4;3890:2;3886:13;3882:27;3872:55;;3923:1;3920;3913:12;3872:55;3963:2;3950:16;3989:2;3981:6;3978:14;3975:34;;;4005:1;4002;3995:12;3975:34;4058:7;4053:2;4043:6;4040:1;4036:14;4032:2;4028:23;4024:32;4021:45;4018:65;;;4079:1;4076;4069:12;4018:65;4110:2;4102:11;;;;;4132:6;;-1:-1:-1;3513:631:168;;-1:-1:-1;;;;3513:631:168:o;4357:674::-;4544:2;4596:21;;;4666:13;;4569:18;;;4688:22;;;4515:4;;4544:2;4767:15;;;;4741:2;4726:18;;;4515:4;4810:195;4824:6;4821:1;4818:13;4810:195;;;4889:13;;-1:-1:-1;;;;;4885:39:168;4873:52;;4980:15;;;;4945:12;;;;4921:1;4839:9;4810:195;;;-1:-1:-1;5022:3:168;;4357:674;-1:-1:-1;;;;;;4357:674:168:o;5036:260::-;5104:6;5112;5165:2;5153:9;5144:7;5140:23;5136:32;5133:52;;;5181:1;5178;5171:12;5133:52;5204:29;5223:9;5204:29;:::i;:::-;5194:39;;5252:38;5286:2;5275:9;5271:18;5252:38;:::i;:::-;5242:48;;5036:260;;;;;:::o;5301:380::-;5380:1;5376:12;;;;5423;;;5444:61;;5498:4;5490:6;5486:17;5476:27;;5444:61;5551:2;5543:6;5540:14;5520:18;5517:38;5514:161;;5597:10;5592:3;5588:20;5585:1;5578:31;5632:4;5629:1;5622:15;5660:4;5657:1;5650:15;5514:161;;5301:380;;;:::o;5686:222::-;5751:9;;;5772:10;;;5769:133;;;5824:10;5819:3;5815:20;5812:1;5805:31;5859:4;5856:1;5849:15;5887:4;5884:1;5877:15;6192:277;6259:6;6312:2;6300:9;6291:7;6287:23;6283:32;6280:52;;;6328:1;6325;6318:12;6280:52;6360:9;6354:16;6413:5;6406:13;6399:21;6392:5;6389:32;6379:60;;6435:1;6432;6425:12;6880:184;6950:6;7003:2;6991:9;6982:7;6978:23;6974:32;6971:52;;;7019:1;7016;7009:12;6971:52;-1:-1:-1;7042:16:168;;6880:184;-1:-1:-1;6880:184:168:o;11815:287::-;11944:3;11982:6;11976:13;11998:66;12057:6;12052:3;12045:4;12037:6;12033:17;11998:66;:::i;:::-;12080:16;;;;;11815:287;-1:-1:-1;;11815:287:168:o",
    "linkReferences": {},
    "immutableReferences": {
      "12643": [
        {
          "start": 933,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deployedAt()": "eae4c19f",
    "deposit(uint256,uint256)": "e2bbb158",
    "depositFor(address,uint256,uint256)": "4cf5fbf5",
    "dryDeposit(uint256,uint256)": "550d2b62",
    "dryWithdraw(uint256,uint256)": "cc04feff",
    "exchangeRate()": "3ba0b9a9",
    "getTokens()": "aa6ca808",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "setStrategy(address)": "33a100ca",
    "setTokens(address[])": "625adaf2",
    "strategy()": "a8c62e76",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "totalUnderlying()": "c70920bc",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "underlying()": "6f307dc3",
    "vaultType()": "4ac032be",
    "withdraw(uint256,uint256)": "441a3e70"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dryDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dryWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"}],\"name\":\"setStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"setTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultType\",\"outputs\":[{\"internalType\":\"enum Vaults.Type\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"exchangeRate()\":{\"returns\":{\"_0\":\"The exchange rate between an underlying tokens and the token of this vault\"}},\"getTokens()\":{\"returns\":{\"_0\":\"The token associated with this vault In the case of an LP token, this will be the underlying tokens associated to it (e.g. [ETH, DAI] for a ETH/DAI pool LP token or [USDC] for aUSDC) In most cases, the tokens returned will not be LP tokens\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setStrategy(address)\":{\"params\":{\"strategyAddress\":\"the address of the strategy contract that should follow the `IStrategy` interface\"}},\"strategy()\":{\"returns\":{\"_0\":\"The address of the current strategy used by the vault\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalUnderlying()\":{\"returns\":{\"_0\":\"The total amount of underlying tokens in the vault\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"underlying()\":{\"returns\":{\"_0\":\"The token associated with this vault This can be any type of token but will likely be an LP token in practice\"}},\"vaultType()\":{\"returns\":{\"_0\":\"The type of the vault\"}}},\"stateVariables\":{\"deployedAt\":{\"return\":\"the block at which the vault has been deployed\",\"returns\":{\"_0\":\"the block at which the vault has been deployed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setStrategy(address)\":{\"notice\":\"Sets the address of the strategy to use for this vault This will be used through governance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/testing/MockGyroVault.sol\":\"MockGyroVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/testing/MockGyroVault.sol\":{\"keccak256\":\"0x1d60b054fe764fc6649a318088777a75ba11c0429347f1316849295bd2dcbb91\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://7b556431a960df790fa298be1accf934d8dfb30970134b1db828544043755fe7\",\"dweb:/ipfs/QmbRNokhjhsBhj7bVRXoomYcP3QuvK1LXy5morGtzd4RBi\"]},\"interfaces/IGyroVault.sol\":{\"keccak256\":\"0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4\",\"dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"libraries/Errors.sol\":{\"keccak256\":\"0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55\",\"dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC\"]},\"libraries/FixedPoint.sol\":{\"keccak256\":\"0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235\",\"dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz\"]},\"libraries/LogExpMath.sol\":{\"keccak256\":\"0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4\",\"dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm\"]},\"libraries/Vaults.sol\":{\"keccak256\":\"0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b\",\"dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "underlying_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "deployedAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokenAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokenAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "dryDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "error",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "dryWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "error",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "exchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokens",
          "outputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategyAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "vaultType",
          "outputs": [
            {
              "internalType": "enum Vaults.Type",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "exchangeRate()": {
            "returns": {
              "_0": "The exchange rate between an underlying tokens and the token of this vault"
            }
          },
          "getTokens()": {
            "returns": {
              "_0": "The token associated with this vault In the case of an LP token, this will be the underlying tokens associated to it (e.g. [ETH, DAI] for a ETH/DAI pool LP token or [USDC] for aUSDC) In most cases, the tokens returned will not be LP tokens"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "setStrategy(address)": {
            "params": {
              "strategyAddress": "the address of the strategy contract that should follow the `IStrategy` interface"
            }
          },
          "strategy()": {
            "returns": {
              "_0": "The address of the current strategy used by the vault"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "totalUnderlying()": {
            "returns": {
              "_0": "The total amount of underlying tokens in the vault"
            }
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "underlying()": {
            "returns": {
              "_0": "The token associated with this vault This can be any type of token but will likely be an LP token in practice"
            }
          },
          "vaultType()": {
            "returns": {
              "_0": "The type of the vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "setStrategy(address)": {
            "notice": "Sets the address of the strategy to use for this vault This will be used through governance"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/testing/MockGyroVault.sol": "MockGyroVault"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/testing/MockGyroVault.sol": {
        "keccak256": "0x1d60b054fe764fc6649a318088777a75ba11c0429347f1316849295bd2dcbb91",
        "urls": [
          "bzz-raw://7b556431a960df790fa298be1accf934d8dfb30970134b1db828544043755fe7",
          "dweb:/ipfs/QmbRNokhjhsBhj7bVRXoomYcP3QuvK1LXy5morGtzd4RBi"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGyroVault.sol": {
        "keccak256": "0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644",
        "urls": [
          "bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4",
          "dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "libraries/Errors.sol": {
        "keccak256": "0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd",
        "urls": [
          "bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55",
          "dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/FixedPoint.sol": {
        "keccak256": "0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f",
        "urls": [
          "bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235",
          "dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/LogExpMath.sol": {
        "keccak256": "0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6",
        "urls": [
          "bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4",
          "dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Vaults.sol": {
        "keccak256": "0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f",
        "urls": [
          "bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b",
          "dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/testing/MockGyroVault.sol",
    "id": 12861,
    "exportedSymbols": {
      "Address": [
        49365
      ],
      "Context": [
        49387
      ],
      "ERC20": [
        47509
      ],
      "Errors": [
        56112
      ],
      "FixedPoint": [
        56482
      ],
      "IERC20": [
        47587
      ],
      "IERC20Metadata": [
        47612
      ],
      "IERC20Permit": [
        47648
      ],
      "IGyroVault": [
        16470
      ],
      "LogExpMath": [
        57864
      ],
      "MockGyroVault": [
        12860
      ],
      "SafeERC20": [
        47929
      ],
      "Vaults": [
        58285
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:2750:36",
    "nodes": [
      {
        "id": 12620,
        "nodeType": "PragmaDirective",
        "src": "174:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 12621,
        "nodeType": "ImportDirective",
        "src": "199:55:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12861,
        "sourceUnit": 47510,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12622,
        "nodeType": "ImportDirective",
        "src": "255:65:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12861,
        "sourceUnit": 47930,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12623,
        "nodeType": "ImportDirective",
        "src": "321:56:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12861,
        "sourceUnit": 47588,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12624,
        "nodeType": "ImportDirective",
        "src": "379:41:36",
        "nodes": [],
        "absolutePath": "interfaces/IGyroVault.sol",
        "file": "../../interfaces/IGyroVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12861,
        "sourceUnit": 16471,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12625,
        "nodeType": "ImportDirective",
        "src": "422:40:36",
        "nodes": [],
        "absolutePath": "libraries/FixedPoint.sol",
        "file": "../../libraries/FixedPoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12861,
        "sourceUnit": 56483,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12860,
        "nodeType": "ContractDefinition",
        "src": "464:2459:36",
        "nodes": [
          {
            "id": 12633,
            "nodeType": "UsingForDirective",
            "src": "514:27:36",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12630,
              "name": "SafeERC20",
              "nameLocations": [
                "520:9:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47929,
              "src": "520:9:36"
            },
            "typeName": {
              "id": 12632,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12631,
                "name": "IERC20",
                "nameLocations": [
                  "534:6:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47587,
                "src": "534:6:36"
              },
              "referencedDeclaration": 47587,
              "src": "534:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$47587",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 12635,
            "nodeType": "VariableDeclaration",
            "src": "547:26:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_strategy",
            "nameLocation": "564:9:36",
            "scope": 12860,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12634,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "547:7:36",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12637,
            "nodeType": "VariableDeclaration",
            "src": "579:28:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_underlying",
            "nameLocation": "596:11:36",
            "scope": 12860,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12636,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "579:7:36",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12641,
            "nodeType": "VariableDeclaration",
            "src": "613:25:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokens",
            "nameLocation": "631:7:36",
            "scope": 12860,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_storage",
              "typeString": "contract IERC20[]"
            },
            "typeName": {
              "baseType": {
                "id": 12639,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 12638,
                  "name": "IERC20",
                  "nameLocations": [
                    "613:6:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47587,
                  "src": "613:6:36"
                },
                "referencedDeclaration": 47587,
                "src": "613:6:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$47587",
                  "typeString": "contract IERC20"
                }
              },
              "id": 12640,
              "nodeType": "ArrayTypeName",
              "src": "613:8:36",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_storage_ptr",
                "typeString": "contract IERC20[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12643,
            "nodeType": "VariableDeclaration",
            "src": "645:35:36",
            "nodes": [],
            "baseFunctions": [
              16469
            ],
            "constant": false,
            "functionSelector": "eae4c19f",
            "mutability": "immutable",
            "name": "deployedAt",
            "nameLocation": "670:10:36",
            "scope": 12860,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12642,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "645:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12662,
            "nodeType": "FunctionDefinition",
            "src": "687:132:36",
            "nodes": [],
            "body": {
              "id": 12661,
              "nodeType": "Block",
              "src": "742:77:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12652,
                      "name": "_underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12637,
                      "src": "752:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12653,
                      "name": "underlying_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12645,
                      "src": "766:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "752:25:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12655,
                  "nodeType": "ExpressionStatement",
                  "src": "752:25:36"
                },
                {
                  "expression": {
                    "id": 12659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12656,
                      "name": "deployedAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12643,
                      "src": "787:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 12657,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "800:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 12658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "806:6:36",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "800:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "787:25:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12660,
                  "nodeType": "ExpressionStatement",
                  "src": "787:25:36"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5661756c74",
                    "id": 12648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "726:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8d03f8e727eaf836840d08da04cd9ecc9773328dd38f4a6c7b84a9ec2b88b7c7",
                      "typeString": "literal_string \"Vault\""
                    },
                    "value": "Vault"
                  },
                  {
                    "hexValue": "564c54",
                    "id": 12649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "735:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57f94dcd57dc21f6813290f4406d2d8191a95db6faa2ccea1a9c084da3fe7b77",
                      "typeString": "literal_string \"VLT\""
                    },
                    "value": "VLT"
                  }
                ],
                "id": 12650,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12647,
                  "name": "ERC20",
                  "nameLocations": [
                    "720:5:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47509,
                  "src": "720:5:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "720:21:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12645,
                  "mutability": "mutable",
                  "name": "underlying_",
                  "nameLocation": "707:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12662,
                  "src": "699:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "698:21:36"
            },
            "returnParameters": {
              "id": 12651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "742:0:36"
            },
            "scope": 12860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12674,
            "nodeType": "FunctionDefinition",
            "src": "825:109:36",
            "nodes": [],
            "body": {
              "id": 12673,
              "nodeType": "Block",
              "src": "891:43:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 12669,
                        "name": "Vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58285,
                        "src": "908:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Vaults_$58285_$",
                          "typeString": "type(library Vaults)"
                        }
                      },
                      "id": 12670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "915:4:36",
                      "memberName": "Type",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58284,
                      "src": "908:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Type_$58284_$",
                        "typeString": "type(enum Vaults.Type)"
                      }
                    },
                    "id": 12671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "920:7:36",
                    "memberName": "GENERIC",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 58279,
                    "src": "908:19:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Type_$58284",
                      "typeString": "enum Vaults.Type"
                    }
                  },
                  "functionReturnParameters": 12668,
                  "id": 12672,
                  "nodeType": "Return",
                  "src": "901:26:36"
                }
              ]
            },
            "baseFunctions": [
              16369
            ],
            "functionSelector": "4ac032be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultType",
            "nameLocation": "834:9:36",
            "overrides": {
              "id": 12664,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "860:8:36"
            },
            "parameters": {
              "id": 12663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:2:36"
            },
            "returnParameters": {
              "id": 12668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12674,
                  "src": "878:11:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Type_$58284",
                    "typeString": "enum Vaults.Type"
                  },
                  "typeName": {
                    "id": 12666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12665,
                      "name": "Vaults.Type",
                      "nameLocations": [
                        "878:6:36",
                        "885:4:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58284,
                      "src": "878:11:36"
                    },
                    "referencedDeclaration": 58284,
                    "src": "878:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Type_$58284",
                      "typeString": "enum Vaults.Type"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:13:36"
            },
            "scope": 12860,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12685,
            "nodeType": "FunctionDefinition",
            "src": "940:101:36",
            "nodes": [],
            "body": {
              "id": 12684,
              "nodeType": "Block",
              "src": "1010:31:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12682,
                    "name": "_tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12641,
                    "src": "1027:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "functionReturnParameters": 12681,
                  "id": 12683,
                  "nodeType": "Return",
                  "src": "1020:14:36"
                }
              ]
            },
            "baseFunctions": [
              16383
            ],
            "functionSelector": "aa6ca808",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nameLocation": "949:9:36",
            "overrides": {
              "id": 12676,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "975:8:36"
            },
            "parameters": {
              "id": 12675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:2:36"
            },
            "returnParameters": {
              "id": 12681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12685,
                  "src": "993:15:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12678,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12677,
                        "name": "IERC20",
                        "nameLocations": [
                          "993:6:36"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 47587,
                        "src": "993:6:36"
                      },
                      "referencedDeclaration": 47587,
                      "src": "993:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$47587",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 12679,
                    "nodeType": "ArrayTypeName",
                    "src": "993:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:17:36"
            },
            "scope": 12860,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12697,
            "nodeType": "FunctionDefinition",
            "src": "1047:87:36",
            "nodes": [],
            "body": {
              "id": 12696,
              "nodeType": "Block",
              "src": "1101:33:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12692,
                      "name": "_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12641,
                      "src": "1111:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_storage",
                        "typeString": "contract IERC20[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12693,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12689,
                      "src": "1121:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_calldata_ptr",
                        "typeString": "contract IERC20[] calldata"
                      }
                    },
                    "src": "1111:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "id": 12695,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:16:36"
                }
              ]
            },
            "functionSelector": "625adaf2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokens",
            "nameLocation": "1056:9:36",
            "parameters": {
              "id": 12690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12689,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1084:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12697,
                  "src": "1066:24:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12687,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12686,
                        "name": "IERC20",
                        "nameLocations": [
                          "1066:6:36"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 47587,
                        "src": "1066:6:36"
                      },
                      "referencedDeclaration": 47587,
                      "src": "1066:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$47587",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 12688,
                    "nodeType": "ArrayTypeName",
                    "src": "1066:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$47587_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:26:36"
            },
            "returnParameters": {
              "id": 12691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:36"
            },
            "scope": 12860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12706,
            "nodeType": "FunctionDefinition",
            "src": "1140:98:36",
            "nodes": [],
            "body": {
              "id": 12705,
              "nodeType": "Block",
              "src": "1203:35:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12703,
                    "name": "_underlying",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12637,
                    "src": "1220:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12702,
                  "id": 12704,
                  "nodeType": "Return",
                  "src": "1213:18:36"
                }
              ]
            },
            "baseFunctions": [
              16375
            ],
            "functionSelector": "6f307dc3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlying",
            "nameLocation": "1149:10:36",
            "overrides": {
              "id": 12699,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1176:8:36"
            },
            "parameters": {
              "id": 12698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:2:36"
            },
            "returnParameters": {
              "id": 12702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12701,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12706,
                  "src": "1194:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1193:9:36"
            },
            "scope": 12860,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12723,
            "nodeType": "FunctionDefinition",
            "src": "1244:136:36",
            "nodes": [],
            "body": {
              "id": 12722,
              "nodeType": "Block",
              "src": "1312:68:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12718,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1367:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGyroVault_$12860",
                              "typeString": "contract MockGyroVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockGyroVault_$12860",
                              "typeString": "contract MockGyroVault"
                            }
                          ],
                          "id": 12717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1359:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1359:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1359:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12713,
                            "name": "_underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12637,
                            "src": "1336:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12712,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47587,
                          "src": "1329:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$47587_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 12714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:19:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$47587",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1349:9:36",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47544,
                      "src": "1329:29:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:44:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12711,
                  "id": 12721,
                  "nodeType": "Return",
                  "src": "1322:51:36"
                }
              ]
            },
            "baseFunctions": [
              16389
            ],
            "functionSelector": "c70920bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalUnderlying",
            "nameLocation": "1253:15:36",
            "overrides": {
              "id": 12708,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1285:8:36"
            },
            "parameters": {
              "id": 12707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1268:2:36"
            },
            "returnParameters": {
              "id": 12711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12723,
                  "src": "1303:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1302:9:36"
            },
            "scope": 12860,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12741,
            "nodeType": "FunctionDefinition",
            "src": "1386:206:36",
            "nodes": [],
            "body": {
              "id": 12740,
              "nodeType": "Block",
              "src": "1523:69:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12734,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1551:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1555:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1551:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12736,
                        "name": "lpTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12725,
                        "src": "1563:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12737,
                        "name": "minOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12727,
                        "src": "1578:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12733,
                      "name": "depositFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12781,
                      "src": "1540:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 12738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1540:45:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12732,
                  "id": 12739,
                  "nodeType": "Return",
                  "src": "1533:52:36"
                }
              ]
            },
            "baseFunctions": [
              16405
            ],
            "functionSelector": "e2bbb158",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1395:7:36",
            "overrides": {
              "id": 12729,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1467:8:36"
            },
            "parameters": {
              "id": 12728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12725,
                  "mutability": "mutable",
                  "name": "lpTokenAmount",
                  "nameLocation": "1411:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12741,
                  "src": "1403:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12727,
                  "mutability": "mutable",
                  "name": "minOut",
                  "nameLocation": "1434:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12741,
                  "src": "1426:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1402:39:36"
            },
            "returnParameters": {
              "id": 12732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12731,
                  "mutability": "mutable",
                  "name": "vaultTokenAmount",
                  "nameLocation": "1501:16:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12741,
                  "src": "1493:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1492:26:36"
            },
            "scope": 12860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12751,
            "nodeType": "FunctionDefinition",
            "src": "1598:101:36",
            "nodes": [],
            "body": {
              "id": 12750,
              "nodeType": "Block",
              "src": "1661:38:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 12747,
                      "name": "FixedPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56482,
                      "src": "1678:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_FixedPoint_$56482_$",
                        "typeString": "type(library FixedPoint)"
                      }
                    },
                    "id": 12748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1689:3:36",
                    "memberName": "ONE",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56119,
                    "src": "1678:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12746,
                  "id": 12749,
                  "nodeType": "Return",
                  "src": "1671:21:36"
                }
              ]
            },
            "baseFunctions": [
              16395
            ],
            "functionSelector": "3ba0b9a9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchangeRate",
            "nameLocation": "1607:12:36",
            "overrides": {
              "id": 12743,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1634:8:36"
            },
            "parameters": {
              "id": 12742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1619:2:36"
            },
            "returnParameters": {
              "id": 12746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12745,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12751,
                  "src": "1652:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1651:9:36"
            },
            "scope": 12860,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12781,
            "nodeType": "FunctionDefinition",
            "src": "1705:320:36",
            "nodes": [],
            "body": {
              "id": 12780,
              "nodeType": "Block",
              "src": "1859:166:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12767,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1906:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1910:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1906:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12769,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12753,
                        "src": "1918:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12770,
                        "name": "lpTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12755,
                        "src": "1931:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12764,
                            "name": "_underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12637,
                            "src": "1876:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12763,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47587,
                          "src": "1869:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$47587_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 12765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:19:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$47587",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1889:16:36",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47706,
                      "src": "1869:36:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$47587_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$47587_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 12771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:76:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12772,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:76:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12774,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12753,
                        "src": "1961:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12775,
                        "name": "lpTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12755,
                        "src": "1974:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12773,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47326,
                      "src": "1955:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:33:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12777,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:33:36"
                },
                {
                  "expression": {
                    "id": 12778,
                    "name": "lpTokenAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12755,
                    "src": "2005:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12762,
                  "id": 12779,
                  "nodeType": "Return",
                  "src": "1998:20:36"
                }
              ]
            },
            "baseFunctions": [
              16417
            ],
            "functionSelector": "4cf5fbf5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositFor",
            "nameLocation": "1714:10:36",
            "overrides": {
              "id": 12759,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1815:8:36"
            },
            "parameters": {
              "id": 12758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12753,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1742:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12781,
                  "src": "1734:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12755,
                  "mutability": "mutable",
                  "name": "lpTokenAmount",
                  "nameLocation": "1771:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12781,
                  "src": "1763:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12781,
                  "src": "1794:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:83:36"
            },
            "returnParameters": {
              "id": 12762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12761,
                  "mutability": "mutable",
                  "name": "vaultTokenAmount",
                  "nameLocation": "1841:16:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12781,
                  "src": "1833:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:26:36"
            },
            "scope": 12860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12798,
            "nodeType": "FunctionDefinition",
            "src": "2031:210:36",
            "nodes": [],
            "body": {
              "id": 12797,
              "nodeType": "Block",
              "src": "2198:43:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 12793,
                        "name": "lpTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12783,
                        "src": "2216:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 12794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2231:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "id": 12795,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2215:19:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$",
                      "typeString": "tuple(uint256,literal_string \"\")"
                    }
                  },
                  "functionReturnParameters": 12792,
                  "id": 12796,
                  "nodeType": "Return",
                  "src": "2208:26:36"
                }
              ]
            },
            "baseFunctions": [
              16429
            ],
            "functionSelector": "550d2b62",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dryDeposit",
            "nameLocation": "2040:10:36",
            "overrides": {
              "id": 12787,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2121:8:36"
            },
            "parameters": {
              "id": 12786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12783,
                  "mutability": "mutable",
                  "name": "lpTokenAmount",
                  "nameLocation": "2059:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12798,
                  "src": "2051:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12785,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12798,
                  "src": "2074:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2050:32:36"
            },
            "returnParameters": {
              "id": 12792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12789,
                  "mutability": "mutable",
                  "name": "vaultTokenAmount",
                  "nameLocation": "2155:16:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12798,
                  "src": "2147:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12791,
                  "mutability": "mutable",
                  "name": "error",
                  "nameLocation": "2187:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12798,
                  "src": "2173:19:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12790,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2146:47:36"
            },
            "scope": 12860,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12826,
            "nodeType": "FunctionDefinition",
            "src": "2247:284:36",
            "nodes": [],
            "body": {
              "id": 12825,
              "nodeType": "Block",
              "src": "2378:153:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12809,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2394:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2398:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2394:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12811,
                        "name": "vaultTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12800,
                        "src": "2406:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12808,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47398,
                      "src": "2388:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:35:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12813,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:35:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12818,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2462:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2466:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2462:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12820,
                        "name": "vaultTokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12800,
                        "src": "2474:16:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12815,
                            "name": "_underlying",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12637,
                            "src": "2440:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12814,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47587,
                          "src": "2433:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$47587_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 12816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2433:19:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$47587",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2453:8:36",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47554,
                      "src": "2433:28:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 12821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2433:58:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12822,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:58:36"
                },
                {
                  "expression": {
                    "id": 12823,
                    "name": "vaultTokenAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12800,
                    "src": "2508:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12807,
                  "id": 12824,
                  "nodeType": "Return",
                  "src": "2501:23:36"
                }
              ]
            },
            "baseFunctions": [
              16439
            ],
            "functionSelector": "441a3e70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2256:8:36",
            "overrides": {
              "id": 12804,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2325:8:36"
            },
            "parameters": {
              "id": 12803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12800,
                  "mutability": "mutable",
                  "name": "vaultTokenAmount",
                  "nameLocation": "2273:16:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12826,
                  "src": "2265:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2265:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12802,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12826,
                  "src": "2291:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2264:35:36"
            },
            "returnParameters": {
              "id": 12807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12806,
                  "mutability": "mutable",
                  "name": "lpTokenAmount",
                  "nameLocation": "2359:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12826,
                  "src": "2351:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2350:23:36"
            },
            "scope": 12860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12839,
            "nodeType": "FunctionDefinition",
            "src": "2537:170:36",
            "nodes": [],
            "body": {
              "id": 12838,
              "nodeType": "Block",
              "src": "2705:2:36",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              16451
            ],
            "functionSelector": "cc04feff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dryWithdraw",
            "nameLocation": "2546:11:36",
            "overrides": {
              "id": 12832,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2631:8:36"
            },
            "parameters": {
              "id": 12831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12828,
                  "mutability": "mutable",
                  "name": "vaultTokenAmount",
                  "nameLocation": "2566:16:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12839,
                  "src": "2558:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12839,
                  "src": "2584:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2557:35:36"
            },
            "returnParameters": {
              "id": 12837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12834,
                  "mutability": "mutable",
                  "name": "lpTokenAmount",
                  "nameLocation": "2665:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12839,
                  "src": "2657:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2657:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12836,
                  "mutability": "mutable",
                  "name": "error",
                  "nameLocation": "2694:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12839,
                  "src": "2680:19:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12835,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2656:44:36"
            },
            "scope": 12860,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12848,
            "nodeType": "FunctionDefinition",
            "src": "2713:94:36",
            "nodes": [],
            "body": {
              "id": 12847,
              "nodeType": "Block",
              "src": "2774:33:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12845,
                    "name": "_strategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12635,
                    "src": "2791:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 12844,
                  "id": 12846,
                  "nodeType": "Return",
                  "src": "2784:16:36"
                }
              ]
            },
            "baseFunctions": [
              16457
            ],
            "functionSelector": "a8c62e76",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategy",
            "nameLocation": "2722:8:36",
            "overrides": {
              "id": 12841,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2747:8:36"
            },
            "parameters": {
              "id": 12840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2730:2:36"
            },
            "returnParameters": {
              "id": 12844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12843,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12848,
                  "src": "2765:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2764:9:36"
            },
            "scope": 12860,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12859,
            "nodeType": "FunctionDefinition",
            "src": "2813:108:36",
            "nodes": [],
            "body": {
              "id": 12858,
              "nodeType": "Block",
              "src": "2877:44:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12854,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12635,
                      "src": "2887:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12855,
                      "name": "strategyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12850,
                      "src": "2899:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2887:27:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12857,
                  "nodeType": "ExpressionStatement",
                  "src": "2887:27:36"
                }
              ]
            },
            "baseFunctions": [
              16463
            ],
            "functionSelector": "33a100ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategy",
            "nameLocation": "2822:11:36",
            "overrides": {
              "id": 12852,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2868:8:36"
            },
            "parameters": {
              "id": 12851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12850,
                  "mutability": "mutable",
                  "name": "strategyAddress",
                  "nameLocation": "2842:15:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12859,
                  "src": "2834:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2834:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2833:25:36"
            },
            "returnParameters": {
              "id": 12853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2877:0:36"
            },
            "scope": 12860,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12626,
              "name": "IGyroVault",
              "nameLocations": [
                "490:10:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16470,
              "src": "490:10:36"
            },
            "id": 12627,
            "nodeType": "InheritanceSpecifier",
            "src": "490:10:36"
          },
          {
            "baseName": {
              "id": 12628,
              "name": "ERC20",
              "nameLocations": [
                "502:5:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47509,
              "src": "502:5:36"
            },
            "id": 12629,
            "nodeType": "InheritanceSpecifier",
            "src": "502:5:36"
          }
        ],
        "canonicalName": "MockGyroVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12860,
          47509,
          16470,
          47612,
          47587,
          49387
        ],
        "name": "MockGyroVault",
        "nameLocation": "473:13:36",
        "scope": 12861,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 36
}