{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "priceOracle",
          "type": "address"
        }
      ],
      "name": "BatchPriceOracleChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum Vaults.Type",
          "name": "vaultType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "priceOracle",
          "type": "address"
        }
      ],
      "name": "VaultPriceOracleChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "initialPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortFlowMemory",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortFlowThreshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.PersistedVaultMetadata",
              "name": "persistedMetadata",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "idealWeight",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isStable",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.PricedToken[]",
              "name": "pricedTokens",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DataTypes.VaultInfo[]",
          "name": "vaultsInfo",
          "type": "tuple[]"
        }
      ],
      "name": "fetchPricesUSD",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "underlying",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "initialPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortFlowMemory",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortFlowThreshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.PersistedVaultMetadata",
              "name": "persistedMetadata",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "reserveBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "idealWeight",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isStable",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.PricedToken[]",
              "name": "pricedTokens",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DataTypes.VaultInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "fetchPricesUSD((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[])[])": "ccda1ef7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"BatchPriceOracleChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum Vaults.Type\",\"name\":\"vaultType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"VaultPriceOracleChanged\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo[]\",\"name\":\"vaultsInfo\",\"type\":\"tuple[]\"}],\"name\":\"fetchPricesUSD\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fetchPricesUSD((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[])[])\":{\"returns\":{\"_0\":\"the same vaults info with the price data populated\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fetchPricesUSD((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[])[])\":{\"notice\":\"Fetches the price of the vault token as well as the underlying tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/oracles/IBatchVaultPriceOracle.sol\":\"IBatchVaultPriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"interfaces/IGyroVault.sol\":{\"keccak256\":\"0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4\",\"dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL\"]},\"interfaces/oracles/IBatchVaultPriceOracle.sol\":{\"keccak256\":\"0xc0d47d656e552e11691d6bdb6ec0c9cfe47fc53a6c7889c491c49e15763a281b\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://523902c539f32d8bd92eade2b92ec81c54a322c50c812e6642482a0de43983e4\",\"dweb:/ipfs/QmSLpFgT5GLJyJdiJsHuZTig2EBm51NTmPW8iHD2rGbM8e\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494\",\"dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC\"]},\"libraries/Vaults.sol\":{\"keccak256\":\"0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b\",\"dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "priceOracle",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BatchPriceOracleChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum Vaults.Type",
              "name": "vaultType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "priceOracle",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "VaultPriceOracleChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.VaultInfo[]",
              "name": "vaultsInfo",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "decimals",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "underlying",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "struct DataTypes.PersistedVaultMetadata",
                  "name": "persistedMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "initialPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "initialWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortFlowMemory",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortFlowThreshold",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "reserveBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "fetchPricesUSD",
          "outputs": [
            {
              "internalType": "struct DataTypes.VaultInfo[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "decimals",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "underlying",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "struct DataTypes.PersistedVaultMetadata",
                  "name": "persistedMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "initialPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "initialWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortFlowMemory",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortFlowThreshold",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "reserveBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "fetchPricesUSD((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[])[])": {
            "returns": {
              "_0": "the same vaults info with the price data populated"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "fetchPricesUSD((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[])[])": {
            "notice": "Fetches the price of the vault token as well as the underlying tokens"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "interfaces/oracles/IBatchVaultPriceOracle.sol": "IBatchVaultPriceOracle"
      },
      "libraries": {}
    },
    "sources": {
      "interfaces/IGyroVault.sol": {
        "keccak256": "0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644",
        "urls": [
          "bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4",
          "dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/oracles/IBatchVaultPriceOracle.sol": {
        "keccak256": "0xc0d47d656e552e11691d6bdb6ec0c9cfe47fc53a6c7889c491c49e15763a281b",
        "urls": [
          "bzz-raw://523902c539f32d8bd92eade2b92ec81c54a322c50c812e6642482a0de43983e4",
          "dweb:/ipfs/QmSLpFgT5GLJyJdiJsHuZTig2EBm51NTmPW8iHD2rGbM8e"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "libraries/DataTypes.sol": {
        "keccak256": "0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29",
        "urls": [
          "bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494",
          "dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Vaults.sol": {
        "keccak256": "0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f",
        "urls": [
          "bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b",
          "dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "interfaces/oracles/IBatchVaultPriceOracle.sol",
    "id": 17663,
    "exportedSymbols": {
      "DataTypes": [
        54519
      ],
      "IBatchVaultPriceOracle": [
        17662
      ],
      "IERC20": [
        47531
      ],
      "IERC20Metadata": [
        47556
      ],
      "IGyroVault": [
        16414
      ],
      "Vaults": [
        58229
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:592:93",
    "nodes": [
      {
        "id": 17636,
        "nodeType": "PragmaDirective",
        "src": "174:23:93",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 17637,
        "nodeType": "ImportDirective",
        "src": "199:39:93",
        "nodes": [],
        "absolutePath": "libraries/DataTypes.sol",
        "file": "../../libraries/DataTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17663,
        "sourceUnit": 54520,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 17638,
        "nodeType": "ImportDirective",
        "src": "240:27:93",
        "nodes": [],
        "absolutePath": "interfaces/IGyroVault.sol",
        "file": "../IGyroVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17663,
        "sourceUnit": 16415,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 17662,
        "nodeType": "ContractDefinition",
        "src": "269:496:93",
        "nodes": [
          {
            "id": 17642,
            "nodeType": "EventDefinition",
            "src": "308:59:93",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6a307a24f425432e870b96f8281754586de703b1ea0ed2d883134333b3a3bdf1",
            "name": "BatchPriceOracleChanged",
            "nameLocation": "314:23:93",
            "parameters": {
              "id": 17641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17640,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "priceOracle",
                  "nameLocation": "354:11:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 17642,
                  "src": "338:27:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "337:29:93"
            }
          },
          {
            "id": 17649,
            "nodeType": "EventDefinition",
            "src": "372:90:93",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d992eaec24a9c32398c97bf68d6b13420cfa61ab8a600800cdd1c760d1fc7861",
            "name": "VaultPriceOracleChanged",
            "nameLocation": "378:23:93",
            "parameters": {
              "id": 17648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17645,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "vaultType",
                  "nameLocation": "422:9:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 17649,
                  "src": "402:29:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Type_$58228",
                    "typeString": "enum Vaults.Type"
                  },
                  "typeName": {
                    "id": 17644,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 17643,
                      "name": "Vaults.Type",
                      "nameLocations": [
                        "402:6:93",
                        "409:4:93"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58228,
                      "src": "402:11:93"
                    },
                    "referencedDeclaration": 58228,
                    "src": "402:11:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Type_$58228",
                      "typeString": "enum Vaults.Type"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17647,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "priceOracle",
                  "nameLocation": "449:11:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 17649,
                  "src": "433:27:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "401:60:93"
            }
          },
          {
            "id": 17661,
            "nodeType": "FunctionDefinition",
            "src": "621:142:93",
            "nodes": [],
            "documentation": {
              "id": 17650,
              "nodeType": "StructuredDocumentation",
              "src": "468:148:93",
              "text": "@notice Fetches the price of the vault token as well as the underlying tokens\n @return the same vaults info with the price data populated"
            },
            "functionSelector": "ccda1ef7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fetchPricesUSD",
            "nameLocation": "630:14:93",
            "parameters": {
              "id": 17655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17654,
                  "mutability": "mutable",
                  "name": "vaultsInfo",
                  "nameLocation": "674:10:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 17661,
                  "src": "645:39:93",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_VaultInfo_$54464_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct DataTypes.VaultInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17652,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 17651,
                        "name": "DataTypes.VaultInfo",
                        "nameLocations": [
                          "645:9:93",
                          "655:9:93"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54464,
                        "src": "645:19:93"
                      },
                      "referencedDeclaration": 54464,
                      "src": "645:19:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$54464_storage_ptr",
                        "typeString": "struct DataTypes.VaultInfo"
                      }
                    },
                    "id": 17653,
                    "nodeType": "ArrayTypeName",
                    "src": "645:21:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_VaultInfo_$54464_storage_$dyn_storage_ptr",
                      "typeString": "struct DataTypes.VaultInfo[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "644:41:93"
            },
            "returnParameters": {
              "id": 17660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17661,
                  "src": "733:28:93",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_VaultInfo_$54464_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct DataTypes.VaultInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17657,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 17656,
                        "name": "DataTypes.VaultInfo",
                        "nameLocations": [
                          "733:9:93",
                          "743:9:93"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54464,
                        "src": "733:19:93"
                      },
                      "referencedDeclaration": 54464,
                      "src": "733:19:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultInfo_$54464_storage_ptr",
                        "typeString": "struct DataTypes.VaultInfo"
                      }
                    },
                    "id": 17658,
                    "nodeType": "ArrayTypeName",
                    "src": "733:21:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_VaultInfo_$54464_storage_$dyn_storage_ptr",
                      "typeString": "struct DataTypes.VaultInfo[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "732:30:93"
            },
            "scope": 17662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBatchVaultPriceOracle",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          17662
        ],
        "name": "IBatchVaultPriceOracle",
        "nameLocation": "279:22:93",
        "scope": 17663,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 93
}