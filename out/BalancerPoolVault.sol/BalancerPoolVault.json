{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        },
        {
          "internalType": "enum Vaults.Type",
          "name": "_vaultType",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IVault",
          "name": "_balancerVault",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernorChangeRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balancerVault",
      "outputs": [
        {
          "internalType": "contract IVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minVaultTokensOut",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokensMinted",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minVaultTokensOut",
          "type": "uint256"
        }
      ],
      "name": "depositFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokensMinted",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "underlyingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minVaultTokensOut",
          "type": "uint256"
        }
      ],
      "name": "dryDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokensMinted",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minUnderlyingOut",
          "type": "uint256"
        }
      ],
      "name": "dryWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "underlyingAmountWithdrawn",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategyAddress",
          "type": "address"
        }
      ],
      "name": "setStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultType",
      "outputs": [
        {
          "internalType": "enum Vaults.Type",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minUnderlyingOut",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "underlyingAmountWithdrawn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101206040523480156200001257600080fd5b5060405162001ff738038062001ff783398101604081905262000035916200024f565b85620000418560601c90565b8383838282600362000054838262000394565b50600462000063828262000394565b5050600580546001600160a01b0319166001600160a01b038416908117909155604080516000815260208101929092527fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8492500160405180910390a150604080518082019091526002815261333160f01b60208201526001600160a01b0384166200010c5760405162461bcd60e51b815260040162000103919062000460565b60405180910390fd5b5050506001600160a01b039081166080524360a05260c0869052841660e0525084600481111562000141576200014162000495565b61010081600481111562000159576200015962000495565b81525050505050505050620004ab565b6001600160a01b03811681146200017f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001b55781810151838201526020016200019b565b50506000910152565b600082601f830112620001d057600080fd5b81516001600160401b0380821115620001ed57620001ed62000182565b604051601f8301601f19908116603f0116810190828211818310171562000218576200021862000182565b816040528381528660208588010111156200023257600080fd5b6200024584602083016020890162000198565b9695505050505050565b60008060008060008060c087890312156200026957600080fd5b8651620002768162000169565b6020880151909650600581106200028c57600080fd5b604088015160608901519196509450620002a68162000169565b60808801519093506001600160401b0380821115620002c457600080fd5b620002d28a838b01620001be565b935060a0890151915080821115620002e957600080fd5b50620002f889828a01620001be565b9150509295509295509295565b600181811c908216806200031a57607f821691505b6020821081036200033b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038f57600081815260208120601f850160051c810160208610156200036a5750805b601f850160051c820191505b818110156200038b5782815560010162000376565b5050505b505050565b81516001600160401b03811115620003b057620003b062000182565b620003c881620003c1845462000305565b8462000341565b602080601f831160018114620004005760008415620003e75750858301515b600019600386901b1c1916600185901b1785556200038b565b600085815260208120601f198616915b82811015620004315788860151825594840194600190910190840162000410565b5085821015620004505787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200048181604085016020870162000198565b601f01601f19169190910160400192915050565b634e487b7160e01b600052602160045260246000fd5b60805160a05160c05160e05161010051611add6200051a60003960006103280152600081816102500152610a560152600081816102ee0152610a220152600061049d0152600081816103900152818161064c01528181610862015281816108ad0152610ae60152611add6000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063550d2b6211610104578063aa6ca808116100a2578063e2bbb15811610071578063e2bbb1581461045f578063e3056a3414610472578063e4c0aaf414610485578063eae4c19f1461049857600080fd5b8063aa6ca8081461041c578063c70920bc14610431578063cc04feff14610439578063dd62ed3e1461044c57600080fd5b806395d89b41116100de57806395d89b41146103db578063a457c2d7146103e3578063a8c62e76146103f6578063a9059cbb1461040957600080fd5b8063550d2b621461036a5780636f307dc31461038b57806370a08231146103b257600080fd5b8063313ce5671161017c5780633e0dc34e1161014b5780633e0dc34e146102e9578063441a3e70146103105780634ac032be146103235780634cf5fbf51461035757600080fd5b8063313ce567146102a157806333a100ca146102bb57806339509351146102ce5780633ba0b9a9146102e157600080fd5b8063158274a5116101b8578063158274a51461024b57806318160ddd14610272578063238efcbc1461028457806323b872dd1461028e57600080fd5b806306fdde03146101df578063095ea7b3146101fd5780630c340a2414610220575b600080fd5b6101e76104bf565b6040516101f49190611604565b60405180910390f35b61021061020b36600461162f565b610551565b60405190151581526020016101f4565b600554610233906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b6002545b6040519081526020016101f4565b61028c61056b565b005b61021061029c36600461165b565b610624565b6102a9610648565b60405160ff90911681526020016101f4565b61028c6102c936600461169c565b6106d1565b6102106102dc36600461162f565b610739565b61027661075b565b6102767f000000000000000000000000000000000000000000000000000000000000000081565b61027661031e3660046116b9565b610767565b61034a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516101f491906116db565b610276610365366004611703565b610891565b61037d6103783660046116b9565b610930565b6040516101f4929190611738565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b6102766103c036600461169c565b6001600160a01b031660009081526020819052604090205490565b6101e761097b565b6102106103f136600461162f565b61098a565b600754610233906001600160a01b031681565b61021061041736600461162f565b610a05565b610424610a13565b6040516101f49190611751565b610276610ace565b61037d6104473660046116b9565b610b59565b61027661045a36600461179e565b610b73565b61027661046d3660046116b9565b610b9e565b600654610233906001600160a01b031681565b61028c61049336600461169c565b610bb2565b6102767f000000000000000000000000000000000000000000000000000000000000000081565b6060600380546104ce906117d7565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa906117d7565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b60003361055f818585610c87565b60019150505b92915050565b600654604080518082019091526002815261033360f41b6020820152906001600160a01b031633146105b95760405162461bcd60e51b81526004016105b09190611604565b60405180910390fd5b5060058054600680546001600160a01b03198084166001600160a01b03808416919091179095551690556040805192909116808352336020840152917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491015b60405180910390a150565b600033610632858285610dac565b61063d858585610e26565b506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611811565b905090565b600554604080518082019091526002815261033360f41b6020820152906001600160a01b031633146107165760405162461bcd60e51b81526004016105b09190611604565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b60003361055f81858561074c8383610b73565b610756919061184a565b610c87565b60006106cc6000610fca565b600080831160405180604001604052806002815260200161333160f01b815250906107a55760405162461bcd60e51b81526004016105b09190611604565b5033600090815260208190526040812054905083811015604051806040016040528060028152602001610ccd60f21b815250906107f55760405162461bcd60e51b81526004016105b09190611604565b50600061080061075b565b905061080c8582611023565b925083831015604051806040016040528060018152602001601960f91b8152509061084a5760405162461bcd60e51b81526004016105b09190611604565b506108553386611044565b6108896001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385611173565b505092915050565b60008061089e6001610fca565b90506108d56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330876111d6565b6108df848261120e565b915082821015604051806040016040528060018152602001601960f91b8152509061091d5760405162461bcd60e51b81526004016105b09190611604565b506109288583611281565b509392505050565b6000606060006109406001610fca565b905061094c858261120e565b92508383101561097357604051806040016040528060018152602001601960f91b81525091505b509250929050565b6060600480546104ce906117d7565b600033816109988286610b73565b9050838110156109f85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105b0565b61063d8286868403610c87565b60003361055f818585610e26565b604051631f29a8cd60e31b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060906000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f94d466890602401600060405180830381865afa158015610a9d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ac59190810190611933565b50909392505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b35573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611a01565b600060606000610b6761075b565b905061094c8582611023565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610bab338484610891565b9392505050565b600554604080518082019091526002815261033360f41b6020820152906001600160a01b03163314610bf75760405162461bcd60e51b81526004016105b09190611604565b50604080518082019091526002815261333160f01b60208201526001600160a01b038216610c385760405162461bcd60e51b81526004016105b09190611604565b50600680546001600160a01b0319166001600160a01b0383169081179091556040519081527f67235ba2e63c748a35b95c4f92a3bbc2a1389938170a5ce6c9add5d0b03a314a90602001610619565b6001600160a01b038316610ce95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105b0565b6001600160a01b038216610d4a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105b0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610db88484610b73565b90506000198114610e205781811015610e135760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105b0565b610e208484848403610c87565b50505050565b6001600160a01b038316610e8a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105b0565b6001600160a01b038216610eec5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105b0565b6001600160a01b03831660009081526020819052604090205481811015610f645760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105b0565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610e20565b600080610fd5610ace565b90506000610fe260025490565b905080600003610ffd5750670de0b6b3a76400009392505050565b836110115761100c828261120e565b61101b565b61101b8282611340565b949350505050565b6000806110308385611a1a565b905061101b670de0b6b3a764000082611a47565b6001600160a01b0382166110a45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105b0565b6001600160a01b038216600090815260208190526040902054818110156111185760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105b0565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610d9f565b505050565b6040516001600160a01b03831660248201526044810182905261116e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113bf565b6040516001600160a01b0380851660248301528316604482015260648101829052610e209085906323b872dd60e01b9060840161119f565b604080518082019091526002815261323560f01b6020820152600090826112485760405162461bcd60e51b81526004016105b09190611604565b508260000361125957506000610565565b600061126d670de0b6b3a764000085611a1a565b90506112798382611a47565b915050610565565b6001600160a01b0382166112d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105b0565b80600260008282546112e9919061184a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b604080518082019091526002815261323560f01b60208201526000908261137a5760405162461bcd60e51b81526004016105b09190611604565b508260000361138b57506000610565565b600061139f670de0b6b3a764000085611a1a565b90508260018203816113b3576113b3611a31565b04600101915050610565565b6000611414826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114919092919063ffffffff16565b80519091501561116e57808060200190518101906114329190611a69565b61116e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105b0565b606061101b848460008585600080866001600160a01b031685876040516114b89190611a8b565b60006040518083038185875af1925050503d80600081146114f5576040519150601f19603f3d011682016040523d82523d6000602084013e6114fa565b606091505b509150915061150b87838387611516565b979650505050505050565b6060831561158557825160000361157e576001600160a01b0385163b61157e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105b0565b508161101b565b61101b838381511561159a5781518083602001fd5b8060405162461bcd60e51b81526004016105b09190611604565b60005b838110156115cf5781810151838201526020016115b7565b50506000910152565b600081518084526115f08160208601602086016115b4565b601f01601f19169290920160200192915050565b602081526000610bab60208301846115d8565b6001600160a01b038116811461162c57600080fd5b50565b6000806040838503121561164257600080fd5b823561164d81611617565b946020939093013593505050565b60008060006060848603121561167057600080fd5b833561167b81611617565b9250602084013561168b81611617565b929592945050506040919091013590565b6000602082840312156116ae57600080fd5b8135610bab81611617565b600080604083850312156116cc57600080fd5b50508035926020909101359150565b60208101600583106116fd57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561171857600080fd5b833561172381611617565b95602085013595506040909401359392505050565b82815260406020820152600061101b60408301846115d8565b6020808252825182820181905260009190848201906040850190845b818110156117925783516001600160a01b03168352928401929184019160010161176d565b50909695505050505050565b600080604083850312156117b157600080fd5b82356117bc81611617565b915060208301356117cc81611617565b809150509250929050565b600181811c908216806117eb57607f821691505b60208210810361180b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561182357600080fd5b815160ff81168114610bab57600080fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561056557610565611834565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561189c5761189c61185d565b604052919050565b600067ffffffffffffffff8211156118be576118be61185d565b5060051b60200190565b600082601f8301126118d957600080fd5b815160206118ee6118e9836118a4565b611873565b82815260059290921b8401810191818101908684111561190d57600080fd5b8286015b848110156119285780518352918301918301611911565b509695505050505050565b60008060006060848603121561194857600080fd5b835167ffffffffffffffff8082111561196057600080fd5b818601915086601f83011261197457600080fd5b815160206119846118e9836118a4565b82815260059290921b8401810191818101908a8411156119a357600080fd5b948201945b838610156119ca5785516119bb81611617565b825294820194908201906119a8565b918901519197509093505050808211156119e357600080fd5b506119f0868287016118c8565b925050604084015190509250925092565b600060208284031215611a1357600080fd5b5051919050565b808202811582820484141761056557610565611834565b634e487b7160e01b600052601260045260246000fd5b600082611a6457634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611a7b57600080fd5b81518015158114610bab57600080fd5b60008251611a9d8184602087016115b4565b919091019291505056fea2646970667358221220a14e1fa925c7ba33556562fa70ade9c6449aa14a96d852ee8705c0c1fd72019264736f6c63430008110033",
    "sourceMap": "274:1149:59:-:0;;;520:357;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;721:9;732:24;748:7;1405:6;1384:28;;1096:325;732:24;758:4;764:6;1063:9:60;758:4:59;764:6;2042:5:131;:13;758:4:59;2042:5:131;:13;:::i;:::-;-1:-1:-1;2065:7:131;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;316:8:10;:20;;-1:-1:-1;;;;;;316:20:10;-1:-1:-1;;;;;316:20:10;;;;;;;;351:38;;;-1:-1:-1;5104:34:166;;5169:2;5154:18;;5147:43;;;;351:38:10;;-1:-1:-1;5039:18:166;351:38:10;;;;;;;-1:-1:-1;1148:23:60::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;1148:23:60::2;::::0;::::2;::::0;-1:-1:-1;;;;;1112:34:60;::::2;1104:68;;;;-1:-1:-1::0;;;1104:68:60::2;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;;;;1182:24:60;;::::2;;::::0;1229:12:::2;1216:25;::::0;782:16:59::1;::::0;;;808:30;::::1;;::::0;-1:-1:-1;860:10:59;848:22:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;::::0;::::1;520:357:::0;;;;;;274:1149;;14:131:166;-1:-1:-1;;;;;89:31:166;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:127::-;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:250;367:1;377:113;391:6;388:1;385:13;377:113;;;467:11;;;461:18;448:11;;;441:39;413:2;406:10;377:113;;;-1:-1:-1;;524:1:166;506:16;;499:27;282:250::o;537:699::-;591:5;644:3;637:4;629:6;625:17;621:27;611:55;;662:1;659;652:12;611:55;685:13;;-1:-1:-1;;;;;747:10:166;;;744:36;;;760:18;;:::i;:::-;835:2;829:9;803:2;889:13;;-1:-1:-1;;885:22:166;;;909:2;881:31;877:40;865:53;;;933:18;;;953:22;;;930:46;927:72;;;979:18;;:::i;:::-;1019:10;1015:2;1008:22;1054:2;1046:6;1039:18;1100:3;1093:4;1088:2;1080:6;1076:15;1072:26;1069:35;1066:55;;;1117:1;1114;1107:12;1066:55;1130:76;1203:2;1196:4;1188:6;1184:17;1177:4;1169:6;1165:17;1130:76;:::i;:::-;1224:6;537:699;-1:-1:-1;;;;;;537:699:166:o;1241:1057::-;1402:6;1410;1418;1426;1434;1442;1495:3;1483:9;1474:7;1470:23;1466:33;1463:53;;;1512:1;1509;1502:12;1463:53;1544:9;1538:16;1563:31;1588:5;1563:31;:::i;:::-;1663:2;1648:18;;1642:25;1613:5;;-1:-1:-1;1698:1:166;1686:14;;1676:42;;1714:1;1711;1704:12;1676:42;1784:2;1769:18;;1763:25;1833:2;1818:18;;1812:25;1737:7;;-1:-1:-1;1763:25:166;-1:-1:-1;1846:33:166;1812:25;1846:33;:::i;:::-;1949:3;1934:19;;1928:26;1898:7;;-1:-1:-1;;;;;;2003:14:166;;;2000:34;;;2030:1;2027;2020:12;2000:34;2053:61;2106:7;2097:6;2086:9;2082:22;2053:61;:::i;:::-;2043:71;;2160:3;2149:9;2145:19;2139:26;2123:42;;2190:2;2180:8;2177:16;2174:36;;;2206:1;2203;2196:12;2174:36;;2229:63;2284:7;2273:8;2262:9;2258:24;2229:63;:::i;:::-;2219:73;;;1241:1057;;;;;;;;:::o;2303:380::-;2382:1;2378:12;;;;2425;;;2446:61;;2500:4;2492:6;2488:17;2478:27;;2446:61;2553:2;2545:6;2542:14;2522:18;2519:38;2516:161;;2599:10;2594:3;2590:20;2587:1;2580:31;2634:4;2631:1;2624:15;2662:4;2659:1;2652:15;2516:161;;2303:380;;;:::o;2814:545::-;2916:2;2911:3;2908:11;2905:448;;;2952:1;2977:5;2973:2;2966:17;3022:4;3018:2;3008:19;3092:2;3080:10;3076:19;3073:1;3069:27;3063:4;3059:38;3128:4;3116:10;3113:20;3110:47;;;-1:-1:-1;3151:4:166;3110:47;3206:2;3201:3;3197:12;3194:1;3190:20;3184:4;3180:31;3170:41;;3261:82;3279:2;3272:5;3269:13;3261:82;;;3324:17;;;3305:1;3294:13;3261:82;;;3265:3;;;2905:448;2814:545;;;:::o;3535:1352::-;3655:10;;-1:-1:-1;;;;;3677:30:166;;3674:56;;;3710:18;;:::i;:::-;3739:97;3829:6;3789:38;3821:4;3815:11;3789:38;:::i;:::-;3783:4;3739:97;:::i;:::-;3891:4;;3955:2;3944:14;;3972:1;3967:663;;;;4674:1;4691:6;4688:89;;;-1:-1:-1;4743:19:166;;;4737:26;4688:89;-1:-1:-1;;3492:1:166;3488:11;;;3484:24;3480:29;3470:40;3516:1;3512:11;;;3467:57;4790:81;;3937:944;;3967:663;2761:1;2754:14;;;2798:4;2785:18;;-1:-1:-1;;4003:20:166;;;4121:236;4135:7;4132:1;4129:14;4121:236;;;4224:19;;;4218:26;4203:42;;4316:27;;;;4284:1;4272:14;;;;4151:19;;4121:236;;;4125:3;4385:6;4376:7;4373:19;4370:201;;;4446:19;;;4440:26;-1:-1:-1;;4529:1:166;4525:14;;;4541:3;4521:24;4517:37;4513:42;4498:58;4483:74;;4370:201;-1:-1:-1;;;;;4617:1:166;4601:14;;;4597:22;4584:36;;-1:-1:-1;3535:1352:166:o;5201:396::-;5350:2;5339:9;5332:21;5313:4;5382:6;5376:13;5425:6;5420:2;5409:9;5405:18;5398:34;5441:79;5513:6;5508:2;5497:9;5493:18;5488:2;5480:6;5476:15;5441:79;:::i;:::-;5581:2;5560:15;-1:-1:-1;;5556:29:166;5541:45;;;;5588:2;5537:54;;5201:396;-1:-1:-1;;5201:396:166:o;5602:127::-;5663:10;5658:3;5654:20;5651:1;5644:31;5694:4;5691:1;5684:15;5718:4;5715:1;5708:15;5602:127;274:1149:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c8063550d2b6211610104578063aa6ca808116100a2578063e2bbb15811610071578063e2bbb1581461045f578063e3056a3414610472578063e4c0aaf414610485578063eae4c19f1461049857600080fd5b8063aa6ca8081461041c578063c70920bc14610431578063cc04feff14610439578063dd62ed3e1461044c57600080fd5b806395d89b41116100de57806395d89b41146103db578063a457c2d7146103e3578063a8c62e76146103f6578063a9059cbb1461040957600080fd5b8063550d2b621461036a5780636f307dc31461038b57806370a08231146103b257600080fd5b8063313ce5671161017c5780633e0dc34e1161014b5780633e0dc34e146102e9578063441a3e70146103105780634ac032be146103235780634cf5fbf51461035757600080fd5b8063313ce567146102a157806333a100ca146102bb57806339509351146102ce5780633ba0b9a9146102e157600080fd5b8063158274a5116101b8578063158274a51461024b57806318160ddd14610272578063238efcbc1461028457806323b872dd1461028e57600080fd5b806306fdde03146101df578063095ea7b3146101fd5780630c340a2414610220575b600080fd5b6101e76104bf565b6040516101f49190611604565b60405180910390f35b61021061020b36600461162f565b610551565b60405190151581526020016101f4565b600554610233906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b6002545b6040519081526020016101f4565b61028c61056b565b005b61021061029c36600461165b565b610624565b6102a9610648565b60405160ff90911681526020016101f4565b61028c6102c936600461169c565b6106d1565b6102106102dc36600461162f565b610739565b61027661075b565b6102767f000000000000000000000000000000000000000000000000000000000000000081565b61027661031e3660046116b9565b610767565b61034a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516101f491906116db565b610276610365366004611703565b610891565b61037d6103783660046116b9565b610930565b6040516101f4929190611738565b6102337f000000000000000000000000000000000000000000000000000000000000000081565b6102766103c036600461169c565b6001600160a01b031660009081526020819052604090205490565b6101e761097b565b6102106103f136600461162f565b61098a565b600754610233906001600160a01b031681565b61021061041736600461162f565b610a05565b610424610a13565b6040516101f49190611751565b610276610ace565b61037d6104473660046116b9565b610b59565b61027661045a36600461179e565b610b73565b61027661046d3660046116b9565b610b9e565b600654610233906001600160a01b031681565b61028c61049336600461169c565b610bb2565b6102767f000000000000000000000000000000000000000000000000000000000000000081565b6060600380546104ce906117d7565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa906117d7565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b60003361055f818585610c87565b60019150505b92915050565b600654604080518082019091526002815261033360f41b6020820152906001600160a01b031633146105b95760405162461bcd60e51b81526004016105b09190611604565b60405180910390fd5b5060058054600680546001600160a01b03198084166001600160a01b03808416919091179095551690556040805192909116808352336020840152917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491015b60405180910390a150565b600033610632858285610dac565b61063d858585610e26565b506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611811565b905090565b600554604080518082019091526002815261033360f41b6020820152906001600160a01b031633146107165760405162461bcd60e51b81526004016105b09190611604565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b60003361055f81858561074c8383610b73565b610756919061184a565b610c87565b60006106cc6000610fca565b600080831160405180604001604052806002815260200161333160f01b815250906107a55760405162461bcd60e51b81526004016105b09190611604565b5033600090815260208190526040812054905083811015604051806040016040528060028152602001610ccd60f21b815250906107f55760405162461bcd60e51b81526004016105b09190611604565b50600061080061075b565b905061080c8582611023565b925083831015604051806040016040528060018152602001601960f91b8152509061084a5760405162461bcd60e51b81526004016105b09190611604565b506108553386611044565b6108896001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163385611173565b505092915050565b60008061089e6001610fca565b90506108d56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330876111d6565b6108df848261120e565b915082821015604051806040016040528060018152602001601960f91b8152509061091d5760405162461bcd60e51b81526004016105b09190611604565b506109288583611281565b509392505050565b6000606060006109406001610fca565b905061094c858261120e565b92508383101561097357604051806040016040528060018152602001601960f91b81525091505b509250929050565b6060600480546104ce906117d7565b600033816109988286610b73565b9050838110156109f85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105b0565b61063d8286868403610c87565b60003361055f818585610e26565b604051631f29a8cd60e31b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060906000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f94d466890602401600060405180830381865afa158015610a9d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ac59190810190611933565b50909392505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b35573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611a01565b600060606000610b6761075b565b905061094c8582611023565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000610bab338484610891565b9392505050565b600554604080518082019091526002815261033360f41b6020820152906001600160a01b03163314610bf75760405162461bcd60e51b81526004016105b09190611604565b50604080518082019091526002815261333160f01b60208201526001600160a01b038216610c385760405162461bcd60e51b81526004016105b09190611604565b50600680546001600160a01b0319166001600160a01b0383169081179091556040519081527f67235ba2e63c748a35b95c4f92a3bbc2a1389938170a5ce6c9add5d0b03a314a90602001610619565b6001600160a01b038316610ce95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105b0565b6001600160a01b038216610d4a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105b0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610db88484610b73565b90506000198114610e205781811015610e135760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105b0565b610e208484848403610c87565b50505050565b6001600160a01b038316610e8a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105b0565b6001600160a01b038216610eec5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105b0565b6001600160a01b03831660009081526020819052604090205481811015610f645760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105b0565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610e20565b600080610fd5610ace565b90506000610fe260025490565b905080600003610ffd5750670de0b6b3a76400009392505050565b836110115761100c828261120e565b61101b565b61101b8282611340565b949350505050565b6000806110308385611a1a565b905061101b670de0b6b3a764000082611a47565b6001600160a01b0382166110a45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105b0565b6001600160a01b038216600090815260208190526040902054818110156111185760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105b0565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610d9f565b505050565b6040516001600160a01b03831660248201526044810182905261116e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113bf565b6040516001600160a01b0380851660248301528316604482015260648101829052610e209085906323b872dd60e01b9060840161119f565b604080518082019091526002815261323560f01b6020820152600090826112485760405162461bcd60e51b81526004016105b09190611604565b508260000361125957506000610565565b600061126d670de0b6b3a764000085611a1a565b90506112798382611a47565b915050610565565b6001600160a01b0382166112d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105b0565b80600260008282546112e9919061184a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b604080518082019091526002815261323560f01b60208201526000908261137a5760405162461bcd60e51b81526004016105b09190611604565b508260000361138b57506000610565565b600061139f670de0b6b3a764000085611a1a565b90508260018203816113b3576113b3611a31565b04600101915050610565565b6000611414826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114919092919063ffffffff16565b80519091501561116e57808060200190518101906114329190611a69565b61116e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105b0565b606061101b848460008585600080866001600160a01b031685876040516114b89190611a8b565b60006040518083038185875af1925050503d80600081146114f5576040519150601f19603f3d011682016040523d82523d6000602084013e6114fa565b606091505b509150915061150b87838387611516565b979650505050505050565b6060831561158557825160000361157e576001600160a01b0385163b61157e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105b0565b508161101b565b61101b838381511561159a5781518083602001fd5b8060405162461bcd60e51b81526004016105b09190611604565b60005b838110156115cf5781810151838201526020016115b7565b50506000910152565b600081518084526115f08160208601602086016115b4565b601f01601f19169290920160200192915050565b602081526000610bab60208301846115d8565b6001600160a01b038116811461162c57600080fd5b50565b6000806040838503121561164257600080fd5b823561164d81611617565b946020939093013593505050565b60008060006060848603121561167057600080fd5b833561167b81611617565b9250602084013561168b81611617565b929592945050506040919091013590565b6000602082840312156116ae57600080fd5b8135610bab81611617565b600080604083850312156116cc57600080fd5b50508035926020909101359150565b60208101600583106116fd57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561171857600080fd5b833561172381611617565b95602085013595506040909401359392505050565b82815260406020820152600061101b60408301846115d8565b6020808252825182820181905260009190848201906040850190845b818110156117925783516001600160a01b03168352928401929184019160010161176d565b50909695505050505050565b600080604083850312156117b157600080fd5b82356117bc81611617565b915060208301356117cc81611617565b809150509250929050565b600181811c908216806117eb57607f821691505b60208210810361180b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561182357600080fd5b815160ff81168114610bab57600080fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561056557610565611834565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561189c5761189c61185d565b604052919050565b600067ffffffffffffffff8211156118be576118be61185d565b5060051b60200190565b600082601f8301126118d957600080fd5b815160206118ee6118e9836118a4565b611873565b82815260059290921b8401810191818101908684111561190d57600080fd5b8286015b848110156119285780518352918301918301611911565b509695505050505050565b60008060006060848603121561194857600080fd5b835167ffffffffffffffff8082111561196057600080fd5b818601915086601f83011261197457600080fd5b815160206119846118e9836118a4565b82815260059290921b8401810191818101908a8411156119a357600080fd5b948201945b838610156119ca5785516119bb81611617565b825294820194908201906119a8565b918901519197509093505050808211156119e357600080fd5b506119f0868287016118c8565b925050604084015190509250925092565b600060208284031215611a1357600080fd5b5051919050565b808202811582820484141761056557610565611834565b634e487b7160e01b600052601260045260246000fd5b600082611a6457634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611a7b57600080fd5b81518015158114610bab57600080fd5b60008251611a9d8184602087016115b4565b919091019291505056fea2646970667358221220a14e1fa925c7ba33556562fa70ade9c6449aa14a96d852ee8705c0c1fd72019264736f6c63430008110033",
    "sourceMap": "274:1149:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:131;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1391:14:166;;1384:22;1366:41;;1354:2;1339:18;4431:197:131;1226:187:166;325:32:11;;;;;-1:-1:-1;;;;;325:32:11;;;;;;-1:-1:-1;;;;;1582:32:166;;;1564:51;;1552:2;1537:18;325:32:11;1418:203:166;391:37:59;;;;;3242:106:131;3329:12;;3242:106;;;1996:25:166;;;1984:2;1969:18;3242:106:131;1850:177:166;846:301:11;;;:::i;:::-;;5190:286:131;;;;;;:::i;:::-;;:::i;1289:149:60:-;;;:::i;:::-;;;2665:4:166;2653:17;;;2635:36;;2623:2;2608:18;1289:149:60;2493:184:166;4339:122:60;;;;;;:::i;:::-;;:::i;5871:234:131:-;;;;;;:::i;:::-;;:::i;1702:107:60:-;;;:::i;353:31:59:-;;;;;3142:700:60;;;;;;:::i;:::-;;:::i;466:47:59:-;;;;;;;;;;;;:::i;2118:545:60:-;;;;;;:::i;:::-;;:::i;2700:405::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;717:44::-;;;;;3406:125:131;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:131;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;881:32:60:-;;;;;-1:-1:-1;;;;;881:32:60;;;3727:189:131;;;;;;:::i;:::-;;:::i;914:176:59:-;;;:::i;:::-;;;;;;;:::i;1475:190:60:-;;;:::i;3879:423::-;;;;;;:::i;:::-;;:::i;3974:149:131:-;;;;;;:::i;:::-;;:::i;1846:235:60:-;;;;;;:::i;:::-;;:::i;363:39:11:-;;;;;-1:-1:-1;;;;;363:39:11;;;555:253;;;;;;:::i;:::-;;:::i;799:44:60:-;;;;;2154:98:131;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:141;4568:32:131;719:10:141;4584:7:131;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;846:301:11:-;924:15;;941:21;;;;;;;;;;;;-1:-1:-1;;;941:21:11;;;;;-1:-1:-1;;;;;924:15:11;910:10;:29;902:61;;;;-1:-1:-1;;;902:61:11;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;999:8:11;;;1028:15;;;-1:-1:-1;;;;;;1017:26:11;;;-1:-1:-1;;;;;1028:15:11;;;1017:26;;;;;;;1053:28;;;1096:44;;;999:8;;;;6065:34:166;;;1129:10:11;6130:2:166;6115:18;;6108:43;999:8:11;1096:44;;6000:18:166;1096:44:11;;;;;;;;892:255;846:301::o;5190:286:131:-;5317:4;719:10:141;5373:38:131;5389:4;719:10:141;5404:6:131;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:131;;5190:286;-1:-1:-1;;;;5190:286:131:o;1289:149:60:-;1370:5;1409:10;-1:-1:-1;;;;;1394:35:60;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:44;;1289:149;:::o;4339:122::-;467:8:11;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;4428:8:60::1;:26:::0;;-1:-1:-1;;;;;;4428:26:60::1;-1:-1:-1::0;;;;;4428:26:60;;;::::1;::::0;;;::::1;::::0;;4339:122::o;5871:234:131:-;5959:4;719:10:141;6013:64:131;719:10:141;6029:7:131;6066:10;6038:25;719:10:141;6029:7:131;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1702:107:60:-;1756:7;1782:20;1796:5;1782:13;:20::i;3142:700::-;3263:33;3339:1;3320:16;:20;3342:23;;;;;;;;;;;;;-1:-1:-1;;;3342:23:60;;;3312:54;;;;;-1:-1:-1;;;3312:54:60;;;;;;;;:::i;:::-;-1:-1:-1;3415:10:60;3377:25;3506:18:131;;;;;;;;;;;3377:49:60;;3465:16;3444:17;:37;;3483:27;;;;;;;;;;;;;-1:-1:-1;;;3483:27:60;;;3436:75;;;;;-1:-1:-1;;;3436:75:60;;;;;;;;:::i;:::-;;3522:12;3537:14;:12;:14::i;:::-;3522:29;-1:-1:-1;3589:30:60;:16;3522:29;3589:24;:30::i;:::-;3561:58;;3666:16;3637:25;:45;;3684:24;;;;;;;;;;;;;-1:-1:-1;;;3684:24:60;;;3629:80;;;;;-1:-1:-1;;;3629:80:60;;;;;;;;:::i;:::-;;3720:35;3726:10;3738:16;3720:5;:35::i;:::-;3765:70;-1:-1:-1;;;;;3772:10:60;3765:31;3797:10;3809:25;3765:31;:70::i;:::-;3302:540;;3142:700;;;;:::o;2118:545::-;2267:25;2304:12;2319:19;2333:4;2319:13;:19::i;:::-;2304:34;-1:-1:-1;2349:80:60;-1:-1:-1;;;;;2356:10:60;2349:35;2385:10;2405:4;2412:16;2349:35;:80::i;:::-;2460:30;:16;2485:4;2460:24;:30::i;:::-;2440:50;;2529:17;2508;:38;;2548:24;;;;;;;;;;;;;-1:-1:-1;;;2548:24:60;;;2500:73;;;;;-1:-1:-1;;;2500:73:60;;;;;;;;:::i;:::-;;2584:37;2590:11;2603:17;2584:5;:37::i;:::-;2632:24;2118:545;;;;;:::o;2700:405::-;2837:25;2864:17;2897:12;2912:19;2926:4;2912:13;:19::i;:::-;2897:34;-1:-1:-1;2961:30:60;:16;2897:34;2961:24;:30::i;:::-;2941:50;;3025:17;3005;:37;3001:98;;;3064:24;;;;;;;;;;;;;-1:-1:-1;;;3064:24:60;;;3058:30;;3001:98;2887:218;2700:405;;;;;:::o;2365:102:131:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:141;6685:4:131;6766:25;719:10:141;6783:7:131;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:131;;6904:2:166;6801:85:131;;;6886:21:166;6943:2;6923:18;;;6916:30;6982:34;6962:18;;;6955:62;-1:-1:-1;;;7033:18:166;;;7026:35;7078:19;;6801:85:131;6702:401:166;6801:85:131;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:141;3860:28:131;719:10:141;3877:2:131;3881:6;3860:9;:28::i;914:176:59:-;1025:35;;-1:-1:-1;;;1025:35:59;;1053:6;1025:35;;;1996:25:166;967:15:59;;995:22;;-1:-1:-1;;;;;1025:13:59;:27;;;;1969:18:166;;1025:35:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1025:35:59;;;;;;;;;;;;:::i;:::-;-1:-1:-1;994:66:59;;914:176;-1:-1:-1;;;914:176:59:o;1475:190:60:-;1615:43;;-1:-1:-1;;;1615:43:60;;1652:4;1615:43;;;1564:51:166;1532:7:60;;1622:10;-1:-1:-1;;;;;1615:28:60;;;;1537:18:166;;1615:43:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3879:423::-;4016:33;4051:17;4084:12;4099:14;:12;:14::i;:::-;4084:29;-1:-1:-1;4151:30:60;:16;4084:29;4151:24;:30::i;3974:149:131:-;-1:-1:-1;;;;;4089:18:131;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;1846:235:60:-;1967:25;2015:59;2026:10;2038:16;2056:17;2015:10;:59::i;:::-;2008:66;1846:235;-1:-1:-1;;;1846:235:60:o;555:253:11:-;467:8;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;687:23:11::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;687:23:11::1;::::0;::::1;::::0;-1:-1:-1;;;;;651:34:11;::::1;643:68;;;;-1:-1:-1::0;;;643:68:11::1;;;;;;;;:::i;:::-;-1:-1:-1::0;721:15:11::1;:29:::0;;-1:-1:-1;;;;;;721:29:11::1;-1:-1:-1::0;;;;;721:29:11;::::1;::::0;;::::1;::::0;;;765:36:::1;::::0;1564:51:166;;;765:36:11::1;::::0;1552:2:166;1537:18;765:36:11::1;1418:203:166::0;10504:370:131;-1:-1:-1;;;;;10635:19:131;;10627:68;;;;-1:-1:-1;;;10627:68:131;;10078:2:166;10627:68:131;;;10060:21:166;10117:2;10097:18;;;10090:30;10156:34;10136:18;;;10129:62;-1:-1:-1;;;10207:18:166;;;10200:34;10251:19;;10627:68:131;9876:400:166;10627:68:131;-1:-1:-1;;;;;10713:21:131;;10705:68;;;;-1:-1:-1;;;10705:68:131;;10483:2:166;10705:68:131;;;10465:21:166;10522:2;10502:18;;;10495:30;10561:34;10541:18;;;10534:62;-1:-1:-1;;;10612:18:166;;;10605:32;10654:19;;10705:68:131;10281:398:166;10705:68:131;-1:-1:-1;;;;;10784:18:131;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1996:25:166;;;10835:32:131;;1969:18:166;10835:32:131;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:131;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:131;;10886:2:166;11404:68:131;;;10868:21:166;10925:2;10905:18;;;10898:30;10964:31;10944:18;;;10937:59;11013:18;;11404:68:131;10684:353:166;11404:68:131;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:131;;7591:68;;;;-1:-1:-1;;;7591:68:131;;11244:2:166;7591:68:131;;;11226:21:166;11283:2;11263:18;;;11256:30;11322:34;11302:18;;;11295:62;-1:-1:-1;;;11373:18:166;;;11366:35;11418:19;;7591:68:131;11042:401:166;7591:68:131;-1:-1:-1;;;;;7677:16:131;;7669:64;;;;-1:-1:-1;;;7669:64:131;;11650:2:166;7669:64:131;;;11632:21:166;11689:2;11669:18;;;11662:30;11728:34;11708:18;;;11701:62;-1:-1:-1;;;11779:18:166;;;11772:33;11822:19;;7669:64:131;11448:399:166;7669:64:131;-1:-1:-1;;;;;7815:15:131;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:131;;12054:2:166;7840:72:131;;;12036:21:166;12093:2;12073:18;;;12066:30;12132:34;12112:18;;;12105:62;-1:-1:-1;;;12183:18:166;;;12176:36;12229:19;;7840:72:131;11852:402:166;7840:72:131;-1:-1:-1;;;;;7946:15:131;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1996:25:166;;;8161:13:131;;8210:26;;1969:18:166;8210:26:131;;;;;;;8247:37;9422:659;4467:413:60;4534:7;4553:24;4580:17;:15;:17::i;:::-;4553:44;;4607:19;4629:13;3329:12:131;;;3242:106;4629:13:60;4607:35;;4656:11;4671:1;4656:16;4652:68;;-1:-1:-1;364:4:158;;4467:413:60;-1:-1:-1;;;4467:413:60:o;4652:68::-;4749:14;:124;;4836:37;:16;4861:11;4836:24;:37::i;:::-;4749:124;;;4782:35;:16;4805:11;4782:22;:35::i;:::-;4730:143;4467:413;-1:-1:-1;;;;4467:413:60:o;750:142:158:-;812:7;;849:5;853:1;849;:5;:::i;:::-;831:23;-1:-1:-1;872:13:158;364:4;831:23;872:13;:::i;9422:659:131:-;-1:-1:-1;;;;;9505:21:131;;9497:67;;;;-1:-1:-1;;;9497:67:131;;12988:2:166;9497:67:131;;;12970:21:166;13027:2;13007:18;;;13000:30;13066:34;13046:18;;;13039:62;-1:-1:-1;;;13117:18:166;;;13110:31;13158:19;;9497:67:131;12786:397:166;9497:67:131;-1:-1:-1;;;;;9660:18:131;;9635:22;9660:18;;;;;;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:131;;13390:2:166;9688:71:131;;;13372:21:166;13429:2;13409:18;;;13402:30;13468:34;13448:18;;;13441:62;-1:-1:-1;;;13519:18:166;;;13512:32;13561:19;;9688:71:131;13188:398:166;9688:71:131;-1:-1:-1;;;;;9793:18:131;;:9;:18;;;;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1996:25:166;;;9793:9:131;;:18;9978:37;;1969:18:166;9978:37:131;1850:177:166;10026:48:131;9487:594;9422:659;;:::o;763:205:135:-;902:58;;-1:-1:-1;;;;;13783:32:166;;902:58:135;;;13765:51:166;13832:18;;;13825:34;;;875:86:135;;895:5;;-1:-1:-1;;;925:23:135;13738:18:166;;902:58:135;;;;-1:-1:-1;;902:58:135;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:135;-1:-1:-1;;;;;;902:58:135;;;;;;;;;;875:19;:86::i;974:241::-;1139:68;;-1:-1:-1;;;;;14128:15:166;;;1139:68:135;;;14110:34:166;14180:15;;14160:18;;;14153:43;14212:18;;;14205:34;;;1112:96:135;;1132:5;;-1:-1:-1;;;1162:27:135;14045:18:166;;1139:68:135;13870:375:166;1662:273:158;1759:20;;;;;;;;;;;;-1:-1:-1;;;1759:20:158;;;;1724:7;;1751:6;1743:37;;;;-1:-1:-1;;;1743:37:158;;;;;;;;:::i;:::-;;1795:1;1800;1795:6;1791:138;;-1:-1:-1;1824:1:158;1817:8;;1791:138;1856:17;1876:7;364:4;1876:1;:7;:::i;:::-;1856:27;-1:-1:-1;1905:13:158;1917:1;1856:27;1905:13;:::i;:::-;1898:20;;;;;8567:535:131;-1:-1:-1;;;;;8650:21:131;;8642:65;;;;-1:-1:-1;;;8642:65:131;;14452:2:166;8642:65:131;;;14434:21:166;14491:2;14471:18;;;14464:30;14530:33;14510:18;;;14503:61;14581:18;;8642:65:131;14250:355:166;8642:65:131;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:131;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1996:25:166;;;8999:37:131;;1969:18:166;8999:37:131;;;;;;;8567:535;;:::o;1941:642:158:-;2036:20;;;;;;;;;;;;-1:-1:-1;;;2036:20:158;;;;2001:7;;2028:6;2020:37;;;;-1:-1:-1;;;2020:37:158;;;;;;;;:::i;:::-;;2072:1;2077;2072:6;2068:509;;-1:-1:-1;2101:1:158;2094:8;;2068:509;2133:17;2153:7;364:4;2153:1;:7;:::i;:::-;2133:27;;2546:1;2541;2529:9;:13;2528:19;;;;;:::i;:::-;;2551:1;2527:25;2520:32;;;;;3747:706:135;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:135;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:135;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:135;;15094:2:166;4351:85:135;;;15076:21:166;15133:2;15113:18;;;15106:30;15172:34;15152:18;;;15145:62;-1:-1:-1;;;15223:18:166;;;15216:40;15273:19;;4351:85:135;14892:406:166;3873:223:140;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:140;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:140:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:140;;;7908:60;;;;-1:-1:-1;;;7908:60:140;;16204:2:166;7908:60:140;;;16186:21:166;16243:2;16223:18;;;16216:30;16282:31;16262:18;;;16255:59;16331:18;;7908:60:140;16002:353:166;7908:60:140;-1:-1:-1;8003:10:140;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:140;;;;;;;;:::i;14:250:166:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:166;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:166;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:166:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:131::-;-1:-1:-1;;;;;845:31:166;;835:42;;825:70;;891:1;888;881:12;825:70;770:131;:::o;906:315::-;974:6;982;1035:2;1023:9;1014:7;1010:23;1006:32;1003:52;;;1051:1;1048;1041:12;1003:52;1090:9;1077:23;1109:31;1134:5;1109:31;:::i;:::-;1159:5;1211:2;1196:18;;;;1183:32;;-1:-1:-1;;;906:315:166:o;2032:456::-;2109:6;2117;2125;2178:2;2166:9;2157:7;2153:23;2149:32;2146:52;;;2194:1;2191;2184:12;2146:52;2233:9;2220:23;2252:31;2277:5;2252:31;:::i;:::-;2302:5;-1:-1:-1;2359:2:166;2344:18;;2331:32;2372:33;2331:32;2372:33;:::i;:::-;2032:456;;2424:7;;-1:-1:-1;;;2478:2:166;2463:18;;;;2450:32;;2032:456::o;2682:247::-;2741:6;2794:2;2782:9;2773:7;2769:23;2765:32;2762:52;;;2810:1;2807;2800:12;2762:52;2849:9;2836:23;2868:31;2893:5;2868:31;:::i;3116:248::-;3184:6;3192;3245:2;3233:9;3224:7;3220:23;3216:32;3213:52;;;3261:1;3258;3251:12;3213:52;-1:-1:-1;;3284:23:166;;;3354:2;3339:18;;;3326:32;;-1:-1:-1;3116:248:166:o;3369:338::-;3511:2;3496:18;;3544:1;3533:13;;3523:144;;3589:10;3584:3;3580:20;3577:1;3570:31;3624:4;3621:1;3614:15;3652:4;3649:1;3642:15;3523:144;3676:25;;;3369:338;:::o;3712:383::-;3789:6;3797;3805;3858:2;3846:9;3837:7;3833:23;3829:32;3826:52;;;3874:1;3871;3864:12;3826:52;3913:9;3900:23;3932:31;3957:5;3932:31;:::i;:::-;3982:5;4034:2;4019:18;;4006:32;;-1:-1:-1;4085:2:166;4070:18;;;4057:32;;3712:383;-1:-1:-1;;;3712:383:166:o;4100:291::-;4277:6;4266:9;4259:25;4320:2;4315;4304:9;4300:18;4293:30;4240:4;4340:45;4381:2;4370:9;4366:18;4358:6;4340:45;:::i;4396:674::-;4583:2;4635:21;;;4705:13;;4608:18;;;4727:22;;;4554:4;;4583:2;4806:15;;;;4780:2;4765:18;;;4554:4;4849:195;4863:6;4860:1;4857:13;4849:195;;;4928:13;;-1:-1:-1;;;;;4924:39:166;4912:52;;5019:15;;;;4984:12;;;;4960:1;4878:9;4849:195;;;-1:-1:-1;5061:3:166;;4396:674;-1:-1:-1;;;;;;4396:674:166:o;5075:388::-;5143:6;5151;5204:2;5192:9;5183:7;5179:23;5175:32;5172:52;;;5220:1;5217;5210:12;5172:52;5259:9;5246:23;5278:31;5303:5;5278:31;:::i;:::-;5328:5;-1:-1:-1;5385:2:166;5370:18;;5357:32;5398:33;5357:32;5398:33;:::i;:::-;5450:7;5440:17;;;5075:388;;;;;:::o;5468:380::-;5547:1;5543:12;;;;5590;;;5611:61;;5665:4;5657:6;5653:17;5643:27;;5611:61;5718:2;5710:6;5707:14;5687:18;5684:38;5681:161;;5764:10;5759:3;5755:20;5752:1;5745:31;5799:4;5796:1;5789:15;5827:4;5824:1;5817:15;5681:161;;5468:380;;;:::o;6162:273::-;6230:6;6283:2;6271:9;6262:7;6258:23;6254:32;6251:52;;;6299:1;6296;6289:12;6251:52;6331:9;6325:16;6381:4;6374:5;6370:16;6363:5;6360:27;6350:55;;6401:1;6398;6391:12;6440:127;6501:10;6496:3;6492:20;6489:1;6482:31;6532:4;6529:1;6522:15;6556:4;6553:1;6546:15;6572:125;6637:9;;;6658:10;;;6655:36;;;6671:18;;:::i;7108:127::-;7169:10;7164:3;7160:20;7157:1;7150:31;7200:4;7197:1;7190:15;7224:4;7221:1;7214:15;7240:275;7311:2;7305:9;7376:2;7357:13;;-1:-1:-1;;7353:27:166;7341:40;;7411:18;7396:34;;7432:22;;;7393:62;7390:88;;;7458:18;;:::i;:::-;7494:2;7487:22;7240:275;;-1:-1:-1;7240:275:166:o;7520:191::-;7588:4;7621:18;7613:6;7610:30;7607:56;;;7643:18;;:::i;:::-;-1:-1:-1;7688:1:166;7684:14;7700:4;7680:25;;7520:191::o;7716:667::-;7781:5;7834:3;7827:4;7819:6;7815:17;7811:27;7801:55;;7852:1;7849;7842:12;7801:55;7881:6;7875:13;7907:4;7931:68;7947:51;7995:2;7947:51;:::i;:::-;7931:68;:::i;:::-;8033:15;;;8119:1;8115:10;;;;8103:23;;8099:32;;;8064:12;;;;8143:15;;;8140:35;;;8171:1;8168;8161:12;8140:35;8207:2;8199:6;8195:15;8219:135;8235:6;8230:3;8227:15;8219:135;;;8301:10;;8289:23;;8332:12;;;;8252;;8219:135;;;-1:-1:-1;8372:5:166;7716:667;-1:-1:-1;;;;;;7716:667:166:o;8388:1294::-;8542:6;8550;8558;8611:2;8599:9;8590:7;8586:23;8582:32;8579:52;;;8627:1;8624;8617:12;8579:52;8660:9;8654:16;8689:18;8730:2;8722:6;8719:14;8716:34;;;8746:1;8743;8736:12;8716:34;8784:6;8773:9;8769:22;8759:32;;8829:7;8822:4;8818:2;8814:13;8810:27;8800:55;;8851:1;8848;8841:12;8800:55;8880:2;8874:9;8902:4;8926:68;8942:51;8990:2;8942:51;:::i;8926:68::-;9028:15;;;9110:1;9106:10;;;;9098:19;;9094:28;;;9059:12;;;;9134:19;;;9131:39;;;9166:1;9163;9156:12;9131:39;9190:11;;;;9210:210;9226:6;9221:3;9218:15;9210:210;;;9299:3;9293:10;9316:31;9341:5;9316:31;:::i;:::-;9360:18;;9243:12;;;;9398;;;;9210:210;;;9475:18;;;9469:25;9439:5;;-1:-1:-1;9469:25:166;;-1:-1:-1;;;9506:16:166;;;9503:36;;;9535:1;9532;9525:12;9503:36;;9558:74;9624:7;9613:8;9602:9;9598:24;9558:74;:::i;:::-;9548:84;;;9672:2;9661:9;9657:18;9651:25;9641:35;;8388:1294;;;;;:::o;9687:184::-;9757:6;9810:2;9798:9;9789:7;9785:23;9781:32;9778:52;;;9826:1;9823;9816:12;9778:52;-1:-1:-1;9849:16:166;;9687:184;-1:-1:-1;9687:184:166:o;12259:168::-;12332:9;;;12363;;12380:15;;;12374:22;;12360:37;12350:71;;12401:18;;:::i;12432:127::-;12493:10;12488:3;12484:20;12481:1;12474:31;12524:4;12521:1;12514:15;12548:4;12545:1;12538:15;12564:217;12604:1;12630;12620:132;;12674:10;12669:3;12665:20;12662:1;12655:31;12709:4;12706:1;12699:15;12737:4;12734:1;12727:15;12620:132;-1:-1:-1;12766:9:166;;12564:217::o;14610:277::-;14677:6;14730:2;14718:9;14709:7;14705:23;14701:32;14698:52;;;14746:1;14743;14736:12;14698:52;14778:9;14772:16;14831:5;14824:13;14817:21;14810:5;14807:32;14797:60;;14853:1;14850;14843:12;15710:287;15839:3;15877:6;15871:13;15893:66;15952:6;15947:3;15940:4;15932:6;15928:17;15893:66;:::i;:::-;15975:16;;;;;15710:287;-1:-1:-1;;15710:287:166:o",
    "linkReferences": {},
    "immutableReferences": {
      "15385": [
        {
          "start": 750,
          "length": 32
        },
        {
          "start": 2594,
          "length": 32
        }
      ],
      "15388": [
        {
          "start": 592,
          "length": 32
        },
        {
          "start": 2646,
          "length": 32
        }
      ],
      "15393": [
        {
          "start": 808,
          "length": 32
        }
      ],
      "15504": [
        {
          "start": 912,
          "length": 32
        },
        {
          "start": 1612,
          "length": 32
        },
        {
          "start": 2146,
          "length": 32
        },
        {
          "start": 2221,
          "length": 32
        },
        {
          "start": 2790,
          "length": 32
        }
      ],
      "15508": [
        {
          "start": 1181,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptGovernance()": "238efcbc",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "balancerVault()": "158274a5",
    "changeGovernor(address)": "e4c0aaf4",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deployedAt()": "eae4c19f",
    "deposit(uint256,uint256)": "e2bbb158",
    "depositFor(address,uint256,uint256)": "4cf5fbf5",
    "dryDeposit(uint256,uint256)": "550d2b62",
    "dryWithdraw(uint256,uint256)": "cc04feff",
    "exchangeRate()": "3ba0b9a9",
    "getTokens()": "aa6ca808",
    "governor()": "0c340a24",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "pendingGovernor()": "e3056a34",
    "poolId()": "3e0dc34e",
    "setStrategy(address)": "33a100ca",
    "strategy()": "a8c62e76",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "totalUnderlying()": "c70920bc",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "underlying()": "6f307dc3",
    "vaultType()": "4ac032be",
    "withdraw(uint256,uint256)": "441a3e70"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"enum Vaults.Type\",\"name\":\"_vaultType\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IVault\",\"name\":\"_balancerVault\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorChangeRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balancerVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"underlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minVaultTokensOut\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokensMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minVaultTokensOut\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokensMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"underlyingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minVaultTokensOut\",\"type\":\"uint256\"}],\"name\":\"dryDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokensMinted\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minUnderlyingOut\",\"type\":\"uint256\"}],\"name\":\"dryWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"underlyingAmountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"}],\"name\":\"setStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultType\",\"outputs\":[{\"internalType\":\"enum Vaults.Type\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minUnderlyingOut\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"underlyingAmountWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256,uint256)\":{\"params\":{\"underlyingAmount\":\"the amount of underlying to deposit\"},\"returns\":{\"vaultTokensMinted\":\"the amount of vault token sent back\"}},\"exchangeRate()\":{\"returns\":{\"_0\":\"The exchange rate between an underlying tokens and the token of this vault\"}},\"getTokens()\":{\"returns\":{\"_0\":\"The token associated with this vault In the case of an LP token, this will be the underlying tokens associated to it (e.g. [ETH, DAI] for a ETH/DAI pool LP token or [USDC] for aUSDC) In most cases, the tokens returned will not be LP tokens\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setStrategy(address)\":{\"params\":{\"strategyAddress\":\"the address of the strategy contract that should follow the `IStrategy` interface\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalUnderlying()\":{\"returns\":{\"_0\":\"The total amount of underlying tokens in the vault\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"withdraw(uint256,uint256)\":{\"params\":{\"vaultTokenAmount\":\"the amount of vault token to withdraw\"},\"returns\":{\"underlyingAmountWithdrawn\":\"the amount of LP token sent back\"}}},\"stateVariables\":{\"vaultType\":{\"return\":\"The type of the vault\",\"returns\":{\"_0\":\"The type of the vault\"}}},\"version\":1},\"userdoc\":{\"events\":{\"GovernorChangeRequested(address)\":{\"notice\":\"Emmited when the governor is change is requested\"},\"GovernorChanged(address,address)\":{\"notice\":\"Emmited when the governor is changed\"}},\"kind\":\"user\",\"methods\":{\"acceptGovernance()\":{\"notice\":\"Called by the pending governor to approve the change\"},\"changeGovernor(address)\":{\"notice\":\"Changes the governor can only be called by the current governor\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposits `underlyingAmount` of LP token supported and sends back the received vault tokens\"},\"depositFor(address,uint256,uint256)\":{\"notice\":\"Simlar to `deposit(uint256 underlyingAmount)` but credits the tokens to `beneficiary` instead of `msg.sender`\"},\"dryDeposit(uint256,uint256)\":{\"notice\":\"Dry-run version of deposit\"},\"dryWithdraw(uint256,uint256)\":{\"notice\":\"Dry-run version of `withdraw`\"},\"governor()\":{\"notice\":\"Returns the current governor\"},\"pendingGovernor()\":{\"notice\":\"Returns the pending governor\"},\"poolId()\":{\"notice\":\"Balancer pool ID\"},\"setStrategy(address)\":{\"notice\":\"Sets the address of the strategy to use for this vault This will be used through governance\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraws `vaultTokenAmount` of LP token supported and burns the vault tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/BalancerPoolVault.sol\":\"BalancerPoolVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/auth/Governable.sol\":{\"keccak256\":\"0x8e35f59c8df176f2f2ec0b27bc567106f419942f28b317c4aeb459572c7cddc9\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://2bbe14ec52921d7a1a67116dbfa1729647f94aded19b4949765f4260c46b99fd\",\"dweb:/ipfs/QmXhqMmvwZRUgAFNCxifNKPE2FkDEDVpCBMQNs2LBEQsFi\"]},\"contracts/auth/GovernableBase.sol\":{\"keccak256\":\"0x076c1535458771c52ae11bdd7747704ff990bb8e778c678c5963d4453c43eff0\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://90296c3c42624636dc61c63dccb91807566d905607e13cf3f85dadde65e4ef9f\",\"dweb:/ipfs/QmNdL6uFNGLgwvgwuGVqp2wmmdsKViQhuFeMGNgHsdCeQ6\"]},\"contracts/vaults/BalancerPoolVault.sol\":{\"keccak256\":\"0xeacab41a07fc7b34acf9d0509862dbb09b44ee48a939175d8559c7926f972649\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://2db06d16db819044896d48673e6ebb2768c2f24c63e498cb4afef1914632120d\",\"dweb:/ipfs/QmXusJ8oETy5kfBAGELEo7LpXZ1j6g1pw2Ujr48dhHEBat\"]},\"contracts/vaults/BaseVault.sol\":{\"keccak256\":\"0xbe38be0d947fea342a98481d07e759bbe466dfe00fba18a9834862a896cc064d\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://bca34c52cf128f2442934383469fb0ce56070e49912628c5c60e0856105fc3ff\",\"dweb:/ipfs/QmbUN5LpAMi9ttG216jxURZGSA2vS8gyMkN3KCRbBDVkbA\"]},\"interfaces/IGovernable.sol\":{\"keccak256\":\"0x5e0804b45ef3fb3cfd9bf24999ea98307d157dd1e3fb4965ab902f16a8a7a834\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cc9a2bcf74ff86ae5c89873dd7eea6bb4d9c71bf67f63414cf6519a17bb60066\",\"dweb:/ipfs/QmT45sh3fadFtq6gD1STeTxtFgE1AQ6SNVtCbChoWdRkid\"]},\"interfaces/IGyroVault.sol\":{\"keccak256\":\"0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4\",\"dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL\"]},\"interfaces/balancer/IAsset.sol\":{\"keccak256\":\"0x620a03c52641b8e1732123f17d23b84c1f82120c74ff7cd87e752f797740ad25\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://5c90daea9d62b92331bed096990fa73cdeb912ccbe46d83732e1cdd1652c5658\",\"dweb:/ipfs/QmQaVRCo2ttZj8QqtKPMfMux5w816nPyFQhLVPm81Do9UC\"]},\"interfaces/balancer/IAuthorizer.sol\":{\"keccak256\":\"0x9d6ac02e7069ded94f5142e8c5ad7981dad84f9e1e5dcd715da880de08cd080d\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4045080e6b12749bd82eb1cb24736efdb59c81e044b1b9c4607ac2b6d460ce3f\",\"dweb:/ipfs/Qma1KE11aq8nuNBSMQxW6bY2b7atBoSZr6EBZ8xSP1by28\"]},\"interfaces/balancer/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x4d948a2d8d3f52b5184d947049871ad351aa63156c32229a2dc7f5e6d324c7e5\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://5281b98c23c7b39ecb81981697ce0602162d2c7c0a0c53c6f65d609edb9a9eb4\",\"dweb:/ipfs/QmSLdi64nRpmey1JKhvnkiSqX2EmtAs15RetU3eMZjVa7Y\"]},\"interfaces/balancer/ISignaturesValidator.sol\":{\"keccak256\":\"0x69ec4ebe37eec8374c9c3681d4636ccf0e399ff599f9d4622428df57d4e77cba\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://7dd06778cbed2b7c800967f711d3bc71b4d44171372139e884d74ef7f71e0166\",\"dweb:/ipfs/QmeAeUostyapZeMHkrdwfxUtmFR6tZuLUro17LCH6cB1Wo\"]},\"interfaces/balancer/ITemporarilyPausable.sol\":{\"keccak256\":\"0xeb68d86c8bf05f164abf5db93937f4e7a574c82193e5b6b72c6722e986fa2e26\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cd83c8327b77acbfd77fc4c6027a2df39c3257d17b43fe9ca619174b550393dd\",\"dweb:/ipfs/QmXdhoZKTBgnVNgU8efT3jDpXqDJt5rDtrhbag6Qb447AK\"]},\"interfaces/balancer/IVault.sol\":{\"keccak256\":\"0x2cf5253065be223b5aba19cc04371bc6972112c7d5ee5c1c6c3272acb09553c8\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://c5996526c2fc484ea3834da36079515cf35bdc29e700d450a1b61fbdfdedcdc8\",\"dweb:/ipfs/QmSauWgbgTza9wBBJ4CNz6WKx6A1E6zNXqQGrZZabwwV4W\"]},\"interfaces/balancer/IWETH.sol\":{\"keccak256\":\"0xd1ca6e0e7b1aabb3b7cc84c4988a831f4cebb5e6c70e7368ef19d0e1f1444c25\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://73a55d58dc3e9168ac6da08c87c0803e7541fe92ed4068d3229820be9f2384ad\",\"dweb:/ipfs/QmYDEUpvHPRXrA6VnTmdYETSaYHKBSkApx38aQga1cVwHc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"libraries/Errors.sol\":{\"keccak256\":\"0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55\",\"dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC\"]},\"libraries/FixedPoint.sol\":{\"keccak256\":\"0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235\",\"dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz\"]},\"libraries/LogExpMath.sol\":{\"keccak256\":\"0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4\",\"dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm\"]},\"libraries/Vaults.sol\":{\"keccak256\":\"0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b\",\"dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_governor",
              "type": "address"
            },
            {
              "internalType": "enum Vaults.Type",
              "name": "_vaultType",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "_poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IVault",
              "name": "_balancerVault",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GovernorChangeRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldGovernor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GovernorChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptGovernance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "balancerVault",
          "outputs": [
            {
              "internalType": "contract IVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeGovernor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "deployedAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "underlyingAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minVaultTokensOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokensMinted",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "underlyingAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minVaultTokensOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokensMinted",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "underlyingAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minVaultTokensOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dryDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokensMinted",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "err",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minUnderlyingOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dryWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "underlyingAmountWithdrawn",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "err",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "exchangeRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokens",
          "outputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "governor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingGovernor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategyAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultType",
          "outputs": [
            {
              "internalType": "enum Vaults.Type",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minUnderlyingOut",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "underlyingAmountWithdrawn",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the decimals places of the token."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "deposit(uint256,uint256)": {
            "params": {
              "underlyingAmount": "the amount of underlying to deposit"
            },
            "returns": {
              "vaultTokensMinted": "the amount of vault token sent back"
            }
          },
          "exchangeRate()": {
            "returns": {
              "_0": "The exchange rate between an underlying tokens and the token of this vault"
            }
          },
          "getTokens()": {
            "returns": {
              "_0": "The token associated with this vault In the case of an LP token, this will be the underlying tokens associated to it (e.g. [ETH, DAI] for a ETH/DAI pool LP token or [USDC] for aUSDC) In most cases, the tokens returned will not be LP tokens"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "setStrategy(address)": {
            "params": {
              "strategyAddress": "the address of the strategy contract that should follow the `IStrategy` interface"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "totalUnderlying()": {
            "returns": {
              "_0": "The total amount of underlying tokens in the vault"
            }
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "withdraw(uint256,uint256)": {
            "params": {
              "vaultTokenAmount": "the amount of vault token to withdraw"
            },
            "returns": {
              "underlyingAmountWithdrawn": "the amount of LP token sent back"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptGovernance()": {
            "notice": "Called by the pending governor to approve the change"
          },
          "changeGovernor(address)": {
            "notice": "Changes the governor can only be called by the current governor"
          },
          "deposit(uint256,uint256)": {
            "notice": "Deposits `underlyingAmount` of LP token supported and sends back the received vault tokens"
          },
          "depositFor(address,uint256,uint256)": {
            "notice": "Simlar to `deposit(uint256 underlyingAmount)` but credits the tokens to `beneficiary` instead of `msg.sender`"
          },
          "dryDeposit(uint256,uint256)": {
            "notice": "Dry-run version of deposit"
          },
          "dryWithdraw(uint256,uint256)": {
            "notice": "Dry-run version of `withdraw`"
          },
          "governor()": {
            "notice": "Returns the current governor"
          },
          "pendingGovernor()": {
            "notice": "Returns the pending governor"
          },
          "poolId()": {
            "notice": "Balancer pool ID"
          },
          "setStrategy(address)": {
            "notice": "Sets the address of the strategy to use for this vault This will be used through governance"
          },
          "withdraw(uint256,uint256)": {
            "notice": "Withdraws `vaultTokenAmount` of LP token supported and burns the vault tokens"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/vaults/BalancerPoolVault.sol": "BalancerPoolVault"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/auth/Governable.sol": {
        "keccak256": "0x8e35f59c8df176f2f2ec0b27bc567106f419942f28b317c4aeb459572c7cddc9",
        "urls": [
          "bzz-raw://2bbe14ec52921d7a1a67116dbfa1729647f94aded19b4949765f4260c46b99fd",
          "dweb:/ipfs/QmXhqMmvwZRUgAFNCxifNKPE2FkDEDVpCBMQNs2LBEQsFi"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/auth/GovernableBase.sol": {
        "keccak256": "0x076c1535458771c52ae11bdd7747704ff990bb8e778c678c5963d4453c43eff0",
        "urls": [
          "bzz-raw://90296c3c42624636dc61c63dccb91807566d905607e13cf3f85dadde65e4ef9f",
          "dweb:/ipfs/QmNdL6uFNGLgwvgwuGVqp2wmmdsKViQhuFeMGNgHsdCeQ6"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/vaults/BalancerPoolVault.sol": {
        "keccak256": "0xeacab41a07fc7b34acf9d0509862dbb09b44ee48a939175d8559c7926f972649",
        "urls": [
          "bzz-raw://2db06d16db819044896d48673e6ebb2768c2f24c63e498cb4afef1914632120d",
          "dweb:/ipfs/QmXusJ8oETy5kfBAGELEo7LpXZ1j6g1pw2Ujr48dhHEBat"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/vaults/BaseVault.sol": {
        "keccak256": "0xbe38be0d947fea342a98481d07e759bbe466dfe00fba18a9834862a896cc064d",
        "urls": [
          "bzz-raw://bca34c52cf128f2442934383469fb0ce56070e49912628c5c60e0856105fc3ff",
          "dweb:/ipfs/QmbUN5LpAMi9ttG216jxURZGSA2vS8gyMkN3KCRbBDVkbA"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGovernable.sol": {
        "keccak256": "0x5e0804b45ef3fb3cfd9bf24999ea98307d157dd1e3fb4965ab902f16a8a7a834",
        "urls": [
          "bzz-raw://cc9a2bcf74ff86ae5c89873dd7eea6bb4d9c71bf67f63414cf6519a17bb60066",
          "dweb:/ipfs/QmT45sh3fadFtq6gD1STeTxtFgE1AQ6SNVtCbChoWdRkid"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGyroVault.sol": {
        "keccak256": "0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644",
        "urls": [
          "bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4",
          "dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IAsset.sol": {
        "keccak256": "0x620a03c52641b8e1732123f17d23b84c1f82120c74ff7cd87e752f797740ad25",
        "urls": [
          "bzz-raw://5c90daea9d62b92331bed096990fa73cdeb912ccbe46d83732e1cdd1652c5658",
          "dweb:/ipfs/QmQaVRCo2ttZj8QqtKPMfMux5w816nPyFQhLVPm81Do9UC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IAuthorizer.sol": {
        "keccak256": "0x9d6ac02e7069ded94f5142e8c5ad7981dad84f9e1e5dcd715da880de08cd080d",
        "urls": [
          "bzz-raw://4045080e6b12749bd82eb1cb24736efdb59c81e044b1b9c4607ac2b6d460ce3f",
          "dweb:/ipfs/Qma1KE11aq8nuNBSMQxW6bY2b7atBoSZr6EBZ8xSP1by28"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IFlashLoanRecipient.sol": {
        "keccak256": "0x4d948a2d8d3f52b5184d947049871ad351aa63156c32229a2dc7f5e6d324c7e5",
        "urls": [
          "bzz-raw://5281b98c23c7b39ecb81981697ce0602162d2c7c0a0c53c6f65d609edb9a9eb4",
          "dweb:/ipfs/QmSLdi64nRpmey1JKhvnkiSqX2EmtAs15RetU3eMZjVa7Y"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/ISignaturesValidator.sol": {
        "keccak256": "0x69ec4ebe37eec8374c9c3681d4636ccf0e399ff599f9d4622428df57d4e77cba",
        "urls": [
          "bzz-raw://7dd06778cbed2b7c800967f711d3bc71b4d44171372139e884d74ef7f71e0166",
          "dweb:/ipfs/QmeAeUostyapZeMHkrdwfxUtmFR6tZuLUro17LCH6cB1Wo"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/ITemporarilyPausable.sol": {
        "keccak256": "0xeb68d86c8bf05f164abf5db93937f4e7a574c82193e5b6b72c6722e986fa2e26",
        "urls": [
          "bzz-raw://cd83c8327b77acbfd77fc4c6027a2df39c3257d17b43fe9ca619174b550393dd",
          "dweb:/ipfs/QmXdhoZKTBgnVNgU8efT3jDpXqDJt5rDtrhbag6Qb447AK"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IVault.sol": {
        "keccak256": "0x2cf5253065be223b5aba19cc04371bc6972112c7d5ee5c1c6c3272acb09553c8",
        "urls": [
          "bzz-raw://c5996526c2fc484ea3834da36079515cf35bdc29e700d450a1b61fbdfdedcdc8",
          "dweb:/ipfs/QmSauWgbgTza9wBBJ4CNz6WKx6A1E6zNXqQGrZZabwwV4W"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IWETH.sol": {
        "keccak256": "0xd1ca6e0e7b1aabb3b7cc84c4988a831f4cebb5e6c70e7368ef19d0e1f1444c25",
        "urls": [
          "bzz-raw://73a55d58dc3e9168ac6da08c87c0803e7541fe92ed4068d3229820be9f2384ad",
          "dweb:/ipfs/QmYDEUpvHPRXrA6VnTmdYETSaYHKBSkApx38aQga1cVwHc"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "libraries/Errors.sol": {
        "keccak256": "0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd",
        "urls": [
          "bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55",
          "dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/FixedPoint.sol": {
        "keccak256": "0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f",
        "urls": [
          "bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235",
          "dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/LogExpMath.sol": {
        "keccak256": "0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6",
        "urls": [
          "bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4",
          "dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Vaults.sol": {
        "keccak256": "0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f",
        "urls": [
          "bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b",
          "dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/vaults/BalancerPoolVault.sol",
    "id": 15479,
    "exportedSymbols": {
      "Address": [
        49309
      ],
      "BalancerPoolVault": [
        15478
      ],
      "BaseVault": [
        15869
      ],
      "Context": [
        49331
      ],
      "ERC20": [
        47453
      ],
      "Errors": [
        56056
      ],
      "FixedPoint": [
        56426
      ],
      "Governable": [
        5458
      ],
      "GovernableBase": [
        5552
      ],
      "IAsset": [
        16864
      ],
      "IAuthorizer": [
        16879
      ],
      "IERC20": [
        47531
      ],
      "IERC20Metadata": [
        47556
      ],
      "IERC20Permit": [
        47592
      ],
      "IFlashLoanRecipient": [
        17005
      ],
      "IGovernable": [
        16176
      ],
      "IGyroVault": [
        16414
      ],
      "ISignaturesValidator": [
        17087
      ],
      "ITemporarilyPausable": [
        17106
      ],
      "IVault": [
        17607
      ],
      "IWETH": [
        17622
      ],
      "LogExpMath": [
        57808
      ],
      "SafeERC20": [
        47873
      ],
      "Vaults": [
        58229
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:1250:59",
    "nodes": [
      {
        "id": 15378,
        "nodeType": "PragmaDirective",
        "src": "174:23:59",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 15379,
        "nodeType": "ImportDirective",
        "src": "199:46:59",
        "nodes": [],
        "absolutePath": "interfaces/balancer/IVault.sol",
        "file": "../../interfaces/balancer/IVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15479,
        "sourceUnit": 17608,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15380,
        "nodeType": "ImportDirective",
        "src": "247:25:59",
        "nodes": [],
        "absolutePath": "contracts/vaults/BaseVault.sol",
        "file": "./BaseVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15479,
        "sourceUnit": 15870,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15478,
        "nodeType": "ContractDefinition",
        "src": "274:1149:59",
        "nodes": [
          {
            "id": 15385,
            "nodeType": "VariableDeclaration",
            "src": "353:31:59",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 15383,
              "nodeType": "StructuredDocumentation",
              "src": "320:28:59",
              "text": "@notice Balancer pool ID"
            },
            "functionSelector": "3e0dc34e",
            "mutability": "immutable",
            "name": "poolId",
            "nameLocation": "378:6:59",
            "scope": 15478,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15384,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "353:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 15388,
            "nodeType": "VariableDeclaration",
            "src": "391:37:59",
            "nodes": [],
            "constant": false,
            "functionSelector": "158274a5",
            "mutability": "immutable",
            "name": "balancerVault",
            "nameLocation": "415:13:59",
            "scope": 15478,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVault_$17607",
              "typeString": "contract IVault"
            },
            "typeName": {
              "id": 15387,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15386,
                "name": "IVault",
                "nameLocations": [
                  "391:6:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17607,
                "src": "391:6:59"
              },
              "referencedDeclaration": 17607,
              "src": "391:6:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$17607",
                "typeString": "contract IVault"
              }
            },
            "visibility": "public"
          },
          {
            "id": 15393,
            "nodeType": "VariableDeclaration",
            "src": "466:47:59",
            "nodes": [],
            "baseFunctions": [
              16313
            ],
            "constant": false,
            "documentation": {
              "id": 15389,
              "nodeType": "StructuredDocumentation",
              "src": "435:26:59",
              "text": "@inheritdoc IGyroVault"
            },
            "functionSelector": "4ac032be",
            "mutability": "immutable",
            "name": "vaultType",
            "nameLocation": "504:9:59",
            "overrides": {
              "id": 15392,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "495:8:59"
            },
            "scope": 15478,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Type_$58228",
              "typeString": "enum Vaults.Type"
            },
            "typeName": {
              "id": 15391,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15390,
                "name": "Vaults.Type",
                "nameLocations": [
                  "466:6:59",
                  "473:4:59"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58228,
                "src": "466:11:59"
              },
              "referencedDeclaration": 58228,
              "src": "466:11:59",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Type_$58228",
                "typeString": "enum Vaults.Type"
              }
            },
            "visibility": "public"
          },
          {
            "id": 15431,
            "nodeType": "FunctionDefinition",
            "src": "520:357:59",
            "nodes": [],
            "body": {
              "id": 15430,
              "nodeType": "Block",
              "src": "772:105:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 15420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15418,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15385,
                      "src": "782:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15419,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15400,
                      "src": "791:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "782:16:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 15421,
                  "nodeType": "ExpressionStatement",
                  "src": "782:16:59"
                },
                {
                  "expression": {
                    "id": 15424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15422,
                      "name": "balancerVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15388,
                      "src": "808:13:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$17607",
                        "typeString": "contract IVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15423,
                      "name": "_balancerVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15403,
                      "src": "824:14:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$17607",
                        "typeString": "contract IVault"
                      }
                    },
                    "src": "808:30:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$17607",
                      "typeString": "contract IVault"
                    }
                  },
                  "id": 15425,
                  "nodeType": "ExpressionStatement",
                  "src": "808:30:59"
                },
                {
                  "expression": {
                    "id": 15428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15426,
                      "name": "vaultType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15393,
                      "src": "848:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Type_$58228",
                        "typeString": "enum Vaults.Type"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15427,
                      "name": "_vaultType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15398,
                      "src": "860:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Type_$58228",
                        "typeString": "enum Vaults.Type"
                      }
                    },
                    "src": "848:22:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Type_$58228",
                      "typeString": "enum Vaults.Type"
                    }
                  },
                  "id": 15429,
                  "nodeType": "ExpressionStatement",
                  "src": "848:22:59"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15410,
                    "name": "_governor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15395,
                    "src": "721:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "id": 15412,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15400,
                        "src": "748:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 15411,
                      "name": "_getPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15477,
                      "src": "732:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) pure returns (address)"
                      }
                    },
                    "id": 15413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:24:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 15414,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15405,
                    "src": "758:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 15415,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15407,
                    "src": "764:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 15416,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15409,
                  "name": "BaseVault",
                  "nameLocations": [
                    "711:9:59"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15869,
                  "src": "711:9:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "711:60:59"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 15408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15395,
                  "mutability": "mutable",
                  "name": "_governor",
                  "nameLocation": "549:9:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 15431,
                  "src": "541:17:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15398,
                  "mutability": "mutable",
                  "name": "_vaultType",
                  "nameLocation": "580:10:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 15431,
                  "src": "568:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Type_$58228",
                    "typeString": "enum Vaults.Type"
                  },
                  "typeName": {
                    "id": 15397,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15396,
                      "name": "Vaults.Type",
                      "nameLocations": [
                        "568:6:59",
                        "575:4:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58228,
                      "src": "568:11:59"
                    },
                    "referencedDeclaration": 58228,
                    "src": "568:11:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Type_$58228",
                      "typeString": "enum Vaults.Type"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15400,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "608:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 15431,
                  "src": "600:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15399,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15403,
                  "mutability": "mutable",
                  "name": "_balancerVault",
                  "nameLocation": "632:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 15431,
                  "src": "625:21:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVault_$17607",
                    "typeString": "contract IVault"
                  },
                  "typeName": {
                    "id": 15402,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15401,
                      "name": "IVault",
                      "nameLocations": [
                        "625:6:59"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17607,
                      "src": "625:6:59"
                    },
                    "referencedDeclaration": 17607,
                    "src": "625:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$17607",
                      "typeString": "contract IVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15405,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "670:4:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 15431,
                  "src": "656:18:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15407,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "698:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 15431,
                  "src": "684:20:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15406,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "531:179:59"
            },
            "returnParameters": {
              "id": 15417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:0:59"
            },
            "scope": 15478,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15453,
            "nodeType": "FunctionDefinition",
            "src": "914:176:59",
            "nodes": [],
            "body": {
              "id": 15452,
              "nodeType": "Block",
              "src": "984:106:59",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    15444,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15444,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "1011:6:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 15452,
                      "src": "995:22:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$47531_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 15442,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 15441,
                            "name": "IERC20",
                            "nameLocations": [
                              "995:6:59"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47531,
                            "src": "995:6:59"
                          },
                          "referencedDeclaration": 47531,
                          "src": "995:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$47531",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 15443,
                        "nodeType": "ArrayTypeName",
                        "src": "995:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$47531_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 15449,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15447,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15385,
                        "src": "1053:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 15445,
                        "name": "balancerVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15388,
                        "src": "1025:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$17607",
                          "typeString": "contract IVault"
                        }
                      },
                      "id": 15446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1039:13:59",
                      "memberName": "getPoolTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17340,
                      "src": "1025:27:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$47531_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                        "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"
                      }
                    },
                    "id": 15448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:35:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$47531_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "994:66:59"
                },
                {
                  "expression": {
                    "id": 15450,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15444,
                    "src": "1077:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$47531_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "functionReturnParameters": 15439,
                  "id": 15451,
                  "nodeType": "Return",
                  "src": "1070:13:59"
                }
              ]
            },
            "baseFunctions": [
              16327
            ],
            "documentation": {
              "id": 15432,
              "nodeType": "StructuredDocumentation",
              "src": "883:26:59",
              "text": "@inheritdoc IGyroVault"
            },
            "functionSelector": "aa6ca808",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nameLocation": "923:9:59",
            "overrides": {
              "id": 15434,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "949:8:59"
            },
            "parameters": {
              "id": 15433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "932:2:59"
            },
            "returnParameters": {
              "id": 15439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15453,
                  "src": "967:15:59",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$47531_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15436,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 15435,
                        "name": "IERC20",
                        "nameLocations": [
                          "967:6:59"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 47531,
                        "src": "967:6:59"
                      },
                      "referencedDeclaration": 47531,
                      "src": "967:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$47531",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 15437,
                    "nodeType": "ArrayTypeName",
                    "src": "967:8:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$47531_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "966:17:59"
            },
            "scope": 15478,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 15477,
            "nodeType": "FunctionDefinition",
            "src": "1096:325:59",
            "nodes": [],
            "body": {
              "id": 15476,
              "nodeType": "Block",
              "src": "1170:251:59",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 15466,
                                  "name": "_poolId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15455,
                                  "src": "1392:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 15465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1384:7:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 15464,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1384:7:59",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 15467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1384:16:59",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">>",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_96_by_1",
                                    "typeString": "int_const 96"
                                  },
                                  "id": 15470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3132",
                                    "id": 15468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1405:2:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    },
                                    "value": "12"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "38",
                                    "id": 15469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1410:1:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_8_by_1",
                                      "typeString": "int_const 8"
                                    },
                                    "value": "8"
                                  },
                                  "src": "1405:6:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_96_by_1",
                                    "typeString": "int_const 96"
                                  }
                                }
                              ],
                              "id": 15471,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1404:8:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_96_by_1",
                                "typeString": "int_const 96"
                              }
                            },
                            "src": "1384:28:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 15463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1376:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 15462,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1376:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1376:37:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 15461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1368:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 15460,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1368:7:59",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 15474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1368:46:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 15459,
                  "id": 15475,
                  "nodeType": "Return",
                  "src": "1361:53:59"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getPoolAddress",
            "nameLocation": "1105:15:59",
            "parameters": {
              "id": 15456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15455,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "1129:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 15477,
                  "src": "1121:15:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15454,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1121:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1120:17:59"
            },
            "returnParameters": {
              "id": 15459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15477,
                  "src": "1161:7:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:9:59"
            },
            "scope": 15478,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15381,
              "name": "BaseVault",
              "nameLocations": [
                "304:9:59"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15869,
              "src": "304:9:59"
            },
            "id": 15382,
            "nodeType": "InheritanceSpecifier",
            "src": "304:9:59"
          }
        ],
        "canonicalName": "BalancerPoolVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          15478,
          15869,
          5458,
          5552,
          16176,
          47453,
          16414,
          47556,
          47531,
          49331
        ],
        "name": "BalancerPoolVault",
        "nameLocation": "283:17:59",
        "scope": 15479,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 59
}