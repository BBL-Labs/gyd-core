{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        },
        {
          "internalType": "contract IGyroConfig",
          "name": "_gyroConfig",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "check",
          "type": "address"
        }
      ],
      "name": "CheckAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "check",
          "type": "address"
        }
      ],
      "name": "CheckRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernorChangeRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernorChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "check",
          "type": "address"
        }
      ],
      "name": "addCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "checkAndPersistMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "checkAndPersistRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChecks",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gyroConfig",
      "outputs": [
        {
          "internalType": "contract IGyroConfig",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "isMintSafe",
      "outputs": [
        {
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "isRedeemSafe",
      "outputs": [
        {
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "check",
          "type": "address"
        }
      ],
      "name": "removeCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50604051620014f5380380620014f5833981016040819052620000349162000107565b600080546001600160a01b0319166001600160a01b038416908117825560408051928352602083019190915283917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c84910160405180910390a150604080518082019091526002815261333160f01b60208201526001600160a01b038216620000da5760405162461bcd60e51b8152600401620000d1919062000146565b60405180910390fd5b506001600160a01b03166080525062000196565b6001600160a01b03811681146200010457600080fd5b50565b600080604083850312156200011b57600080fd5b82516200012881620000ee565b60208401519092506200013b81620000ee565b809150509250929050565b600060208083528351808285015260005b81811015620001755785810183015185820160400152820162000157565b506000604082860101526040601f19601f8301168501019250505092915050565b608051611335620001c06000396000818161010b015281816104e101526105fa01526113356000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806368b23e521161007157806368b23e5214610162578063a076382014610175578063d625436c14610188578063e2cc86791461019b578063e3056a34146101ae578063e4c0aaf4146101c157600080fd5b80630c340a24146100b9578063238efcbc146100e95780633d4d10e2146100f357806344bbdb55146101065780634d9a12c41461012d5780636382b29614610142575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101d4565b005b6100f1610101366004610b9e565b61028d565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61013561034f565b6040516100e09190610bc2565b610155610150366004610e1a565b610360565b6040516100e0919061102a565b6100f1610170366004610b9e565b61041a565b6100f1610183366004610e1a565b6104dc565b6100f1610196366004610e1a565b6105f5565b6101556101a9366004610e1a565b610709565b6001546100cc906001600160a01b031681565b6100f16101cf366004610b9e565b6107bc565b600154604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102225760405162461bcd60e51b8152600401610219919061102a565b60405180910390fd5b5060008054600180546001600160a01b03198084166001600160a01b03808416919091179095551690556040805192909116808352336020840152917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491015b60405180910390a150565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102d25760405162461bcd60e51b8152600401610219919061102a565b506102de600282610891565b60405180604001604052806002815260200161333160f01b815250906103175760405162461bcd60e51b8152600401610219919061102a565b506040516001600160a01b038216907f75ec3ef6c1afb45dd0a2bbb3a4f14cac03241c33fc24c352e25ea690e22a923290600090a250565b606061035b60026108af565b905090565b6060600061036e600261095e565b905060005b8181101561041357610386600282610968565b6001600160a01b0316636382b296856040518263ffffffff1660e01b81526004016103b191906110b9565b600060405180830381865afa1580156103ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103f691908101906111e0565b92506000835111610413578061040b8161128a565b915050610373565b5050919050565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b0316331461045f5760405162461bcd60e51b8152600401610219919061102a565b5061046b600282610974565b60405180604001604052806002815260200161333160f01b815250906104a45760405162461bcd60e51b8152600401610219919061102a565b506040516001600160a01b038216907fd37223475c04a60e97eb30bc3a38b4aef6a37def09d1ed6b88c881847362426d90600090a250565b61050e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610989565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b8152509061055b5760405162461bcd60e51b8152600401610219919061102a565b506000610568600261095e565b905060005b818110156105f057610580600282610968565b6001600160a01b031663a0763820846040518263ffffffff1660e01b81526004016105ab91906110b9565b600060405180830381600087803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b5050505080806105e89061128a565b91505061056d565b505050565b6106277f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610989565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b815250906106745760405162461bcd60e51b8152600401610219919061102a565b506000610681600261095e565b905060005b818110156105f057610699600282610968565b6001600160a01b031663d625436c846040518263ffffffff1660e01b81526004016106c491906110b9565b600060405180830381600087803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b5050505080806107019061128a565b915050610686565b60606000610717600261095e565b905060005b818110156104135761072f600282610968565b6001600160a01b031663e2cc8679856040518263ffffffff1660e01b815260040161075a91906110b9565b600060405180830381865afa158015610777573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261079f91908101906111e0565b9250600083511161041357806107b48161128a565b91505061071c565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146108015760405162461bcd60e51b8152600401610219919061102a565b50604080518082019091526002815261333160f01b60208201526001600160a01b0382166108425760405162461bcd60e51b8152600401610219919061102a565b50600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f67235ba2e63c748a35b95c4f92a3bbc2a1389938170a5ce6c9add5d0b03a314a90602001610282565b60006108a6836001600160a01b038416610a0a565b90505b92915050565b606060006108bc8361095e565b905060008167ffffffffffffffff8111156108d9576108d9610c0f565b604051908082528060200260200182016040528015610902578160200160208202803683370190505b50905060005b828110156109565761091a8582610968565b82828151811061092c5761092c6112a3565b6001600160a01b03909216602092830291909101909101528061094e8161128a565b915050610908565b509392505050565b60006108a9825490565b60006108a68383610a59565b60006108a6836001600160a01b038416610a83565b6040516321f8a72160e01b8152724d4f54484552424f4152445f4144445245535360681b60048201526000906001600160a01b038316906321f8a72190602401602060405180830381865afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a991906112b9565b6000818152600183016020526040812054610a51575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108a9565b5060006108a9565b6000826000018281548110610a7057610a706112a3565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610b6c576000610aa76001836112d6565b8554909150600090610abb906001906112d6565b9050818114610b20576000866000018281548110610adb57610adb6112a3565b9060005260206000200154905080876000018481548110610afe57610afe6112a3565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b3157610b316112e9565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108a9565b60009150506108a9565b6001600160a01b0381168114610b8b57600080fd5b50565b8035610b9981610b76565b919050565b600060208284031215610bb057600080fd5b8135610bbb81610b76565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610c035783516001600160a01b031683529284019291840191600101610bde565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610c4857610c48610c0f565b60405290565b6040805190810167ffffffffffffffff81118282101715610c4857610c48610c0f565b604051610120810167ffffffffffffffff81118282101715610c4857610c48610c0f565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cbe57610cbe610c0f565b604052919050565b600067ffffffffffffffff821115610ce057610ce0610c0f565b5060051b60200190565b803560ff81168114610b9957600080fd5b600060808284031215610d0d57600080fd5b6040516080810181811067ffffffffffffffff82111715610d3057610d30610c0f565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b80358015158114610b9957600080fd5b600082601f830112610d8257600080fd5b81356020610d97610d9283610cc6565b610c95565b82815260609283028501820192828201919087851115610db657600080fd5b8387015b85811015610e0d5781818a031215610dd25760008081fd5b610dda610c25565b8135610de581610b76565b8152610df2828701610d61565b81870152604082810135908201528452928401928101610dba565b5090979650505050505050565b600060208284031215610e2c57600080fd5b67ffffffffffffffff8083351115610e4357600080fd5b60408335840185031215610e5657600080fd5b610e5e610c4e565b8184358501351115610e6f57600080fd5b83358401803501601f81018613610e8557600080fd5b610e92610d928235610cc6565b81358082526020808301929160051b840101881015610eb057600080fd5b602083015b6020843560051b850101811015610fe4578581351115610ed457600080fd5b80358401601f196040828c0382011215610eed57600080fd5b610ef5610c4e565b8860208401351115610f0657600080fd5b6020830135830161018083828f03011215610f2057600080fd5b610f28610c71565b9250610f3660208201610b8e565b8352610f4460408201610cea565b6020840152610f5560608201610b8e565b604084015260808101356060840152610f718d60a08301610cfb565b608084015261012081013560a084015261014081013560c084015261016081013560e0840152896101808201351115610fa957600080fd5b610fbd8d6020610180840135840101610d71565b61010084015250908152604091909101356020808301919091529084529283019201610eb5565b50835250610ff9905084358501602001610d61565b6020820152949350505050565b60005b83811015611021578181015183820152602001611009565b50506000910152565b6020815260008251806020840152611049816040850160208701611006565b601f01601f19169190910160400192915050565b600081518084526020808501945080840160005b838110156110ae57815180516001600160a01b03168852838101511515848901526040908101519088015260609096019590820190600101611071565b509495945050505050565b600060208083526060808401855160408085880152828251808552608094508489019150848160051b8a0101878501945060005b828110156111c557607f198b83030184528551805186845280516001600160a01b03908116888601528b82015160ff168b8601528782015116898501528981015160a08086019190915289820151805160c080880191909152602082015160e08801526040820151610100880152606082015161012088015290918301516101408701528201516101608601525060e081015161018080860191909152610100909101516101a08501919091526111a86101c085018261105d565b918b0151938b0193909352958901959389019391506001016110ed565b50968a0151801515848b0152969a9950505050505050505050565b6000602082840312156111f257600080fd5b815167ffffffffffffffff8082111561120a57600080fd5b818401915084601f83011261121e57600080fd5b81518181111561123057611230610c0f565b611243601f8201601f1916602001610c95565b915080825285602082850101111561125a57600080fd5b61126b816020840160208601611006565b50949350505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161129c5761129c611274565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156112cb57600080fd5b8151610bbb81610b76565b818103818111156108a9576108a9611274565b634e487b7160e01b600052603160045260246000fdfea26469706673582212204035a15cd27e27537b8bb07e7eb84610506a46d157c36b59f01f7fccc27bf54e64736f6c63430008110033",
    "sourceMap": "521:2797:32:-:0;;;1067:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;316:8:10;:20;;-1:-1:-1;;;;;;316:20:10;-1:-1:-1;;;;;316:20:10;;;;;;;351:38;;;773:34:167;;;838:2;823:18;;816:43;;;;316:20:10;;351:38;;708:18:167;351:38:10;;;;;;;-1:-1:-1;1199:23:32::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1199:23:32::1;::::0;::::1;::::0;-1:-1:-1;;;;;1163:34:32;::::1;1155:68;;;;-1:-1:-1::0;;;1155:68:32::1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;;1233:24:32::1;;::::0;-1:-1:-1;521:2797:32;;14:131:167;-1:-1:-1;;;;;89:31:167;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:406::-;250:6;258;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;359:9;353:16;378:31;403:5;378:31;:::i;:::-;478:2;463:18;;457:25;428:5;;-1:-1:-1;491:33:167;457:25;491:33;:::i;:::-;543:7;533:17;;;150:406;;;;;:::o;870:548::-;982:4;1011:2;1040;1029:9;1022:21;1072:6;1066:13;1115:6;1110:2;1099:9;1095:18;1088:34;1140:1;1150:140;1164:6;1161:1;1158:13;1150:140;;;1259:14;;;1255:23;;1249:30;1225:17;;;1244:2;1221:26;1214:66;1179:10;;1150:140;;;1154:3;1339:1;1334:2;1325:6;1314:9;1310:22;1306:31;1299:42;1409:2;1402;1398:7;1393:2;1385:6;1381:15;1377:29;1366:9;1362:45;1358:54;1350:62;;;;870:548;;;;:::o;:::-;521:2797:32;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806368b23e521161007157806368b23e5214610162578063a076382014610175578063d625436c14610188578063e2cc86791461019b578063e3056a34146101ae578063e4c0aaf4146101c157600080fd5b80630c340a24146100b9578063238efcbc146100e95780633d4d10e2146100f357806344bbdb55146101065780634d9a12c41461012d5780636382b29614610142575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101d4565b005b6100f1610101366004610b9e565b61028d565b6100cc7f000000000000000000000000000000000000000000000000000000000000000081565b61013561034f565b6040516100e09190610bc2565b610155610150366004610e1a565b610360565b6040516100e0919061102a565b6100f1610170366004610b9e565b61041a565b6100f1610183366004610e1a565b6104dc565b6100f1610196366004610e1a565b6105f5565b6101556101a9366004610e1a565b610709565b6001546100cc906001600160a01b031681565b6100f16101cf366004610b9e565b6107bc565b600154604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102225760405162461bcd60e51b8152600401610219919061102a565b60405180910390fd5b5060008054600180546001600160a01b03198084166001600160a01b03808416919091179095551690556040805192909116808352336020840152917fde4b3f61490b74c0ed6237523974fe299126bbbf8a8a7482fd220104c59b0c8491015b60405180910390a150565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146102d25760405162461bcd60e51b8152600401610219919061102a565b506102de600282610891565b60405180604001604052806002815260200161333160f01b815250906103175760405162461bcd60e51b8152600401610219919061102a565b506040516001600160a01b038216907f75ec3ef6c1afb45dd0a2bbb3a4f14cac03241c33fc24c352e25ea690e22a923290600090a250565b606061035b60026108af565b905090565b6060600061036e600261095e565b905060005b8181101561041357610386600282610968565b6001600160a01b0316636382b296856040518263ffffffff1660e01b81526004016103b191906110b9565b600060405180830381865afa1580156103ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103f691908101906111e0565b92506000835111610413578061040b8161128a565b915050610373565b5050919050565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b0316331461045f5760405162461bcd60e51b8152600401610219919061102a565b5061046b600282610974565b60405180604001604052806002815260200161333160f01b815250906104a45760405162461bcd60e51b8152600401610219919061102a565b506040516001600160a01b038216907fd37223475c04a60e97eb30bc3a38b4aef6a37def09d1ed6b88c881847362426d90600090a250565b61050e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610989565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b8152509061055b5760405162461bcd60e51b8152600401610219919061102a565b506000610568600261095e565b905060005b818110156105f057610580600282610968565b6001600160a01b031663a0763820846040518263ffffffff1660e01b81526004016105ab91906110b9565b600060405180830381600087803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b5050505080806105e89061128a565b91505061056d565b505050565b6106277f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610989565b6001600160a01b0316336001600160a01b03161460405180604001604052806002815260200161033360f41b815250906106745760405162461bcd60e51b8152600401610219919061102a565b506000610681600261095e565b905060005b818110156105f057610699600282610968565b6001600160a01b031663d625436c846040518263ffffffff1660e01b81526004016106c491906110b9565b600060405180830381600087803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b5050505080806107019061128a565b915050610686565b60606000610717600261095e565b905060005b818110156104135761072f600282610968565b6001600160a01b031663e2cc8679856040518263ffffffff1660e01b815260040161075a91906110b9565b600060405180830381865afa158015610777573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261079f91908101906111e0565b9250600083511161041357806107b48161128a565b91505061071c565b600054604080518082019091526002815261033360f41b6020820152906001600160a01b031633146108015760405162461bcd60e51b8152600401610219919061102a565b50604080518082019091526002815261333160f01b60208201526001600160a01b0382166108425760405162461bcd60e51b8152600401610219919061102a565b50600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f67235ba2e63c748a35b95c4f92a3bbc2a1389938170a5ce6c9add5d0b03a314a90602001610282565b60006108a6836001600160a01b038416610a0a565b90505b92915050565b606060006108bc8361095e565b905060008167ffffffffffffffff8111156108d9576108d9610c0f565b604051908082528060200260200182016040528015610902578160200160208202803683370190505b50905060005b828110156109565761091a8582610968565b82828151811061092c5761092c6112a3565b6001600160a01b03909216602092830291909101909101528061094e8161128a565b915050610908565b509392505050565b60006108a9825490565b60006108a68383610a59565b60006108a6836001600160a01b038416610a83565b6040516321f8a72160e01b8152724d4f54484552424f4152445f4144445245535360681b60048201526000906001600160a01b038316906321f8a72190602401602060405180830381865afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a991906112b9565b6000818152600183016020526040812054610a51575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108a9565b5060006108a9565b6000826000018281548110610a7057610a706112a3565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610b6c576000610aa76001836112d6565b8554909150600090610abb906001906112d6565b9050818114610b20576000866000018281548110610adb57610adb6112a3565b9060005260206000200154905080876000018481548110610afe57610afe6112a3565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b3157610b316112e9565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108a9565b60009150506108a9565b6001600160a01b0381168114610b8b57600080fd5b50565b8035610b9981610b76565b919050565b600060208284031215610bb057600080fd5b8135610bbb81610b76565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610c035783516001600160a01b031683529284019291840191600101610bde565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610c4857610c48610c0f565b60405290565b6040805190810167ffffffffffffffff81118282101715610c4857610c48610c0f565b604051610120810167ffffffffffffffff81118282101715610c4857610c48610c0f565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cbe57610cbe610c0f565b604052919050565b600067ffffffffffffffff821115610ce057610ce0610c0f565b5060051b60200190565b803560ff81168114610b9957600080fd5b600060808284031215610d0d57600080fd5b6040516080810181811067ffffffffffffffff82111715610d3057610d30610c0f565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b80358015158114610b9957600080fd5b600082601f830112610d8257600080fd5b81356020610d97610d9283610cc6565b610c95565b82815260609283028501820192828201919087851115610db657600080fd5b8387015b85811015610e0d5781818a031215610dd25760008081fd5b610dda610c25565b8135610de581610b76565b8152610df2828701610d61565b81870152604082810135908201528452928401928101610dba565b5090979650505050505050565b600060208284031215610e2c57600080fd5b67ffffffffffffffff8083351115610e4357600080fd5b60408335840185031215610e5657600080fd5b610e5e610c4e565b8184358501351115610e6f57600080fd5b83358401803501601f81018613610e8557600080fd5b610e92610d928235610cc6565b81358082526020808301929160051b840101881015610eb057600080fd5b602083015b6020843560051b850101811015610fe4578581351115610ed457600080fd5b80358401601f196040828c0382011215610eed57600080fd5b610ef5610c4e565b8860208401351115610f0657600080fd5b6020830135830161018083828f03011215610f2057600080fd5b610f28610c71565b9250610f3660208201610b8e565b8352610f4460408201610cea565b6020840152610f5560608201610b8e565b604084015260808101356060840152610f718d60a08301610cfb565b608084015261012081013560a084015261014081013560c084015261016081013560e0840152896101808201351115610fa957600080fd5b610fbd8d6020610180840135840101610d71565b61010084015250908152604091909101356020808301919091529084529283019201610eb5565b50835250610ff9905084358501602001610d61565b6020820152949350505050565b60005b83811015611021578181015183820152602001611009565b50506000910152565b6020815260008251806020840152611049816040850160208701611006565b601f01601f19169190910160400192915050565b600081518084526020808501945080840160005b838110156110ae57815180516001600160a01b03168852838101511515848901526040908101519088015260609096019590820190600101611071565b509495945050505050565b600060208083526060808401855160408085880152828251808552608094508489019150848160051b8a0101878501945060005b828110156111c557607f198b83030184528551805186845280516001600160a01b03908116888601528b82015160ff168b8601528782015116898501528981015160a08086019190915289820151805160c080880191909152602082015160e08801526040820151610100880152606082015161012088015290918301516101408701528201516101608601525060e081015161018080860191909152610100909101516101a08501919091526111a86101c085018261105d565b918b0151938b0193909352958901959389019391506001016110ed565b50968a0151801515848b0152969a9950505050505050505050565b6000602082840312156111f257600080fd5b815167ffffffffffffffff8082111561120a57600080fd5b818401915084601f83011261121e57600080fd5b81518181111561123057611230610c0f565b611243601f8201601f1916602001610c95565b915080825285602082850101111561125a57600080fd5b61126b816020840160208601611006565b50949350505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161129c5761129c611274565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156112cb57600080fd5b8151610bbb81610b76565b818103818111156108a9576108a9611274565b634e487b7160e01b600052603160045260246000fdfea26469706673582212204035a15cd27e27537b8bb07e7eb84610506a46d157c36b59f01f7fccc27bf54e64736f6c63430008110033",
    "sourceMap": "521:2797:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:32:11;;;;;-1:-1:-1;;;;;325:32:11;;;;;;-1:-1:-1;;;;;287:32:167;;;269:51;;257:2;242:18;325:32:11;;;;;;;;846:301;;;:::i;:::-;;1464:158:32;;;;;;:::i;:::-;;:::i;878:39::-;;;;;1312:101;;;:::i;:::-;;;;;;;:::i;2307:391::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1676:166::-;;;;;;:::i;:::-;;:::i;3044:272::-;;;;;;:::i;:::-;;:::i;2737:268::-;;;;;;:::i;:::-;;:::i;1881:387::-;;;;;;:::i;:::-;;:::i;363:39:11:-;;;;;-1:-1:-1;;;;;363:39:11;;;555:253;;;;;;:::i;:::-;;:::i;846:301::-;924:15;;941:21;;;;;;;;;;;;-1:-1:-1;;;941:21:11;;;;;-1:-1:-1;;;;;924:15:11;910:10;:29;902:61;;;;-1:-1:-1;;;902:61:11;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;973:23:11;999:8;;;1028:15;;-1:-1:-1;;;;;;1017:26:11;;;-1:-1:-1;;;;;1028:15:11;;;1017:26;;;;;;;1053:28;;;1096:44;;;999:8;;;;8834:34:167;;;1129:10:11;8899:2:167;8884:18;;8877:43;999:8:11;1096:44;;8769:18:167;1096:44:11;;;;;;;;892:255;846:301::o;1464:158:32:-;467:8:11;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;1539:18:32::1;:7;1551:5:::0;1539:11:::1;:18::i;:::-;1559:23;;;;;;;;;;;;;-1:-1:-1::0;;;1559:23:32::1;;::::0;1531:52:::1;;;;;-1:-1:-1::0;;;1531:52:32::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1598:17:32::1;::::0;-1:-1:-1;;;;;1598:17:32;::::1;::::0;::::1;::::0;;;::::1;1464:158:::0;:::o;1312:101::-;1354:16;1389:17;:7;:15;:17::i;:::-;1382:24;;1312:101;:::o;2307:391::-;2423:17;2456:14;2473:16;:7;:14;:16::i;:::-;2456:33;;2504:9;2499:193;2523:6;2519:1;:10;2499:193;;;2569:13;:7;2580:1;2569:10;:13::i;:::-;-1:-1:-1;;;;;2556:40:32;;2597:5;2556:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2556:47:32;;;;;;;;;;;;:::i;:::-;2550:53;;2641:1;2627:3;2621:17;:21;2662:5;2617:65;2531:3;;;;:::i;:::-;;;;2499:193;;;;2446:252;2307:391;;;:::o;1676:166::-;467:8:11;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;1754:21:32::1;:7;1769:5:::0;1754:14:::1;:21::i;:::-;1777:23;;;;;;;;;;;;;-1:-1:-1::0;;;1777:23:32::1;;::::0;1746:55:::1;;;;;-1:-1:-1::0;;;1746:55:32::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1816:19:32::1;::::0;-1:-1:-1;;;;;1816:19:32;::::1;::::0;::::1;::::0;;;::::1;1676:166:::0;:::o;3044:272::-;991:27;:10;-1:-1:-1;;;;;991:25:32;;:27::i;:::-;-1:-1:-1;;;;;969:50:32;:10;-1:-1:-1;;;;;969:50:32;;1021:21;;;;;;;;;;;;;-1:-1:-1;;;1021:21:32;;;961:82;;;;;-1:-1:-1;;;961:82:32;;;;;;;;:::i;:::-;;3149:14:::1;3166:16;:7;:14;:16::i;:::-;3149:33;;3197:9;3192:118;3216:6;3212:1;:10;3192:118;;;3256:13;:7;3267:1:::0;3256:10:::1;:13::i;:::-;-1:-1:-1::0;;;;;3243:49:32::1;;3293:5;3243:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3224:3;;;;;:::i;:::-;;;;3192:118;;;;3139:177;3044:272:::0;:::o;2737:268::-;991:27;:10;-1:-1:-1;;;;;991:25:32;;:27::i;:::-;-1:-1:-1;;;;;969:50:32;:10;-1:-1:-1;;;;;969:50:32;;1021:21;;;;;;;;;;;;;-1:-1:-1;;;1021:21:32;;;961:82;;;;;-1:-1:-1;;;961:82:32;;;;;;;;:::i;:::-;;2840:14:::1;2857:16;:7;:14;:16::i;:::-;2840:33;;2888:9;2883:116;2907:6;2903:1;:10;2883:116;;;2947:13;:7;2958:1:::0;2947:10:::1;:13::i;:::-;-1:-1:-1::0;;;;;2934:47:32::1;;2982:5;2934:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2915:3;;;;;:::i;:::-;;;;2883:116;;1881:387:::0;1995:17;2028:14;2045:16;:7;:14;:16::i;:::-;2028:33;;2076:9;2071:191;2095:6;2091:1;:10;2071:191;;;2141:13;:7;2152:1;2141:10;:13::i;:::-;-1:-1:-1;;;;;2128:38:32;;2167:5;2128:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2128:45:32;;;;;;;;;;;;:::i;:::-;2122:51;;2211:1;2197:3;2191:17;:21;2232:5;2187:65;2103:3;;;;:::i;:::-;;;;2071:191;;555:253:11;467:8;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;687:23:11::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;687:23:11::1;::::0;::::1;::::0;-1:-1:-1;;;;;651:34:11;::::1;643:68;;;;-1:-1:-1::0;;;643:68:11::1;;;;;;;;:::i;:::-;-1:-1:-1::0;721:15:11::1;:29:::0;;-1:-1:-1;;;;;;721:29:11::1;-1:-1:-1::0;;;;;721:29:11;::::1;::::0;;::::1;::::0;;;765:36:::1;::::0;269:51:167;;;765:36:11::1;::::0;257:2:167;242:18;765:36:11::1;123:203:167::0;8297:150:149;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:149;;8390:4;:50::i;:::-;8383:57;;8297:150;;;;;:::o;739:351:155:-;847:16;879:11;893:18;:9;:16;:18::i;:::-;879:32;;921:23;961:3;947:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:18:155;;921:44;;980:9;975:86;999:3;995:1;:7;975:86;;;1035:15;:9;1048:1;1035:12;:15::i;:::-;1023:6;1030:1;1023:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1023:27:155;;;:9;;;;;;;;;;;:27;1004:3;;;;:::i;:::-;;;;975:86;;;-1:-1:-1;1077:6:155;739:351;-1:-1:-1;;;739:351:155:o;9098:115:149:-;9161:7;9187:19;9195:3;4537:18;;4455:107;9555:156;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;8615:156::-;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:149;;8711:7;:53::i;2648:176:151:-;2763:53;;-1:-1:-1;;;2763:53:151;;-1:-1:-1;;;2763:53:151;;;13605:25:167;2719:12:151;;-1:-1:-1;;;;;2763:21:151;;;;;13578:18:167;;2763:53:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2206:404:149:-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:149;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:149;2581:12;;4904:118;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;2778:1388::-;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:149;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;331:131:167;-1:-1:-1;;;;;406:31:167;;396:42;;386:70;;452:1;449;442:12;386:70;331:131;:::o;467:134::-;535:20;;564:31;535:20;564:31;:::i;:::-;467:134;;;:::o;606:247::-;665:6;718:2;706:9;697:7;693:23;689:32;686:52;;;734:1;731;724:12;686:52;773:9;760:23;792:31;817:5;792:31;:::i;:::-;842:5;606:247;-1:-1:-1;;;606:247:167:o;1087:658::-;1258:2;1310:21;;;1380:13;;1283:18;;;1402:22;;;1229:4;;1258:2;1481:15;;;;1455:2;1440:18;;;1229:4;1524:195;1538:6;1535:1;1532:13;1524:195;;;1603:13;;-1:-1:-1;;;;;1599:39:167;1587:52;;1694:15;;;;1659:12;;;;1635:1;1553:9;1524:195;;;-1:-1:-1;1736:3:167;;1087:658;-1:-1:-1;;;;;;1087:658:167:o;1750:127::-;1811:10;1806:3;1802:20;1799:1;1792:31;1842:4;1839:1;1832:15;1866:4;1863:1;1856:15;1882:253;1954:2;1948:9;1996:4;1984:17;;2031:18;2016:34;;2052:22;;;2013:62;2010:88;;;2078:18;;:::i;:::-;2114:2;2107:22;1882:253;:::o;2140:257::-;2212:4;2206:11;;;2244:17;;2291:18;2276:34;;2312:22;;;2273:62;2270:88;;;2338:18;;:::i;2402:255::-;2474:2;2468:9;2516:6;2504:19;;2553:18;2538:34;;2574:22;;;2535:62;2532:88;;;2600:18;;:::i;2662:275::-;2733:2;2727:9;2798:2;2779:13;;-1:-1:-1;;2775:27:167;2763:40;;2833:18;2818:34;;2854:22;;;2815:62;2812:88;;;2880:18;;:::i;:::-;2916:2;2909:22;2662:275;;-1:-1:-1;2662:275:167:o;2942:198::-;3017:4;3050:18;3042:6;3039:30;3036:56;;;3072:18;;:::i;:::-;-1:-1:-1;3117:1:167;3113:14;3129:4;3109:25;;2942:198::o;3145:156::-;3211:20;;3271:4;3260:16;;3250:27;;3240:55;;3291:1;3288;3281:12;3306:619;3375:5;3423:4;3411:9;3406:3;3402:19;3398:30;3395:50;;;3441:1;3438;3431:12;3395:50;3474:2;3468:9;3516:4;3508:6;3504:17;3587:6;3575:10;3572:22;3551:18;3539:10;3536:34;3533:62;3530:88;;;3598:18;;:::i;:::-;3638:10;3634:2;3627:22;;3667:6;3658:15;;3710:9;3697:23;3689:6;3682:39;3782:2;3771:9;3767:18;3754:32;3749:2;3741:6;3737:15;3730:57;3848:2;3837:9;3833:18;3820:32;3815:2;3807:6;3803:15;3796:57;3914:2;3903:9;3899:18;3886:32;3881:2;3873:6;3869:15;3862:57;;3306:619;;;;:::o;3930:160::-;3995:20;;4051:13;;4044:21;4034:32;;4024:60;;4080:1;4077;4070:12;4095:1153;4160:5;4213:3;4206:4;4198:6;4194:17;4190:27;4180:55;;4231:1;4228;4221:12;4180:55;4267:6;4254:20;4293:4;4317:75;4333:58;4388:2;4333:58;:::i;:::-;4317:75;:::i;:::-;4426:15;;;4488:4;4531:11;;;4519:24;;4515:33;;;4457:12;;;;4414:3;4560:15;;;4557:35;;;4588:1;4585;4578:12;4557:35;4624:2;4616:6;4612:15;4636:583;4652:6;4647:3;4644:15;4636:583;;;4728:2;4722:3;4717;4713:13;4709:22;4706:112;;;4772:1;4801:2;4797;4790:14;4706:112;4844:22;;:::i;:::-;4907:3;4894:17;4924:33;4949:7;4924:33;:::i;:::-;4970:22;;5028:29;5044:12;;;5028:29;:::i;:::-;5012:14;;;5005:53;5081:2;5132:12;;;5119:26;5103:14;;;5096:50;5159:18;;5197:12;;;;4669;;4636:583;;;-1:-1:-1;5237:5:167;;4095:1153;-1:-1:-1;;;;;;;4095:1153:167:o;5253:2708::-;5336:6;5389:2;5377:9;5368:7;5364:23;5360:32;5357:52;;;5405:1;5402;5395:12;5357:52;5428:18;5486:2;5474:9;5461:23;5458:31;5455:51;;;5502:1;5499;5492:12;5455:51;5577:4;5563:9;5550:23;5539:9;5535:39;5526:7;5522:53;5518:64;5515:84;;;5595:1;5592;5585:12;5515:84;5621:22;;:::i;:::-;5713:2;5699:9;5686:23;5675:9;5671:39;5658:53;5655:61;5652:81;;;5729:1;5726;5719:12;5652:81;5825:23;;5810:39;;5797:53;;5752:99;5882:4;5874:13;;5870:27;-1:-1:-1;5860:55:167;;5911:1;5908;5901:12;5860:55;5935:89;5951:72;6019:2;6006:16;5951:72;:::i;5935:89::-;6070:16;;6058:29;;;6112:2;6103:12;;;;6046:3;6146:1;6142:24;6134:33;;6130:42;6127:55;-1:-1:-1;6124:75:167;;;6195:1;6192;6185:12;6124:75;6227:2;6223;6219:11;6239:1565;6302:2;6295;6282:16;6279:1;6275:24;6271:2;6267:33;6263:42;6258:3;6255:51;6239:1565;;;6386:2;6380:3;6367:17;6364:25;6361:45;;;6402:1;6399;6392:12;6361:45;6437:17;;6429:26;;-1:-1:-1;;6532:4:167;6509:16;;;6505:25;;6501:36;6498:56;;;6550:1;6547;6540:12;6498:56;6582:22;;:::i;:::-;6650:2;6644;6640;6636:11;6623:25;6620:33;6617:53;;;6666:1;6663;6656:12;6617:53;6722:2;6718;6714:11;6701:25;6697:2;6693:34;6774:6;6769:2;6764;6755:7;6751:16;6747:25;6743:38;6740:58;;;6794:1;6791;6784:12;6740:58;6826:22;;:::i;:::-;6811:37;;6877:31;6904:2;6900;6896:11;6877:31;:::i;:::-;6868:7;6861:48;6947:31;6972:4;6968:2;6964:13;6947:31;:::i;:::-;6942:2;6933:7;6929:16;6922:57;7019:31;7046:2;7042;7038:11;7019:31;:::i;:::-;7012:4;7003:7;6999:18;6992:59;7110:3;7106:2;7102:12;7089:26;7084:2;7075:7;7071:16;7064:52;7155:63;7210:7;7204:3;7200:2;7196:12;7155:63;:::i;:::-;7149:3;7140:7;7136:17;7129:90;7279:3;7275:2;7271:12;7258:26;7252:3;7243:7;7239:17;7232:53;7346:3;7342:2;7338:12;7325:26;7318:4;7309:7;7305:18;7298:54;7413:3;7409:2;7405:12;7392:26;7385:4;7376:7;7372:18;7365:54;7469:2;7459:6;7455:2;7451:15;7438:29;7435:37;7432:57;;;7485:1;7482;7475:12;7432:57;7528:97;7617:7;7612:2;7601:6;7597:2;7593:15;7580:29;7576:2;7572:38;7568:47;7528:97;:::i;:::-;7522:3;7509:17;;7502:124;-1:-1:-1;7639:24:167;;;7722:4;7714:13;;;;7701:27;7696:2;7683:16;;;7676:53;;;;7742:20;;;7782:12;;;;6324;6239:1565;;;-1:-1:-1;7813:20:167;;-1:-1:-1;7865:65:167;;-1:-1:-1;7900:23:167;;7885:39;;7926:2;7881:48;7865:65;:::i;:::-;7860:2;7849:14;;7842:89;7853:5;5253:2708;-1:-1:-1;;;;5253:2708:167:o;7966:250::-;8051:1;8061:113;8075:6;8072:1;8069:13;8061:113;;;8151:11;;;8145:18;8132:11;;;8125:39;8097:2;8090:10;8061:113;;;-1:-1:-1;;8208:1:167;8190:16;;8183:27;7966:250::o;8221:396::-;8370:2;8359:9;8352:21;8333:4;8402:6;8396:13;8445:6;8440:2;8429:9;8425:18;8418:34;8461:79;8533:6;8528:2;8517:9;8513:18;8508:2;8500:6;8496:15;8461:79;:::i;:::-;8601:2;8580:15;-1:-1:-1;;8576:29:167;8561:45;;;;8608:2;8557:54;;8221:396;-1:-1:-1;;8221:396:167:o;9387:655::-;9451:3;9489:5;9483:12;9516:6;9511:3;9504:19;9542:4;9571:2;9566:3;9562:12;9555:19;;9608:2;9601:5;9597:14;9629:1;9639:378;9653:6;9650:1;9647:13;9639:378;;;9712:13;;9754:9;;-1:-1:-1;;;;;9750:35:167;9738:48;;9840:11;;;9834:18;9827:26;9820:34;9806:12;;;9799:56;9878:4;9922:11;;;9916:18;9902:12;;;9895:40;9964:4;9955:14;;;;9992:15;;;;9782:1;9668:9;9639:378;;;-1:-1:-1;10033:3:167;;9387:655;-1:-1:-1;;;;;9387:655:167:o;10047:2279::-;10187:4;10216:2;10245;10234:9;10227:21;10267:2;10307;10296:9;10292:18;10345:6;10339:13;10371:4;10411:2;10406;10395:9;10391:18;10384:30;10434:6;10469:12;10463:19;10506:6;10498;10491:22;10532:3;10522:13;;10566:2;10555:9;10551:18;10544:25;;10628:2;10618:6;10615:1;10611:14;10600:9;10596:30;10592:39;10672:2;10658:12;10654:21;10640:35;;10693:1;10703:1481;10717:6;10714:1;10711:13;10703:1481;;;-1:-1:-1;;10782:22:167;;;10778:37;10766:50;;10839:13;;10887:9;;10909:18;;;10959:21;;-1:-1:-1;;;;;80:31:167;;;10982:15;;;68:44;11039:23;;;11033:30;8998:4;8987:16;11109:15;;;8975:29;11166:23;;;11160:30;80:31;11238:15;;;68:44;11283:23;;;11277:30;11330:3;11353:15;;;11346:27;;;;11414:23;;;11408:30;9099:12;;11461:3;11534:15;;;9087:25;;;;9161:4;9150:16;;9144:23;9128:14;;;9121:47;9217:4;9206:16;;9200:23;9184:14;;;9177:47;9273:4;9262:16;;9256:23;9240:14;;;9233:47;11408:30;;11594:23;;11588:30;11582:3;11570:16;;11563:56;11663:23;;11657:30;11651:3;11639:16;;11632:56;-1:-1:-1;11737:4:167;11717:25;;11711:32;11767:6;11793:16;;;11786:28;;;;11875:6;11855:27;;;11849:34;11915:3;11903:16;;11896:29;;;;11949:73;12017:3;12005:16;;11849:34;11949:73;:::i;:::-;12065:11;;;12059:18;12042:15;;;12035:43;;;;12127:15;;;;12162:12;;;;11938:84;-1:-1:-1;10739:1:167;10732:9;10703:1481;;;-1:-1:-1;12221:15:167;;;12215:22;9361:13;;9354:21;12278:18;;;9342:34;12215:22;12314:6;10047:2279;-1:-1:-1;;;;;;;;;;10047:2279:167:o;12331:719::-;12411:6;12464:2;12452:9;12443:7;12439:23;12435:32;12432:52;;;12480:1;12477;12470:12;12432:52;12513:9;12507:16;12542:18;12583:2;12575:6;12572:14;12569:34;;;12599:1;12596;12589:12;12569:34;12637:6;12626:9;12622:22;12612:32;;12682:7;12675:4;12671:2;12667:13;12663:27;12653:55;;12704:1;12701;12694:12;12653:55;12733:2;12727:9;12755:2;12751;12748:10;12745:36;;;12761:18;;:::i;:::-;12803:53;12846:2;12827:13;;-1:-1:-1;;12823:27:167;12852:2;12819:36;12803:53;:::i;:::-;12790:66;;12879:2;12872:5;12865:17;12919:7;12914:2;12909;12905;12901:11;12897:20;12894:33;12891:53;;;12940:1;12937;12930:12;12891:53;12953:67;13017:2;13012;13005:5;13001:14;12996:2;12992;12988:11;12953:67;:::i;:::-;-1:-1:-1;13039:5:167;12331:719;-1:-1:-1;;;;12331:719:167:o;13055:127::-;13116:10;13111:3;13107:20;13104:1;13097:31;13147:4;13144:1;13137:15;13171:4;13168:1;13161:15;13187:135;13226:3;13247:17;;;13244:43;;13267:18;;:::i;:::-;-1:-1:-1;13314:1:167;13303:13;;13187:135::o;13327:127::-;13388:10;13383:3;13379:20;13376:1;13369:31;13419:4;13416:1;13409:15;13443:4;13440:1;13433:15;13641:251;13711:6;13764:2;13752:9;13743:7;13739:23;13735:32;13732:52;;;13780:1;13777;13770:12;13732:52;13812:9;13806:16;13831:31;13856:5;13831:31;:::i;13897:128::-;13964:9;;;13985:11;;;13982:37;;;13999:18;;:::i;14030:127::-;14091:10;14086:3;14082:20;14079:1;14072:31;14122:4;14119:1;14112:15;14146:4;14143:1;14136:15",
    "linkReferences": {},
    "immutableReferences": {
      "11396": [
        {
          "start": 267,
          "length": 32
        },
        {
          "start": 1249,
          "length": 32
        },
        {
          "start": 1530,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptGovernance()": "238efcbc",
    "addCheck(address)": "3d4d10e2",
    "changeGovernor(address)": "e4c0aaf4",
    "checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "d625436c",
    "checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "a0763820",
    "getChecks()": "4d9a12c4",
    "governor()": "0c340a24",
    "gyroConfig()": "44bbdb55",
    "isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "e2cc8679",
    "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "6382b296",
    "pendingGovernor()": "e3056a34",
    "removeCheck(address)": "68b23e52"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"contract IGyroConfig\",\"name\":\"_gyroConfig\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"check\",\"type\":\"address\"}],\"name\":\"CheckAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"check\",\"type\":\"address\"}],\"name\":\"CheckRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorChangeRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"check\",\"type\":\"address\"}],\"name\":\"addCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"checkAndPersistMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"checkAndPersistRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChecks\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gyroConfig\",\"outputs\":[{\"internalType\":\"contract IGyroConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"isMintSafe\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"isRedeemSafe\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"check\",\"type\":\"address\"}],\"name\":\"removeCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getChecks()\":{\"returns\":{\"_0\":\"all the checks registered\"}},\"isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"returns\":{\"err\":\"empty string if it is safe, otherwise the reason why it is not safe\"}},\"isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"returns\":{\"err\":\"empty string if it is safe, otherwise the reason why it is not safe\"}}},\"version\":1},\"userdoc\":{\"events\":{\"GovernorChangeRequested(address)\":{\"notice\":\"Emmited when the governor is change is requested\"},\"GovernorChanged(address,address)\":{\"notice\":\"Emmited when the governor is changed\"}},\"kind\":\"user\",\"methods\":{\"acceptGovernance()\":{\"notice\":\"Called by the pending governor to approve the change\"},\"addCheck(address)\":{\"notice\":\"adds a check to be performed\"},\"changeGovernor(address)\":{\"notice\":\"Changes the governor can only be called by the current governor\"},\"checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"notice\":\"Checks whether a mint operation is safe and reverts otherwise This is only called when an actual mint is performed The implementation should store any relevant information for the mint\"},\"checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"notice\":\"Checks whether a redeem operation is safe and reverts otherwise This is only called when an actual redeem is performed The implementation should store any relevant information for the redeem\"},\"governor()\":{\"notice\":\"Returns the current governor\"},\"isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"notice\":\"Checks whether a mint operation is safe\"},\"isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"notice\":\"Checks whether a redeem operation is safe\"},\"pendingGovernor()\":{\"notice\":\"Returns the pending governor\"},\"removeCheck(address)\":{\"notice\":\"removes a check to be performed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/safety/RootSafetyCheck.sol\":\"RootSafetyCheck\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/auth/Governable.sol\":{\"keccak256\":\"0x8e35f59c8df176f2f2ec0b27bc567106f419942f28b317c4aeb459572c7cddc9\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://2bbe14ec52921d7a1a67116dbfa1729647f94aded19b4949765f4260c46b99fd\",\"dweb:/ipfs/QmXhqMmvwZRUgAFNCxifNKPE2FkDEDVpCBMQNs2LBEQsFi\"]},\"contracts/auth/GovernableBase.sol\":{\"keccak256\":\"0x076c1535458771c52ae11bdd7747704ff990bb8e778c678c5963d4453c43eff0\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://90296c3c42624636dc61c63dccb91807566d905607e13cf3f85dadde65e4ef9f\",\"dweb:/ipfs/QmNdL6uFNGLgwvgwuGVqp2wmmdsKViQhuFeMGNgHsdCeQ6\"]},\"contracts/safety/RootSafetyCheck.sol\":{\"keccak256\":\"0xc481ddcc07efdb3b922b1de227dac7964fa4b94e07129e576246ae21ef7188a6\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://931eb1b1240f1e1c9099bd6d0886835ebc966f12b4bbeb5e1ec171a18e3d9658\",\"dweb:/ipfs/QmdqSTcmZVboUE6YH5sxtk6Newuez69j8ifeUHVeUGAFsD\"]},\"interfaces/IAssetRegistry.sol\":{\"keccak256\":\"0x58784e303edd6e2f1b5b2d7220a9237c7bd701116c4601f9e2ac11342530a306\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://76ea8299b65a2c9f14e609a9d176311e237d3aedb353551a0aca9a47d58ab34e\",\"dweb:/ipfs/Qmd2Qx87GgdAHspVR1qY8ZrPQSJTZxTE3WnrCnTqVYSUS9\"]},\"interfaces/ICapAuthentication.sol\":{\"keccak256\":\"0xbc83c6eba7031ebddecb4cf64f8f2026cca8014a85bc06663e9a204640229d81\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cec43818c95a84509027171a5ad1cd4a812ba8a5cd9670f423f5a3e70ecc9797\",\"dweb:/ipfs/QmWoqxc2A7Fm3jSCZBEb4pqvLCZb6EwkgeSWPAhZKQ88mG\"]},\"interfaces/IFeeBank.sol\":{\"keccak256\":\"0xbae0c79fd80887c105efb69dcf7bc75aa6266ef611ce33be0569b93b668ed413\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://bfaa26c1f2ef522fa6166108eb5e8925f6f3e9057156d061d2c7dcf9641f718a\",\"dweb:/ipfs/Qmcyd9hDh7iATWJrYsJ359mHYns2WPG7ngTJygUparQG2a\"]},\"interfaces/IFeeHandler.sol\":{\"keccak256\":\"0xde93a9b9dfb064121286c7c9880731e0dccac42f6cb2f02f43efb26aedd140ed\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://ff075e4e83ec190266798b45d3f525a80cc5d17afa828d353f07ff8c234e5d1b\",\"dweb:/ipfs/QmYuQEAiZm9fCnuKpcCknMmMF9vLnMzjpyHALrCyqLYScc\"]},\"interfaces/IGYDToken.sol\":{\"keccak256\":\"0xaecf6133bdc678ae1487cd097cd7dee99e1b48cd6644d880c362542474a32874\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://993ce8c1d61bc60c35a6b7575365c6e546d0c01efc734d7004f6327b1c1703dd\",\"dweb:/ipfs/QmcuTb57tU7YyDEQLFXh4z5zUPVd9mbZvsDxxWLN1k1mAN\"]},\"interfaces/IGovernable.sol\":{\"keccak256\":\"0x5e0804b45ef3fb3cfd9bf24999ea98307d157dd1e3fb4965ab902f16a8a7a834\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cc9a2bcf74ff86ae5c89873dd7eea6bb4d9c71bf67f63414cf6519a17bb60066\",\"dweb:/ipfs/QmT45sh3fadFtq6gD1STeTxtFgE1AQ6SNVtCbChoWdRkid\"]},\"interfaces/IGyroConfig.sol\":{\"keccak256\":\"0x502db81331c4302bbe2a52b246a850400a03e20458f5f13cb0e4b15b804cdb63\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://bbddf716c9dcab1fcb6c11e6c8e772ea6fbe5d1ae59dd35fe26570d28943255d\",\"dweb:/ipfs/QmPhjMqQRN3TCxcRMJT1YasmkFK8Hu1Hifw9NhTYR8cYdz\"]},\"interfaces/IGyroVault.sol\":{\"keccak256\":\"0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4\",\"dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL\"]},\"interfaces/IMotherboard.sol\":{\"keccak256\":\"0x76dfe1c34dd98f437298bdb6fc4db66c7ed5111bcec7fb54bc5a3433d37775ec\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://0ed06a10647994f5eca3adccefffc7b9187c8bee40404232ccfb920add315870\",\"dweb:/ipfs/QmT2bpUExnTyE87KZ7Q5FVT5Ykjft4DHa89cdP9gBPByhL\"]},\"interfaces/IPAMM.sol\":{\"keccak256\":\"0x26e4ae598f71529d34a91298ce208c6f34686a4f67360274d20309680f237db2\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://ceda5a304d4c9564cda5c7ac1f0fa5a2ee3933d2843dbdb7ee87b16e75ebb616\",\"dweb:/ipfs/QmV974iH2s27qXvo6Mrx3E5xwAXiHbELCbUtPQzCwj8v3o\"]},\"interfaces/IReserve.sol\":{\"keccak256\":\"0xd9d9d8f44fb69ae14c1f51bdc88ab20cf356422ca9de17209cbba9e3024861d7\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://6fa4b7a768d16c840ec24063fe921eae94094f3fc639ec8695ef0bc7d6cc11d7\",\"dweb:/ipfs/QmboDFRYZDgWhMobsU3XJKpuykrxJ6d5FCke85Q485f8H3\"]},\"interfaces/IReserveManager.sol\":{\"keccak256\":\"0x2434d806c0b3e8b18f9a01abdf11abe2efef2adfb158d7a3dd30d467a99ccba7\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://a8fada4480c2cfb92849ddb641e82a617fd1432264db494c03b9aef501ae9d73\",\"dweb:/ipfs/QmNXWQmV6ixeq1MBr2NX1B3bGyN8k4Q1UQ6WwmpmcvAsS9\"]},\"interfaces/ISafetyCheck.sol\":{\"keccak256\":\"0xa25aa366374e1c583b6d44ed7da0eed3b94145e013f6b29bd748612d93f5d684\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://dda510dcba46233d7dcb3d87a0fa5e04d3b69c26a9d1fffc7a8ebefa8221f9c4\",\"dweb:/ipfs/Qmdy8TTsvAwDoaCmdNWHUGaBWtoDNoCP4CDtEwmuCeLBhR\"]},\"interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xb1b715c3744f62abdc6d472d6798f07e1bd07b66ad102375ca2730139cfd8330\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://345aaaab487357f53db2fdd204e5d7dfdfcc56bd5eaef5ab4ece49337043bc5e\",\"dweb:/ipfs/QmTQGQuN8V3NY6Z3ofpgVvzaQoHUr1TUGYvkfxJuPPnnzE\"]},\"interfaces/IVaultWeightManager.sol\":{\"keccak256\":\"0x23bda085a1f274154856f6927d56940389b1d040cab914bee575c0762a04ac35\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://b26e4a17d3e64f5206d5b6fe00acf0e418bf3daeb6fd4bd0fdde6e69f164bd13\",\"dweb:/ipfs/QmTqtYzwzN8m1K9e1h5wX5Ufv7DdEVJZjDbUs9bkXSBNby\"]},\"interfaces/balancer/IAsset.sol\":{\"keccak256\":\"0x620a03c52641b8e1732123f17d23b84c1f82120c74ff7cd87e752f797740ad25\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://5c90daea9d62b92331bed096990fa73cdeb912ccbe46d83732e1cdd1652c5658\",\"dweb:/ipfs/QmQaVRCo2ttZj8QqtKPMfMux5w816nPyFQhLVPm81Do9UC\"]},\"interfaces/balancer/IAuthorizer.sol\":{\"keccak256\":\"0x9d6ac02e7069ded94f5142e8c5ad7981dad84f9e1e5dcd715da880de08cd080d\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4045080e6b12749bd82eb1cb24736efdb59c81e044b1b9c4607ac2b6d460ce3f\",\"dweb:/ipfs/Qma1KE11aq8nuNBSMQxW6bY2b7atBoSZr6EBZ8xSP1by28\"]},\"interfaces/balancer/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x4d948a2d8d3f52b5184d947049871ad351aa63156c32229a2dc7f5e6d324c7e5\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://5281b98c23c7b39ecb81981697ce0602162d2c7c0a0c53c6f65d609edb9a9eb4\",\"dweb:/ipfs/QmSLdi64nRpmey1JKhvnkiSqX2EmtAs15RetU3eMZjVa7Y\"]},\"interfaces/balancer/ISignaturesValidator.sol\":{\"keccak256\":\"0x69ec4ebe37eec8374c9c3681d4636ccf0e399ff599f9d4622428df57d4e77cba\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://7dd06778cbed2b7c800967f711d3bc71b4d44171372139e884d74ef7f71e0166\",\"dweb:/ipfs/QmeAeUostyapZeMHkrdwfxUtmFR6tZuLUro17LCH6cB1Wo\"]},\"interfaces/balancer/ITemporarilyPausable.sol\":{\"keccak256\":\"0xeb68d86c8bf05f164abf5db93937f4e7a574c82193e5b6b72c6722e986fa2e26\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cd83c8327b77acbfd77fc4c6027a2df39c3257d17b43fe9ca619174b550393dd\",\"dweb:/ipfs/QmXdhoZKTBgnVNgU8efT3jDpXqDJt5rDtrhbag6Qb447AK\"]},\"interfaces/balancer/IVault.sol\":{\"keccak256\":\"0x2cf5253065be223b5aba19cc04371bc6972112c7d5ee5c1c6c3272acb09553c8\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://c5996526c2fc484ea3834da36079515cf35bdc29e700d450a1b61fbdfdedcdc8\",\"dweb:/ipfs/QmSauWgbgTza9wBBJ4CNz6WKx6A1E6zNXqQGrZZabwwV4W\"]},\"interfaces/balancer/IWETH.sol\":{\"keccak256\":\"0xd1ca6e0e7b1aabb3b7cc84c4988a831f4cebb5e6c70e7368ef19d0e1f1444c25\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://73a55d58dc3e9168ac6da08c87c0803e7541fe92ed4068d3229820be9f2384ad\",\"dweb:/ipfs/QmYDEUpvHPRXrA6VnTmdYETSaYHKBSkApx38aQga1cVwHc\"]},\"interfaces/oracles/IBatchVaultPriceOracle.sol\":{\"keccak256\":\"0xc0d47d656e552e11691d6bdb6ec0c9cfe47fc53a6c7889c491c49e15763a281b\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://523902c539f32d8bd92eade2b92ec81c54a322c50c812e6642482a0de43983e4\",\"dweb:/ipfs/QmSLpFgT5GLJyJdiJsHuZTig2EBm51NTmPW8iHD2rGbM8e\"]},\"interfaces/oracles/IUSDPriceOracle.sol\":{\"keccak256\":\"0xf5b9d5cff4b98ffdfda85702a4cc32ae27f9bf0c690f3640a959f7479ba72f41\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://88e1c960b489590938b68c879581c7809986348d504a5ed67dba6ef464ba227c\",\"dweb:/ipfs/QmY8mNgbN7GZnMeuVh2M4z1bp2swWbfVFgFU59RHUqUM5j\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5094b17cb46143943f3206d0738b91a05a7005e979681af7210d534cd3e72f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a55fbc9ee8080ec3b397e8e32e5dafcff2c377ce44d553bfc93dfce1be2d5b12\",\"dweb:/ipfs/QmYSk6bNHnpKRyNWXmEBKbkPxXi7Hco9JZHHyxMdrZGWpb\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"libraries/ConfigHelpers.sol\":{\"keccak256\":\"0x1b7ac8a991e948fbf835a1c0c0a049cf968df02cc3c3c4ef8ccdc6a1fb39fc58\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://afa2572417a368ec076b558f9b56d63adc9a089125d0297b2b36636bc715040d\",\"dweb:/ipfs/QmRH8p4piWw6XeLysJgcHfYwtDbywioySE26XiWTbsKyMv\"]},\"libraries/ConfigKeys.sol\":{\"keccak256\":\"0x773f4b17ed9b3cf62bd4edb2863923460c91c7bd11972f033c1af876e6c93e7c\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://f0011cc19a33fc821a8859ce74802da48da814a4929a22cec40e807ba2939654\",\"dweb:/ipfs/QmNNrwtaSPCabAfSnc6w6Sa3HYomJdNMeAnFhRHgZAeHcY\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494\",\"dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC\"]},\"libraries/EnumerableExtensions.sol\":{\"keccak256\":\"0x6c54ab0c82f070c6a114721f1dfb3d03cf06f93a5ea4f77f42ed8f225ec3ef13\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://5cbd161dc2a6e02c7a429059bde3cf6aea6e221f25176a1dc4a475476e497aa3\",\"dweb:/ipfs/QmZJerbTGU3o7S7gz6hstAbU3Fqvmh2tyPkLPfF2MnsxWs\"]},\"libraries/EnumerableMapping.sol\":{\"keccak256\":\"0xaf8e19924c93f5f752737255f34654a3e9d35e3efbd4d5ba4e33ab6426d5aaa8\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://e7db70c5e844030ce4ca5477ab8a884b80b65fa6b79bfc781deb147bbfbd3412\",\"dweb:/ipfs/Qmees3dU8CZ23J8D5s8uTKYz6mFaRfskbUobmfoVFS6eQz\"]},\"libraries/Errors.sol\":{\"keccak256\":\"0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55\",\"dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC\"]},\"libraries/Vaults.sol\":{\"keccak256\":\"0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b\",\"dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_governor",
              "type": "address"
            },
            {
              "internalType": "contract IGyroConfig",
              "name": "_gyroConfig",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "check",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CheckAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "check",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CheckRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GovernorChangeRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldGovernor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GovernorChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptGovernance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "check",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addCheck"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeGovernor"
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkAndPersistMint"
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkAndPersistRedeem"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getChecks",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "governor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gyroConfig",
          "outputs": [
            {
              "internalType": "contract IGyroConfig",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMintSafe",
          "outputs": [
            {
              "internalType": "string",
              "name": "err",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRedeemSafe",
          "outputs": [
            {
              "internalType": "string",
              "name": "err",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingGovernor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "check",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeCheck"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getChecks()": {
            "returns": {
              "_0": "all the checks registered"
            }
          },
          "isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "returns": {
              "err": "empty string if it is safe, otherwise the reason why it is not safe"
            }
          },
          "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "returns": {
              "err": "empty string if it is safe, otherwise the reason why it is not safe"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptGovernance()": {
            "notice": "Called by the pending governor to approve the change"
          },
          "addCheck(address)": {
            "notice": "adds a check to be performed"
          },
          "changeGovernor(address)": {
            "notice": "Changes the governor can only be called by the current governor"
          },
          "checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "notice": "Checks whether a mint operation is safe and reverts otherwise This is only called when an actual mint is performed The implementation should store any relevant information for the mint"
          },
          "checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "notice": "Checks whether a redeem operation is safe and reverts otherwise This is only called when an actual redeem is performed The implementation should store any relevant information for the redeem"
          },
          "governor()": {
            "notice": "Returns the current governor"
          },
          "isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "notice": "Checks whether a mint operation is safe"
          },
          "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "notice": "Checks whether a redeem operation is safe"
          },
          "pendingGovernor()": {
            "notice": "Returns the pending governor"
          },
          "removeCheck(address)": {
            "notice": "removes a check to be performed"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/safety/RootSafetyCheck.sol": "RootSafetyCheck"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/auth/Governable.sol": {
        "keccak256": "0x8e35f59c8df176f2f2ec0b27bc567106f419942f28b317c4aeb459572c7cddc9",
        "urls": [
          "bzz-raw://2bbe14ec52921d7a1a67116dbfa1729647f94aded19b4949765f4260c46b99fd",
          "dweb:/ipfs/QmXhqMmvwZRUgAFNCxifNKPE2FkDEDVpCBMQNs2LBEQsFi"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/auth/GovernableBase.sol": {
        "keccak256": "0x076c1535458771c52ae11bdd7747704ff990bb8e778c678c5963d4453c43eff0",
        "urls": [
          "bzz-raw://90296c3c42624636dc61c63dccb91807566d905607e13cf3f85dadde65e4ef9f",
          "dweb:/ipfs/QmNdL6uFNGLgwvgwuGVqp2wmmdsKViQhuFeMGNgHsdCeQ6"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/safety/RootSafetyCheck.sol": {
        "keccak256": "0xc481ddcc07efdb3b922b1de227dac7964fa4b94e07129e576246ae21ef7188a6",
        "urls": [
          "bzz-raw://931eb1b1240f1e1c9099bd6d0886835ebc966f12b4bbeb5e1ec171a18e3d9658",
          "dweb:/ipfs/QmdqSTcmZVboUE6YH5sxtk6Newuez69j8ifeUHVeUGAFsD"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IAssetRegistry.sol": {
        "keccak256": "0x58784e303edd6e2f1b5b2d7220a9237c7bd701116c4601f9e2ac11342530a306",
        "urls": [
          "bzz-raw://76ea8299b65a2c9f14e609a9d176311e237d3aedb353551a0aca9a47d58ab34e",
          "dweb:/ipfs/Qmd2Qx87GgdAHspVR1qY8ZrPQSJTZxTE3WnrCnTqVYSUS9"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/ICapAuthentication.sol": {
        "keccak256": "0xbc83c6eba7031ebddecb4cf64f8f2026cca8014a85bc06663e9a204640229d81",
        "urls": [
          "bzz-raw://cec43818c95a84509027171a5ad1cd4a812ba8a5cd9670f423f5a3e70ecc9797",
          "dweb:/ipfs/QmWoqxc2A7Fm3jSCZBEb4pqvLCZb6EwkgeSWPAhZKQ88mG"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IFeeBank.sol": {
        "keccak256": "0xbae0c79fd80887c105efb69dcf7bc75aa6266ef611ce33be0569b93b668ed413",
        "urls": [
          "bzz-raw://bfaa26c1f2ef522fa6166108eb5e8925f6f3e9057156d061d2c7dcf9641f718a",
          "dweb:/ipfs/Qmcyd9hDh7iATWJrYsJ359mHYns2WPG7ngTJygUparQG2a"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IFeeHandler.sol": {
        "keccak256": "0xde93a9b9dfb064121286c7c9880731e0dccac42f6cb2f02f43efb26aedd140ed",
        "urls": [
          "bzz-raw://ff075e4e83ec190266798b45d3f525a80cc5d17afa828d353f07ff8c234e5d1b",
          "dweb:/ipfs/QmYuQEAiZm9fCnuKpcCknMmMF9vLnMzjpyHALrCyqLYScc"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGYDToken.sol": {
        "keccak256": "0xaecf6133bdc678ae1487cd097cd7dee99e1b48cd6644d880c362542474a32874",
        "urls": [
          "bzz-raw://993ce8c1d61bc60c35a6b7575365c6e546d0c01efc734d7004f6327b1c1703dd",
          "dweb:/ipfs/QmcuTb57tU7YyDEQLFXh4z5zUPVd9mbZvsDxxWLN1k1mAN"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGovernable.sol": {
        "keccak256": "0x5e0804b45ef3fb3cfd9bf24999ea98307d157dd1e3fb4965ab902f16a8a7a834",
        "urls": [
          "bzz-raw://cc9a2bcf74ff86ae5c89873dd7eea6bb4d9c71bf67f63414cf6519a17bb60066",
          "dweb:/ipfs/QmT45sh3fadFtq6gD1STeTxtFgE1AQ6SNVtCbChoWdRkid"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGyroConfig.sol": {
        "keccak256": "0x502db81331c4302bbe2a52b246a850400a03e20458f5f13cb0e4b15b804cdb63",
        "urls": [
          "bzz-raw://bbddf716c9dcab1fcb6c11e6c8e772ea6fbe5d1ae59dd35fe26570d28943255d",
          "dweb:/ipfs/QmPhjMqQRN3TCxcRMJT1YasmkFK8Hu1Hifw9NhTYR8cYdz"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGyroVault.sol": {
        "keccak256": "0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644",
        "urls": [
          "bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4",
          "dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IMotherboard.sol": {
        "keccak256": "0x76dfe1c34dd98f437298bdb6fc4db66c7ed5111bcec7fb54bc5a3433d37775ec",
        "urls": [
          "bzz-raw://0ed06a10647994f5eca3adccefffc7b9187c8bee40404232ccfb920add315870",
          "dweb:/ipfs/QmT2bpUExnTyE87KZ7Q5FVT5Ykjft4DHa89cdP9gBPByhL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IPAMM.sol": {
        "keccak256": "0x26e4ae598f71529d34a91298ce208c6f34686a4f67360274d20309680f237db2",
        "urls": [
          "bzz-raw://ceda5a304d4c9564cda5c7ac1f0fa5a2ee3933d2843dbdb7ee87b16e75ebb616",
          "dweb:/ipfs/QmV974iH2s27qXvo6Mrx3E5xwAXiHbELCbUtPQzCwj8v3o"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IReserve.sol": {
        "keccak256": "0xd9d9d8f44fb69ae14c1f51bdc88ab20cf356422ca9de17209cbba9e3024861d7",
        "urls": [
          "bzz-raw://6fa4b7a768d16c840ec24063fe921eae94094f3fc639ec8695ef0bc7d6cc11d7",
          "dweb:/ipfs/QmboDFRYZDgWhMobsU3XJKpuykrxJ6d5FCke85Q485f8H3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IReserveManager.sol": {
        "keccak256": "0x2434d806c0b3e8b18f9a01abdf11abe2efef2adfb158d7a3dd30d467a99ccba7",
        "urls": [
          "bzz-raw://a8fada4480c2cfb92849ddb641e82a617fd1432264db494c03b9aef501ae9d73",
          "dweb:/ipfs/QmNXWQmV6ixeq1MBr2NX1B3bGyN8k4Q1UQ6WwmpmcvAsS9"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/ISafetyCheck.sol": {
        "keccak256": "0xa25aa366374e1c583b6d44ed7da0eed3b94145e013f6b29bd748612d93f5d684",
        "urls": [
          "bzz-raw://dda510dcba46233d7dcb3d87a0fa5e04d3b69c26a9d1fffc7a8ebefa8221f9c4",
          "dweb:/ipfs/Qmdy8TTsvAwDoaCmdNWHUGaBWtoDNoCP4CDtEwmuCeLBhR"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IVaultRegistry.sol": {
        "keccak256": "0xb1b715c3744f62abdc6d472d6798f07e1bd07b66ad102375ca2730139cfd8330",
        "urls": [
          "bzz-raw://345aaaab487357f53db2fdd204e5d7dfdfcc56bd5eaef5ab4ece49337043bc5e",
          "dweb:/ipfs/QmTQGQuN8V3NY6Z3ofpgVvzaQoHUr1TUGYvkfxJuPPnnzE"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IVaultWeightManager.sol": {
        "keccak256": "0x23bda085a1f274154856f6927d56940389b1d040cab914bee575c0762a04ac35",
        "urls": [
          "bzz-raw://b26e4a17d3e64f5206d5b6fe00acf0e418bf3daeb6fd4bd0fdde6e69f164bd13",
          "dweb:/ipfs/QmTqtYzwzN8m1K9e1h5wX5Ufv7DdEVJZjDbUs9bkXSBNby"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IAsset.sol": {
        "keccak256": "0x620a03c52641b8e1732123f17d23b84c1f82120c74ff7cd87e752f797740ad25",
        "urls": [
          "bzz-raw://5c90daea9d62b92331bed096990fa73cdeb912ccbe46d83732e1cdd1652c5658",
          "dweb:/ipfs/QmQaVRCo2ttZj8QqtKPMfMux5w816nPyFQhLVPm81Do9UC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IAuthorizer.sol": {
        "keccak256": "0x9d6ac02e7069ded94f5142e8c5ad7981dad84f9e1e5dcd715da880de08cd080d",
        "urls": [
          "bzz-raw://4045080e6b12749bd82eb1cb24736efdb59c81e044b1b9c4607ac2b6d460ce3f",
          "dweb:/ipfs/Qma1KE11aq8nuNBSMQxW6bY2b7atBoSZr6EBZ8xSP1by28"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IFlashLoanRecipient.sol": {
        "keccak256": "0x4d948a2d8d3f52b5184d947049871ad351aa63156c32229a2dc7f5e6d324c7e5",
        "urls": [
          "bzz-raw://5281b98c23c7b39ecb81981697ce0602162d2c7c0a0c53c6f65d609edb9a9eb4",
          "dweb:/ipfs/QmSLdi64nRpmey1JKhvnkiSqX2EmtAs15RetU3eMZjVa7Y"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/ISignaturesValidator.sol": {
        "keccak256": "0x69ec4ebe37eec8374c9c3681d4636ccf0e399ff599f9d4622428df57d4e77cba",
        "urls": [
          "bzz-raw://7dd06778cbed2b7c800967f711d3bc71b4d44171372139e884d74ef7f71e0166",
          "dweb:/ipfs/QmeAeUostyapZeMHkrdwfxUtmFR6tZuLUro17LCH6cB1Wo"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/ITemporarilyPausable.sol": {
        "keccak256": "0xeb68d86c8bf05f164abf5db93937f4e7a574c82193e5b6b72c6722e986fa2e26",
        "urls": [
          "bzz-raw://cd83c8327b77acbfd77fc4c6027a2df39c3257d17b43fe9ca619174b550393dd",
          "dweb:/ipfs/QmXdhoZKTBgnVNgU8efT3jDpXqDJt5rDtrhbag6Qb447AK"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IVault.sol": {
        "keccak256": "0x2cf5253065be223b5aba19cc04371bc6972112c7d5ee5c1c6c3272acb09553c8",
        "urls": [
          "bzz-raw://c5996526c2fc484ea3834da36079515cf35bdc29e700d450a1b61fbdfdedcdc8",
          "dweb:/ipfs/QmSauWgbgTza9wBBJ4CNz6WKx6A1E6zNXqQGrZZabwwV4W"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IWETH.sol": {
        "keccak256": "0xd1ca6e0e7b1aabb3b7cc84c4988a831f4cebb5e6c70e7368ef19d0e1f1444c25",
        "urls": [
          "bzz-raw://73a55d58dc3e9168ac6da08c87c0803e7541fe92ed4068d3229820be9f2384ad",
          "dweb:/ipfs/QmYDEUpvHPRXrA6VnTmdYETSaYHKBSkApx38aQga1cVwHc"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/oracles/IBatchVaultPriceOracle.sol": {
        "keccak256": "0xc0d47d656e552e11691d6bdb6ec0c9cfe47fc53a6c7889c491c49e15763a281b",
        "urls": [
          "bzz-raw://523902c539f32d8bd92eade2b92ec81c54a322c50c812e6642482a0de43983e4",
          "dweb:/ipfs/QmSLpFgT5GLJyJdiJsHuZTig2EBm51NTmPW8iHD2rGbM8e"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/oracles/IUSDPriceOracle.sol": {
        "keccak256": "0xf5b9d5cff4b98ffdfda85702a4cc32ae27f9bf0c690f3640a959f7479ba72f41",
        "urls": [
          "bzz-raw://88e1c960b489590938b68c879581c7809986348d504a5ed67dba6ef464ba227c",
          "dweb:/ipfs/QmY8mNgbN7GZnMeuVh2M4z1bp2swWbfVFgFU59RHUqUM5j"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0x5094b17cb46143943f3206d0738b91a05a7005e979681af7210d534cd3e72f54",
        "urls": [
          "bzz-raw://a55fbc9ee8080ec3b397e8e32e5dafcff2c377ce44d553bfc93dfce1be2d5b12",
          "dweb:/ipfs/QmYSk6bNHnpKRyNWXmEBKbkPxXi7Hco9JZHHyxMdrZGWpb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "libraries/ConfigHelpers.sol": {
        "keccak256": "0x1b7ac8a991e948fbf835a1c0c0a049cf968df02cc3c3c4ef8ccdc6a1fb39fc58",
        "urls": [
          "bzz-raw://afa2572417a368ec076b558f9b56d63adc9a089125d0297b2b36636bc715040d",
          "dweb:/ipfs/QmRH8p4piWw6XeLysJgcHfYwtDbywioySE26XiWTbsKyMv"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/ConfigKeys.sol": {
        "keccak256": "0x773f4b17ed9b3cf62bd4edb2863923460c91c7bd11972f033c1af876e6c93e7c",
        "urls": [
          "bzz-raw://f0011cc19a33fc821a8859ce74802da48da814a4929a22cec40e807ba2939654",
          "dweb:/ipfs/QmNNrwtaSPCabAfSnc6w6Sa3HYomJdNMeAnFhRHgZAeHcY"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/DataTypes.sol": {
        "keccak256": "0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29",
        "urls": [
          "bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494",
          "dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/EnumerableExtensions.sol": {
        "keccak256": "0x6c54ab0c82f070c6a114721f1dfb3d03cf06f93a5ea4f77f42ed8f225ec3ef13",
        "urls": [
          "bzz-raw://5cbd161dc2a6e02c7a429059bde3cf6aea6e221f25176a1dc4a475476e497aa3",
          "dweb:/ipfs/QmZJerbTGU3o7S7gz6hstAbU3Fqvmh2tyPkLPfF2MnsxWs"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/EnumerableMapping.sol": {
        "keccak256": "0xaf8e19924c93f5f752737255f34654a3e9d35e3efbd4d5ba4e33ab6426d5aaa8",
        "urls": [
          "bzz-raw://e7db70c5e844030ce4ca5477ab8a884b80b65fa6b79bfc781deb147bbfbd3412",
          "dweb:/ipfs/Qmees3dU8CZ23J8D5s8uTKYz6mFaRfskbUobmfoVFS6eQz"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Errors.sol": {
        "keccak256": "0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd",
        "urls": [
          "bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55",
          "dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Vaults.sol": {
        "keccak256": "0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f",
        "urls": [
          "bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b",
          "dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/safety/RootSafetyCheck.sol",
    "id": 11682,
    "exportedSymbols": {
      "ConfigHelpers": [
        54360
      ],
      "ConfigKeys": [
        54412
      ],
      "DataTypes": [
        54558
      ],
      "EnumerableExtensions": [
        55122
      ],
      "EnumerableMap": [
        53169
      ],
      "EnumerableMapping": [
        55947
      ],
      "EnumerableSet": [
        53782
      ],
      "Errors": [
        56095
      ],
      "Governable": [
        5497
      ],
      "GovernableBase": [
        5591
      ],
      "IAsset": [
        16903
      ],
      "IAssetRegistry": [
        16078
      ],
      "IAuthorizer": [
        16918
      ],
      "IBatchVaultPriceOracle": [
        17701
      ],
      "ICapAuthentication": [
        16090
      ],
      "IERC165": [
        49641
      ],
      "IERC20": [
        47570
      ],
      "IERC20Metadata": [
        47595
      ],
      "IERC721": [
        48973
      ],
      "IFeeBank": [
        16115
      ],
      "IFeeHandler": [
        16137
      ],
      "IFlashLoanRecipient": [
        17044
      ],
      "IGYDToken": [
        16178
      ],
      "IGovernable": [
        16215
      ],
      "IGyroConfig": [
        16338
      ],
      "IGyroVault": [
        16453
      ],
      "IMotherboard": [
        16598
      ],
      "IPAMM": [
        16671
      ],
      "IReserve": [
        16734
      ],
      "IReserveManager": [
        16759
      ],
      "ISafetyCheck": [
        16795
      ],
      "ISignaturesValidator": [
        17126
      ],
      "ITemporarilyPausable": [
        17145
      ],
      "IUSDPriceOracle": [
        17748
      ],
      "IVault": [
        17646
      ],
      "IVaultRegistry": [
        16846
      ],
      "IVaultWeightManager": [
        16875
      ],
      "IWETH": [
        17661
      ],
      "RootSafetyCheck": [
        11681
      ],
      "Vaults": [
        58268
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:3145:32",
    "nodes": [
      {
        "id": 11359,
        "nodeType": "PragmaDirective",
        "src": "174:23:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 11360,
        "nodeType": "ImportDirective",
        "src": "199:65:32",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11682,
        "sourceUnit": 53783,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11361,
        "nodeType": "ImportDirective",
        "src": "266:43:32",
        "nodes": [],
        "absolutePath": "interfaces/ISafetyCheck.sol",
        "file": "../../interfaces/ISafetyCheck.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11682,
        "sourceUnit": 16796,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11362,
        "nodeType": "ImportDirective",
        "src": "310:42:32",
        "nodes": [],
        "absolutePath": "interfaces/IGyroConfig.sol",
        "file": "../../interfaces/IGyroConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11682,
        "sourceUnit": 16339,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11363,
        "nodeType": "ImportDirective",
        "src": "354:50:32",
        "nodes": [],
        "absolutePath": "libraries/EnumerableExtensions.sol",
        "file": "../../libraries/EnumerableExtensions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11682,
        "sourceUnit": 55123,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11364,
        "nodeType": "ImportDirective",
        "src": "405:36:32",
        "nodes": [],
        "absolutePath": "libraries/Errors.sol",
        "file": "../../libraries/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11682,
        "sourceUnit": 56096,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11365,
        "nodeType": "ImportDirective",
        "src": "442:43:32",
        "nodes": [],
        "absolutePath": "libraries/ConfigHelpers.sol",
        "file": "../../libraries/ConfigHelpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11682,
        "sourceUnit": 54361,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11366,
        "nodeType": "ImportDirective",
        "src": "487:32:32",
        "nodes": [],
        "absolutePath": "contracts/auth/Governable.sol",
        "file": "../auth/Governable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11682,
        "sourceUnit": 5498,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11681,
        "nodeType": "ContractDefinition",
        "src": "521:2797:32",
        "nodes": [
          {
            "id": 11374,
            "nodeType": "UsingForDirective",
            "src": "580:49:32",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 11371,
              "name": "EnumerableSet",
              "nameLocations": [
                "586:13:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53782,
              "src": "586:13:32"
            },
            "typeName": {
              "id": 11373,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11372,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "604:13:32",
                  "618:10:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53495,
                "src": "604:24:32"
              },
              "referencedDeclaration": 53495,
              "src": "604:24:32",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$53495_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 11378,
            "nodeType": "UsingForDirective",
            "src": "634:56:32",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 11375,
              "name": "EnumerableExtensions",
              "nameLocations": [
                "640:20:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55122,
              "src": "640:20:32"
            },
            "typeName": {
              "id": 11377,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11376,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "665:13:32",
                  "679:10:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53495,
                "src": "665:24:32"
              },
              "referencedDeclaration": 53495,
              "src": "665:24:32",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$53495_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 11382,
            "nodeType": "UsingForDirective",
            "src": "695:36:32",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 11379,
              "name": "ConfigHelpers",
              "nameLocations": [
                "701:13:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54360,
              "src": "701:13:32"
            },
            "typeName": {
              "id": 11381,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11380,
                "name": "IGyroConfig",
                "nameLocations": [
                  "719:11:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16338,
                "src": "719:11:32"
              },
              "referencedDeclaration": 16338,
              "src": "719:11:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                "typeString": "contract IGyroConfig"
              }
            }
          },
          {
            "id": 11386,
            "nodeType": "EventDefinition",
            "src": "737:40:32",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "75ec3ef6c1afb45dd0a2bbb3a4f14cac03241c33fc24c352e25ea690e22a9232",
            "name": "CheckAdded",
            "nameLocation": "743:10:32",
            "parameters": {
              "id": 11385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11384,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "check",
                  "nameLocation": "770:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11386,
                  "src": "754:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:23:32"
            }
          },
          {
            "id": 11390,
            "nodeType": "EventDefinition",
            "src": "782:42:32",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d37223475c04a60e97eb30bc3a38b4aef6a37def09d1ed6b88c881847362426d",
            "name": "CheckRemoved",
            "nameLocation": "788:12:32",
            "parameters": {
              "id": 11389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11388,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "check",
                  "nameLocation": "817:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11390,
                  "src": "801:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:23:32"
            }
          },
          {
            "id": 11393,
            "nodeType": "VariableDeclaration",
            "src": "830:41:32",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_checks",
            "nameLocation": "864:7:32",
            "scope": 11681,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 11392,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11391,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "830:13:32",
                  "844:10:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53495,
                "src": "830:24:32"
              },
              "referencedDeclaration": 53495,
              "src": "830:24:32",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$53495_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 11396,
            "nodeType": "VariableDeclaration",
            "src": "878:39:32",
            "nodes": [],
            "constant": false,
            "functionSelector": "44bbdb55",
            "mutability": "immutable",
            "name": "gyroConfig",
            "nameLocation": "907:10:32",
            "scope": 11681,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IGyroConfig_$16338",
              "typeString": "contract IGyroConfig"
            },
            "typeName": {
              "id": 11395,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11394,
                "name": "IGyroConfig",
                "nameLocations": [
                  "878:11:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16338,
                "src": "878:11:32"
              },
              "referencedDeclaration": 16338,
              "src": "878:11:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                "typeString": "contract IGyroConfig"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11414,
            "nodeType": "ModifierDefinition",
            "src": "924:137:32",
            "nodes": [],
            "body": {
              "id": 11413,
              "nodeType": "Block",
              "src": "951:110:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11399,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "969:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "973:6:32",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "969:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 11403,
                                  "name": "gyroConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11396,
                                  "src": "991:10:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                                    "typeString": "contract IGyroConfig"
                                  }
                                },
                                "id": 11404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1002:14:32",
                                "memberName": "getMotherboard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54254,
                                "src": "991:25:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_contract$_IGyroConfig_$16338_$returns$_t_contract$_IMotherboard_$16598_$bound_to$_t_contract$_IGyroConfig_$16338_$",
                                  "typeString": "function (contract IGyroConfig) view returns (contract IMotherboard)"
                                }
                              },
                              "id": 11405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "991:27:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMotherboard_$16598",
                                "typeString": "contract IMotherboard"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IMotherboard_$16598",
                                "typeString": "contract IMotherboard"
                              }
                            ],
                            "id": 11402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "983:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11401,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "983:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "983:36:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "969:50:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 11408,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56095,
                          "src": "1021:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$56095_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 11409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1028:14:32",
                        "memberName": "NOT_AUTHORIZED",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56004,
                        "src": "1021:21:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 11398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "961:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "961:82:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11411,
                  "nodeType": "ExpressionStatement",
                  "src": "961:82:32"
                },
                {
                  "id": 11412,
                  "nodeType": "PlaceholderStatement",
                  "src": "1053:1:32"
                }
              ]
            },
            "name": "motherboardOnly",
            "nameLocation": "933:15:32",
            "parameters": {
              "id": 11397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:2:32"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 11444,
            "nodeType": "FunctionDefinition",
            "src": "1067:197:32",
            "nodes": [],
            "body": {
              "id": 11443,
              "nodeType": "Block",
              "src": "1145:119:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11428,
                              "name": "_gyroConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11419,
                              "src": "1171:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                                "typeString": "contract IGyroConfig"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                                "typeString": "contract IGyroConfig"
                              }
                            ],
                            "id": 11427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1163:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11426,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1163:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:20:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1195:1:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1187:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11430,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1187:7:32",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1187:10:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1163:34:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 11435,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56095,
                          "src": "1199:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$56095_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 11436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1206:16:32",
                        "memberName": "INVALID_ARGUMENT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56007,
                        "src": "1199:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 11425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1155:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:68:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11438,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:68:32"
                },
                {
                  "expression": {
                    "id": 11441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11439,
                      "name": "gyroConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11396,
                      "src": "1233:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                        "typeString": "contract IGyroConfig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11440,
                      "name": "_gyroConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11419,
                      "src": "1246:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                        "typeString": "contract IGyroConfig"
                      }
                    },
                    "src": "1233:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                      "typeString": "contract IGyroConfig"
                    }
                  },
                  "id": 11442,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:24:32"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11422,
                    "name": "_governor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11416,
                    "src": "1134:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11423,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11421,
                  "name": "Governable",
                  "nameLocations": [
                    "1123:10:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5497,
                  "src": "1123:10:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "1123:21:32"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 11420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11416,
                  "mutability": "mutable",
                  "name": "_governor",
                  "nameLocation": "1087:9:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11444,
                  "src": "1079:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11419,
                  "mutability": "mutable",
                  "name": "_gyroConfig",
                  "nameLocation": "1110:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11444,
                  "src": "1098:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                    "typeString": "contract IGyroConfig"
                  },
                  "typeName": {
                    "id": 11418,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11417,
                      "name": "IGyroConfig",
                      "nameLocations": [
                        "1098:11:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16338,
                      "src": "1098:11:32"
                    },
                    "referencedDeclaration": 16338,
                    "src": "1098:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGyroConfig_$16338",
                      "typeString": "contract IGyroConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1078:44:32"
            },
            "returnParameters": {
              "id": 11424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1145:0:32"
            },
            "scope": 11681,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11456,
            "nodeType": "FunctionDefinition",
            "src": "1312:101:32",
            "nodes": [],
            "body": {
              "id": 11455,
              "nodeType": "Block",
              "src": "1372:41:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11451,
                        "name": "_checks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11393,
                        "src": "1389:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 11452,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1397:7:32",
                      "memberName": "toArray",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54721,
                      "src": "1389:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 11453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1389:17:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 11450,
                  "id": 11454,
                  "nodeType": "Return",
                  "src": "1382:24:32"
                }
              ]
            },
            "documentation": {
              "id": 11445,
              "nodeType": "StructuredDocumentation",
              "src": "1270:37:32",
              "text": "@return all the checks registered"
            },
            "functionSelector": "4d9a12c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChecks",
            "nameLocation": "1321:9:32",
            "parameters": {
              "id": 11446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:32"
            },
            "returnParameters": {
              "id": 11450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11456,
                  "src": "1354:16:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11447,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1354:7:32",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11448,
                    "nodeType": "ArrayTypeName",
                    "src": "1354:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:18:32"
            },
            "scope": 11681,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11478,
            "nodeType": "FunctionDefinition",
            "src": "1464:158:32",
            "nodes": [],
            "body": {
              "id": 11477,
              "nodeType": "Block",
              "src": "1521:101:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11467,
                            "name": "check",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11459,
                            "src": "1551:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 11465,
                            "name": "_checks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11393,
                            "src": "1539:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 11466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1547:3:32",
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53522,
                          "src": "1539:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$53495_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                          }
                        },
                        "id": 11468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1539:18:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 11469,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56095,
                          "src": "1559:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$56095_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 11470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1566:16:32",
                        "memberName": "INVALID_ARGUMENT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56007,
                        "src": "1559:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 11464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1531:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:52:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11472,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:52:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11474,
                        "name": "check",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11459,
                        "src": "1609:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11473,
                      "name": "CheckAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11386,
                      "src": "1598:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1598:17:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11476,
                  "nodeType": "EmitStatement",
                  "src": "1593:22:32"
                }
              ]
            },
            "documentation": {
              "id": 11457,
              "nodeType": "StructuredDocumentation",
              "src": "1419:40:32",
              "text": "@notice adds a check to be performed"
            },
            "functionSelector": "3d4d10e2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11462,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11461,
                  "name": "governanceOnly",
                  "nameLocations": [
                    "1506:14:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5522,
                  "src": "1506:14:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "1506:14:32"
              }
            ],
            "name": "addCheck",
            "nameLocation": "1473:8:32",
            "parameters": {
              "id": 11460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11459,
                  "mutability": "mutable",
                  "name": "check",
                  "nameLocation": "1490:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11478,
                  "src": "1482:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1482:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:15:32"
            },
            "returnParameters": {
              "id": 11463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:0:32"
            },
            "scope": 11681,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11500,
            "nodeType": "FunctionDefinition",
            "src": "1676:166:32",
            "nodes": [],
            "body": {
              "id": 11499,
              "nodeType": "Block",
              "src": "1736:106:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11489,
                            "name": "check",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11481,
                            "src": "1769:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 11487,
                            "name": "_checks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11393,
                            "src": "1754:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                              "typeString": "struct EnumerableSet.AddressSet storage ref"
                            }
                          },
                          "id": 11488,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1762:6:32",
                          "memberName": "remove",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53549,
                          "src": "1754:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$53495_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                            "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                          }
                        },
                        "id": 11490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1754:21:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 11491,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56095,
                          "src": "1777:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$56095_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 11492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1784:16:32",
                        "memberName": "INVALID_ARGUMENT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56007,
                        "src": "1777:23:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 11486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1746:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:55:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11494,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:55:32"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11496,
                        "name": "check",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11481,
                        "src": "1829:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11495,
                      "name": "CheckRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11390,
                      "src": "1816:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1816:19:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11498,
                  "nodeType": "EmitStatement",
                  "src": "1811:24:32"
                }
              ]
            },
            "documentation": {
              "id": 11479,
              "nodeType": "StructuredDocumentation",
              "src": "1628:43:32",
              "text": "@notice removes a check to be performed"
            },
            "functionSelector": "68b23e52",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11484,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11483,
                  "name": "governanceOnly",
                  "nameLocations": [
                    "1721:14:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5522,
                  "src": "1721:14:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "1721:14:32"
              }
            ],
            "name": "removeCheck",
            "nameLocation": "1685:11:32",
            "parameters": {
              "id": 11482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11481,
                  "mutability": "mutable",
                  "name": "check",
                  "nameLocation": "1705:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11500,
                  "src": "1697:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1696:15:32"
            },
            "returnParameters": {
              "id": 11485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:32"
            },
            "scope": 11681,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11551,
            "nodeType": "FunctionDefinition",
            "src": "1881:387:32",
            "nodes": [],
            "body": {
              "id": 11550,
              "nodeType": "Block",
              "src": "2018:250:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11511,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2036:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 11550,
                      "src": "2028:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2028:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11515,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11512,
                        "name": "_checks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11393,
                        "src": "2045:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 11513,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2053:6:32",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53591,
                      "src": "2045:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 11514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2045:16:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2028:33:32"
                },
                {
                  "body": {
                    "id": 11548,
                    "nodeType": "Block",
                    "src": "2108:154:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 11536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11526,
                            "name": "err",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11508,
                            "src": "2122:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 11534,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11504,
                                "src": "2167:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                                  "typeString": "struct DataTypes.Order memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                                  "typeString": "struct DataTypes.Order memory"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 11530,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11517,
                                        "src": "2152:1:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 11528,
                                        "name": "_checks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11393,
                                        "src": "2141:7:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                                        }
                                      },
                                      "id": 11529,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2149:2:32",
                                      "memberName": "at",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 53618,
                                      "src": "2141:10:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                      }
                                    },
                                    "id": 11531,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2141:13:32",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 11527,
                                  "name": "ISafetyCheck",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16795,
                                  "src": "2128:12:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$16795_$",
                                    "typeString": "type(contract ISafetyCheck)"
                                  }
                                },
                                "id": 11532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2128:27:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISafetyCheck_$16795",
                                  "typeString": "contract ISafetyCheck"
                                }
                              },
                              "id": 11533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2156:10:32",
                              "memberName": "isMintSafe",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16771,
                              "src": "2128:38:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_struct$_Order_$54544_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (struct DataTypes.Order memory) view external returns (string memory)"
                              }
                            },
                            "id": 11535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2128:45:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2122:51:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 11537,
                        "nodeType": "ExpressionStatement",
                        "src": "2122:51:32"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 11540,
                                  "name": "err",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11508,
                                  "src": "2197:3:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 11539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2191:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 11538,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2191:5:32",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2191:10:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 11542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2202:6:32",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2191:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 11543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2211:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2191:21:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11547,
                        "nodeType": "IfStatement",
                        "src": "2187:65:32",
                        "trueBody": {
                          "id": 11546,
                          "nodeType": "Block",
                          "src": "2214:38:32",
                          "statements": [
                            {
                              "id": 11545,
                              "nodeType": "Break",
                              "src": "2232:5:32"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11520,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11517,
                      "src": "2091:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11521,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11511,
                      "src": "2095:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2091:10:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11549,
                  "initializationExpression": {
                    "assignments": [
                      11517
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11517,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2084:1:32",
                        "nodeType": "VariableDeclaration",
                        "scope": 11549,
                        "src": "2076:9:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2076:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11519,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2088:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2076:13:32"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2103:3:32",
                      "subExpression": {
                        "id": 11523,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11517,
                        "src": "2103:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11525,
                    "nodeType": "ExpressionStatement",
                    "src": "2103:3:32"
                  },
                  "nodeType": "ForStatement",
                  "src": "2071:191:32"
                }
              ]
            },
            "baseFunctions": [
              16771
            ],
            "documentation": {
              "id": 11501,
              "nodeType": "StructuredDocumentation",
              "src": "1848:28:32",
              "text": "@inheritdoc ISafetyCheck"
            },
            "functionSelector": "e2cc8679",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMintSafe",
            "nameLocation": "1890:10:32",
            "overrides": {
              "id": 11506,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1969:8:32"
            },
            "parameters": {
              "id": 11505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11504,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1924:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11551,
                  "src": "1901:28:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                    "typeString": "struct DataTypes.Order"
                  },
                  "typeName": {
                    "id": 11503,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11502,
                      "name": "DataTypes.Order",
                      "nameLocations": [
                        "1901:9:32",
                        "1911:5:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54544,
                      "src": "1901:15:32"
                    },
                    "referencedDeclaration": 54544,
                    "src": "1901:15:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$54544_storage_ptr",
                      "typeString": "struct DataTypes.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1900:30:32"
            },
            "returnParameters": {
              "id": 11509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11508,
                  "mutability": "mutable",
                  "name": "err",
                  "nameLocation": "2009:3:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11551,
                  "src": "1995:17:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11507,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1994:19:32"
            },
            "scope": 11681,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11602,
            "nodeType": "FunctionDefinition",
            "src": "2307:391:32",
            "nodes": [],
            "body": {
              "id": 11601,
              "nodeType": "Block",
              "src": "2446:252:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11562,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2464:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 11601,
                      "src": "2456:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2456:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11566,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11563,
                        "name": "_checks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11393,
                        "src": "2473:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 11564,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2481:6:32",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53591,
                      "src": "2473:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 11565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2473:16:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2456:33:32"
                },
                {
                  "body": {
                    "id": 11599,
                    "nodeType": "Block",
                    "src": "2536:156:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 11587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11577,
                            "name": "err",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11559,
                            "src": "2550:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 11585,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11555,
                                "src": "2597:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                                  "typeString": "struct DataTypes.Order memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                                  "typeString": "struct DataTypes.Order memory"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 11581,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11568,
                                        "src": "2580:1:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 11579,
                                        "name": "_checks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11393,
                                        "src": "2569:7:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                                        }
                                      },
                                      "id": 11580,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2577:2:32",
                                      "memberName": "at",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 53618,
                                      "src": "2569:10:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                      }
                                    },
                                    "id": 11582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2569:13:32",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 11578,
                                  "name": "ISafetyCheck",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16795,
                                  "src": "2556:12:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$16795_$",
                                    "typeString": "type(contract ISafetyCheck)"
                                  }
                                },
                                "id": 11583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2556:27:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISafetyCheck_$16795",
                                  "typeString": "contract ISafetyCheck"
                                }
                              },
                              "id": 11584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2584:12:32",
                              "memberName": "isRedeemSafe",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16780,
                              "src": "2556:40:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_struct$_Order_$54544_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (struct DataTypes.Order memory) view external returns (string memory)"
                              }
                            },
                            "id": 11586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2556:47:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2550:53:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 11588,
                        "nodeType": "ExpressionStatement",
                        "src": "2550:53:32"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 11591,
                                  "name": "err",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11559,
                                  "src": "2627:3:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 11590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2621:5:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 11589,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2621:5:32",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2621:10:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 11593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2632:6:32",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2621:17:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 11594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2641:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2621:21:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11598,
                        "nodeType": "IfStatement",
                        "src": "2617:65:32",
                        "trueBody": {
                          "id": 11597,
                          "nodeType": "Block",
                          "src": "2644:38:32",
                          "statements": [
                            {
                              "id": 11596,
                              "nodeType": "Break",
                              "src": "2662:5:32"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11571,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11568,
                      "src": "2519:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11572,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11562,
                      "src": "2523:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2519:10:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11600,
                  "initializationExpression": {
                    "assignments": [
                      11568
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11568,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2512:1:32",
                        "nodeType": "VariableDeclaration",
                        "scope": 11600,
                        "src": "2504:9:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11567,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2504:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11570,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2516:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2504:13:32"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2531:3:32",
                      "subExpression": {
                        "id": 11574,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11568,
                        "src": "2531:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11576,
                    "nodeType": "ExpressionStatement",
                    "src": "2531:3:32"
                  },
                  "nodeType": "ForStatement",
                  "src": "2499:193:32"
                }
              ]
            },
            "baseFunctions": [
              16780
            ],
            "documentation": {
              "id": 11552,
              "nodeType": "StructuredDocumentation",
              "src": "2274:28:32",
              "text": "@inheritdoc ISafetyCheck"
            },
            "functionSelector": "6382b296",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRedeemSafe",
            "nameLocation": "2316:12:32",
            "overrides": {
              "id": 11557,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2397:8:32"
            },
            "parameters": {
              "id": 11556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11555,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2352:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11602,
                  "src": "2329:28:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                    "typeString": "struct DataTypes.Order"
                  },
                  "typeName": {
                    "id": 11554,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11553,
                      "name": "DataTypes.Order",
                      "nameLocations": [
                        "2329:9:32",
                        "2339:5:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54544,
                      "src": "2329:15:32"
                    },
                    "referencedDeclaration": 54544,
                    "src": "2329:15:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$54544_storage_ptr",
                      "typeString": "struct DataTypes.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2328:30:32"
            },
            "returnParameters": {
              "id": 11560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11559,
                  "mutability": "mutable",
                  "name": "err",
                  "nameLocation": "2437:3:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11602,
                  "src": "2423:17:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11558,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2423:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2422:19:32"
            },
            "scope": 11681,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11641,
            "nodeType": "FunctionDefinition",
            "src": "2737:268:32",
            "nodes": [],
            "body": {
              "id": 11640,
              "nodeType": "Block",
              "src": "2830:175:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11613,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2848:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 11640,
                      "src": "2840:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2840:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11617,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11614,
                        "name": "_checks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11393,
                        "src": "2857:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 11615,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2865:6:32",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53591,
                      "src": "2857:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 11616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:16:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2840:33:32"
                },
                {
                  "body": {
                    "id": 11638,
                    "nodeType": "Block",
                    "src": "2920:79:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11635,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11606,
                              "src": "2982:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                                "typeString": "struct DataTypes.Order memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                                "typeString": "struct DataTypes.Order memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 11631,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11619,
                                      "src": "2958:1:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 11629,
                                      "name": "_checks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11393,
                                      "src": "2947:7:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                                        "typeString": "struct EnumerableSet.AddressSet storage ref"
                                      }
                                    },
                                    "id": 11630,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2955:2:32",
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 53618,
                                    "src": "2947:10:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                                      "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                    }
                                  },
                                  "id": 11632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2947:13:32",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 11628,
                                "name": "ISafetyCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16795,
                                "src": "2934:12:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$16795_$",
                                  "typeString": "type(contract ISafetyCheck)"
                                }
                              },
                              "id": 11633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2934:27:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafetyCheck_$16795",
                                "typeString": "contract ISafetyCheck"
                              }
                            },
                            "id": 11634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2962:19:32",
                            "memberName": "checkAndPersistMint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16794,
                            "src": "2934:47:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$54544_memory_ptr_$returns$__$",
                              "typeString": "function (struct DataTypes.Order memory) external"
                            }
                          },
                          "id": 11636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2934:54:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11637,
                        "nodeType": "ExpressionStatement",
                        "src": "2934:54:32"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11622,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11619,
                      "src": "2903:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11623,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11613,
                      "src": "2907:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2903:10:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11639,
                  "initializationExpression": {
                    "assignments": [
                      11619
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11619,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2896:1:32",
                        "nodeType": "VariableDeclaration",
                        "scope": 11639,
                        "src": "2888:9:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11618,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2888:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11621,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2900:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2888:13:32"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2915:3:32",
                      "subExpression": {
                        "id": 11625,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11619,
                        "src": "2915:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11627,
                    "nodeType": "ExpressionStatement",
                    "src": "2915:3:32"
                  },
                  "nodeType": "ForStatement",
                  "src": "2883:116:32"
                }
              ]
            },
            "baseFunctions": [
              16794
            ],
            "documentation": {
              "id": 11603,
              "nodeType": "StructuredDocumentation",
              "src": "2704:28:32",
              "text": "@inheritdoc ISafetyCheck"
            },
            "functionSelector": "d625436c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11610,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11609,
                  "name": "motherboardOnly",
                  "nameLocations": [
                    "2814:15:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11414,
                  "src": "2814:15:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "2814:15:32"
              }
            ],
            "name": "checkAndPersistMint",
            "nameLocation": "2746:19:32",
            "overrides": {
              "id": 11608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2805:8:32"
            },
            "parameters": {
              "id": 11607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11606,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2789:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11641,
                  "src": "2766:28:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                    "typeString": "struct DataTypes.Order"
                  },
                  "typeName": {
                    "id": 11605,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11604,
                      "name": "DataTypes.Order",
                      "nameLocations": [
                        "2766:9:32",
                        "2776:5:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54544,
                      "src": "2766:15:32"
                    },
                    "referencedDeclaration": 54544,
                    "src": "2766:15:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$54544_storage_ptr",
                      "typeString": "struct DataTypes.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2765:30:32"
            },
            "returnParameters": {
              "id": 11611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2830:0:32"
            },
            "scope": 11681,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11680,
            "nodeType": "FunctionDefinition",
            "src": "3044:272:32",
            "nodes": [],
            "body": {
              "id": 11679,
              "nodeType": "Block",
              "src": "3139:177:32",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11652,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "3157:6:32",
                      "nodeType": "VariableDeclaration",
                      "scope": 11679,
                      "src": "3149:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11651,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3149:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11656,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11653,
                        "name": "_checks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11393,
                        "src": "3166:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 11654,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3174:6:32",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53591,
                      "src": "3166:14:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 11655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3166:16:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3149:33:32"
                },
                {
                  "body": {
                    "id": 11677,
                    "nodeType": "Block",
                    "src": "3229:81:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11674,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11645,
                              "src": "3293:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                                "typeString": "struct DataTypes.Order memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                                "typeString": "struct DataTypes.Order memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 11670,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11658,
                                      "src": "3267:1:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 11668,
                                      "name": "_checks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11393,
                                      "src": "3256:7:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AddressSet_$53495_storage",
                                        "typeString": "struct EnumerableSet.AddressSet storage ref"
                                      }
                                    },
                                    "id": 11669,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3264:2:32",
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 53618,
                                    "src": "3256:10:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$53495_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$53495_storage_ptr_$",
                                      "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                    }
                                  },
                                  "id": 11671,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3256:13:32",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 11667,
                                "name": "ISafetyCheck",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16795,
                                "src": "3243:12:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISafetyCheck_$16795_$",
                                  "typeString": "type(contract ISafetyCheck)"
                                }
                              },
                              "id": 11672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3243:27:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafetyCheck_$16795",
                                "typeString": "contract ISafetyCheck"
                              }
                            },
                            "id": 11673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:21:32",
                            "memberName": "checkAndPersistRedeem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16787,
                            "src": "3243:49:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$54544_memory_ptr_$returns$__$",
                              "typeString": "function (struct DataTypes.Order memory) external"
                            }
                          },
                          "id": 11675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3243:56:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11676,
                        "nodeType": "ExpressionStatement",
                        "src": "3243:56:32"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11661,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11658,
                      "src": "3212:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11662,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11652,
                      "src": "3216:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3212:10:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11678,
                  "initializationExpression": {
                    "assignments": [
                      11658
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11658,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3205:1:32",
                        "nodeType": "VariableDeclaration",
                        "scope": 11678,
                        "src": "3197:9:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11657,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3197:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11660,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3209:1:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3197:13:32"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3224:3:32",
                      "subExpression": {
                        "id": 11664,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11658,
                        "src": "3224:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11666,
                    "nodeType": "ExpressionStatement",
                    "src": "3224:3:32"
                  },
                  "nodeType": "ForStatement",
                  "src": "3192:118:32"
                }
              ]
            },
            "baseFunctions": [
              16787
            ],
            "documentation": {
              "id": 11642,
              "nodeType": "StructuredDocumentation",
              "src": "3011:28:32",
              "text": "@inheritdoc ISafetyCheck"
            },
            "functionSelector": "a0763820",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11649,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11648,
                  "name": "motherboardOnly",
                  "nameLocations": [
                    "3123:15:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11414,
                  "src": "3123:15:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "3123:15:32"
              }
            ],
            "name": "checkAndPersistRedeem",
            "nameLocation": "3053:21:32",
            "overrides": {
              "id": 11647,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3114:8:32"
            },
            "parameters": {
              "id": 11646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11645,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "3098:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 11680,
                  "src": "3075:28:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$54544_memory_ptr",
                    "typeString": "struct DataTypes.Order"
                  },
                  "typeName": {
                    "id": 11644,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11643,
                      "name": "DataTypes.Order",
                      "nameLocations": [
                        "3075:9:32",
                        "3085:5:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54544,
                      "src": "3075:15:32"
                    },
                    "referencedDeclaration": 54544,
                    "src": "3075:15:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$54544_storage_ptr",
                      "typeString": "struct DataTypes.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3074:30:32"
            },
            "returnParameters": {
              "id": 11650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3139:0:32"
            },
            "scope": 11681,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11367,
              "name": "ISafetyCheck",
              "nameLocations": [
                "549:12:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16795,
              "src": "549:12:32"
            },
            "id": 11368,
            "nodeType": "InheritanceSpecifier",
            "src": "549:12:32"
          },
          {
            "baseName": {
              "id": 11369,
              "name": "Governable",
              "nameLocations": [
                "563:10:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5497,
              "src": "563:10:32"
            },
            "id": 11370,
            "nodeType": "InheritanceSpecifier",
            "src": "563:10:32"
          }
        ],
        "canonicalName": "RootSafetyCheck",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11681,
          5497,
          5591,
          16215,
          16795
        ],
        "name": "RootSafetyCheck",
        "nameLocation": "530:15:32",
        "scope": 11682,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 32
}