{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxAllowedVaultDeviation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stablecoinMaxDeviation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minTokenPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernorChangeRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernorChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "STABLECOIN_IDEAL_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "buildMetaData",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct DataTypes.VaultMetadata[]",
              "name": "vaultMetadata",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "allVaultsWithinEpsilon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsAllVaultsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allVaultsUsingLargeEnoughPrices",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Metadata",
          "name": "metaData",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "prices",
          "type": "uint256[]"
        }
      ],
      "name": "calculateWeightsAndTotal",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "checkAndPersistMint",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "checkAndPersistRedeem",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "isMintSafe",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint8",
                      "name": "decimals",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "underlying",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "initialPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "initialWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowMemory",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shortFlowThreshold",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PersistedVaultMetadata",
                      "name": "persistedMetadata",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "reserveBalance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct DataTypes.VaultInfo",
                  "name": "vaultInfo",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.VaultWithAmount[]",
              "name": "vaultsWithAmount",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "isRedeemSafe",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxAllowedVaultDeviation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct DataTypes.VaultMetadata[]",
              "name": "vaultMetadata",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "allVaultsWithinEpsilon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsAllVaultsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allVaultsUsingLargeEnoughPrices",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Metadata",
          "name": "metaData",
          "type": "tuple"
        }
      ],
      "name": "safeToExecuteOutsideEpsilon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minTokenPrice",
          "type": "uint256"
        }
      ],
      "name": "setMinTokenPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stablecoinMaxDeviation",
          "type": "uint256"
        }
      ],
      "name": "setStablecoinMaxDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxAllowedVaultDeviation",
          "type": "uint256"
        }
      ],
      "name": "setVaultMaxDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoinMaxDeviation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct DataTypes.VaultMetadata[]",
              "name": "vaultMetadata",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "allVaultsWithinEpsilon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsAllVaultsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allVaultsUsingLargeEnoughPrices",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Metadata",
          "name": "metaData",
          "type": "tuple"
        }
      ],
      "name": "updateMetaDataWithEpsilonStatus",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct DataTypes.VaultMetadata[]",
              "name": "vaultMetadata",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "allVaultsWithinEpsilon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsAllVaultsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allVaultsUsingLargeEnoughPrices",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Metadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct DataTypes.VaultMetadata[]",
              "name": "vaultMetadata",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "allVaultsWithinEpsilon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsAllVaultsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allVaultsUsingLargeEnoughPrices",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Metadata",
          "name": "metaData",
          "type": "tuple"
        }
      ],
      "name": "updateMetadataWithPriceSafety",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct DataTypes.VaultMetadata[]",
              "name": "vaultMetadata",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "allVaultsWithinEpsilon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsAllVaultsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allVaultsUsingLargeEnoughPrices",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Metadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "idealWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "resultingWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "atLeastOnePriceLargeEnough",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "vaultWithinEpsilon",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isStable",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.PricedToken[]",
              "name": "pricedTokens",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DataTypes.VaultMetadata",
          "name": "vaultData",
          "type": "tuple"
        }
      ],
      "name": "updateVaultWithPriceSafety",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "idealWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "resultingWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "atLeastOnePriceLargeEnough",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "vaultWithinEpsilon",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isStable",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataTypes.PricedToken[]",
              "name": "pricedTokens",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DataTypes.VaultMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct DataTypes.VaultMetadata[]",
              "name": "vaultMetadata",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "allVaultsWithinEpsilon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allStablecoinsAllVaultsOnPeg",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "allVaultsUsingLargeEnoughPrices",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "mint",
              "type": "bool"
            }
          ],
          "internalType": "struct DataTypes.Metadata",
          "name": "metaData",
          "type": "tuple"
        }
      ],
      "name": "vaultWeightWithOffPegFalls",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "286:1956:47:-:0;;;353:333;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;316:8:10;:20;;-1:-1:-1;;;;;;316:20:10;-1:-1:-1;;;;;316:20:10;;;;;;;351:38;;;705:34:166;;;770:2;755:18;;748:43;;;;316:20:10;;579:25:47;;618:23;;655:14;;316:20:10;;351:38;;640:18:166;351:38:10;;;;;;;-1:-1:-1;1218:24:31::1;:52:::0;;;;1280:22:::1;:48:::0;1338:13:::1;:30:::0;-1:-1:-1;286:1956:47;;-1:-1:-1;;;;286:1956:47;14:474:166;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;231:16;;-1:-1:-1;;;;;276:31:166;;266:42;;256:70;;322:1;319;312:12;256:70;390:2;375:18;;369:25;434:2;419:18;;413:25;478:2;463:18;;;457:25;345:5;;369:25;;-1:-1:-1;457:25:166;;-1:-1:-1;14:474:166;-1:-1:-1;;;14:474:166:o;493:304::-;286:1956:47;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "286:1956:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:32:11;;;;;-1:-1:-1;;;;;325:32:11;;;;;;-1:-1:-1;;;;;178:32:166;;;160:51;;148:2;133:18;325:32:11;;;;;;;;1363:242:47;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;833:37:31:-;;;;;;;;;6692:25:166;;;6680:2;6665:18;833:37:31;6546:177:166;846:301:11;;;:::i;:::-;;876:28:31;;;;;;12002:670;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1852:190:47:-;;;;;;:::i;:::-;;:::i;:::-;;;12592:14:166;;12585:22;12567:41;;12555:2;12540:18;1852:190:47;12427:187:166;965:53:31;;1014:4;965:53;;12923:177;;;;;;:::i;:::-;;:::i;1545:121::-;;;;;;:::i;:::-;;:::i;1381:158::-;;;;;;:::i;:::-;;:::i;788:39::-;;;;;;1611:235:47;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;927:185::-;;;;;;:::i;:::-;;:::i;1672:157:31:-;;;;;;:::i;:::-;;:::i;12711:173::-;;;;;;:::i;:::-;;:::i;692:229:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1118:239::-;;;;;;:::i;:::-;;:::i;2048:192::-;;;;;;:::i;:::-;;:::i;11222:741:31:-;;;;;;:::i;:::-;;:::i;363:39:11:-;;;;;-1:-1:-1;;;;;363:39:11;;;555:253;;;;;;:::i;:::-;;:::i;1363:242:47:-;1488:30;;:::i;:::-;1534:38;1562:9;1534:27;:38::i;:::-;-1:-1:-1;1589:9:47;1363:242::o;846:301:11:-;924:15;;941:21;;;;;;;;;;;;-1:-1:-1;;;941:21:11;;;;;-1:-1:-1;;;;;924:15:11;910:10;:29;902:61;;;;-1:-1:-1;;;902:61:11;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;973:23:11;999:8;;;1028:15;;-1:-1:-1;;;;;;1017:26:11;;;-1:-1:-1;;;;;1028:15:11;;;1017:26;;;;;;;1053:28;;;1096:44;;;999:8;;;;16556:34:166;;;1129:10:11;16621:2:166;16606:18;;16599:43;999:8:11;1096:44;;16491:18:166;1096:44:11;;;;;;;;892:255;846:301::o;12002:670:31:-;12075:13;12105:23;12122:5;12105:16;:23::i;:::-;12100:110;;-1:-1:-1;;12151:48:31;;;;;;;;;;;;-1:-1:-1;;;12151:48:31;;;;;12002:670::o;12100:110::-;12220:34;12257:21;12272:5;12257:14;:21::i;:::-;12220:58;;12289:40;12320:8;12289:30;:40::i;:::-;12339:42;12372:8;12339:32;:42::i;:::-;12397:8;:40;;;12392:108;;-1:-1:-1;;12460:29:31;;;;;;;;;;;;-1:-1:-1;;;12460:29:31;;;;;12002:670;-1:-1:-1;12002:670:31:o;12392:108::-;12514:8;:31;;;:73;;;;12549:38;12578:8;12549:28;:38::i;:::-;12510:113;;;-1:-1:-1;;12603:9:31;;;;;;;;;-1:-1:-1;12603:9:31;;;12002:670;-1:-1:-1;12002:670:31:o;12510:113::-;-1:-1:-1;;12640:25:31;;;;;;;;;;;;-1:-1:-1;;;12640:25:31;;;;;12002:670;-1:-1:-1;12002:670:31:o;1852:190:47:-;1971:4;1998:37;2026:8;1998:27;:37::i;:::-;1991:44;1852:190;-1:-1:-1;;1852:190:47:o;12923:177:31:-;13008:17;13028:19;13041:5;13028:12;:19::i;:::-;13008:39;;13071:3;13065:17;13086:1;13065:22;13089:3;13057:36;;;;;-1:-1:-1;;;13057:36:31;;;;;;;;:::i;:::-;;12998:102;12923:177;:::o;1545:121::-;467:8:11;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;1629:13:31::1;:30:::0;1545:121::o;1381:158::-;467:8:11;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;1480:24:31::1;:52:::0;1381:158::o;1611:235:47:-;1733:25;;:::i;:::-;1774:40;1805:8;1774:30;:40::i;927:185::-;1027:34;;:::i;:::-;1084:21;1099:5;1084:14;:21::i;1672:157:31:-;467:8:11;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;1774:22:31::1;:48:::0;1672:157::o;12711:173::-;12794:17;12814;12825:5;12814:10;:17::i;692:229:47:-;824:16;842:7;872:42;898:7;907:6;872:25;:42::i;:::-;865:49;;;;692:229;;;;;;:::o;1118:239::-;1242:25;;:::i;:::-;1283:42;1316:8;1283:32;:42::i;2048:192::-;2168:4;2195:38;2224:8;2195:28;:38::i;11222:741:31:-;11293:13;11318:34;11355:21;11370:5;11355:14;:21::i;:::-;11318:58;;11387:40;11418:8;11387:30;:40::i;:::-;11437:42;11470:8;11437:32;:42::i;:::-;11495:8;:40;;;11490:108;;-1:-1:-1;;11558:29:31;;;;;;;;;;;;-1:-1:-1;;;11558:29:31;;;;;11222:741;-1:-1:-1;11222:741:31:o;11490:108::-;11608:20;11631:8;:37;;;:90;;;;11684:37;11712:8;11684:27;:37::i;:::-;11608:113;;11731:16;11750:8;:31;;;:85;;;;11797:38;11826:8;11797:28;:38::i;:::-;11731:104;;11850:15;:30;;;;;11869:11;11850:30;11846:70;;;-1:-1:-1;;11896:9:31;;;;;;;;;-1:-1:-1;11896:9:31;;;11222:741;-1:-1:-1;;;11222:741:31:o;11846:70::-;-1:-1:-1;;11933:23:31;;;;;;;;;;;;-1:-1:-1;;;11933:23:31;;;;;11222:741;-1:-1:-1;;;11222:741:31:o;555:253:11:-;467:8;;477:21;;;;;;;;;;;;-1:-1:-1;;;477:21:11;;;;;-1:-1:-1;;;;;467:8:11;453:10;:22;445:54;;;;-1:-1:-1;;;445:54:11;;;;;;;;:::i;:::-;-1:-1:-1;687:23:11::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;687:23:11::1;::::0;::::1;::::0;-1:-1:-1;;;;;651:34:11;::::1;643:68;;;;-1:-1:-1::0;;;643:68:11::1;;;;;;;;:::i;:::-;-1:-1:-1::0;721:15:11::1;:29:::0;;-1:-1:-1;;;;;;721:29:11::1;-1:-1:-1::0;;;;;721:29:11;::::1;::::0;;::::1;::::0;;;765:36:::1;::::0;160:51:166;;;765:36:11::1;::::0;148:2:166;133:18;765:36:11::1;14:203:166::0;7852:852:31;8015:4;7979:33;;;:40;;8029;;;:48;;;8087:611;8111:13;:26;;;:33;8107:1;:37;8087:611;;;8165:18;8186:13;:26;;;8213:1;8186:29;;;;;;;;:::i;:::-;;;;;;;:35;;;8165:56;;8235:13;8251;:26;;;8278:1;8251:29;;;;;;;;:::i;:::-;;;;;;;:38;;;8235:54;;8308:8;8304:384;;;8379:4;8336:40;;;:47;8449:22;;8405:41;:10;1014:4;8405:17;:41::i;:::-;:66;8401:154;;;8531:5;8495:33;;;:41;8401:154;8304:384;;;8593:13;;8579:10;:27;8575:113;;8669:4;8626:40;;;:47;8575:113;8151:547;;8146:3;;;;;:::i;:::-;;;;8087:611;;;;7852:852;:::o;3883:389::-;3962:4;;3978:266;4002:22;;:29;3998:33;;3978:266;;;4142:22;;:25;;4165:1;;4142:25;;;;;;:::i;:::-;;;;;;;:32;;;4073:5;:22;;;4096:1;4073:25;;;;;;;;:::i;:::-;;;;;;;:35;;;:50;;;:101;4052:182;;;-1:-1:-1;4214:5:31;;3883:389;-1:-1:-1;;3883:389:31:o;4052:182::-;4033:3;;;;:::i;:::-;;;;3978:266;;;-1:-1:-1;4261:4:31;;3883:389;-1:-1:-1;;3883:389:31:o;4505:1885::-;4606:34;;:::i;:::-;4710:22;;4759:10;;;;4743:26;;:13;;;:26;4834:22;;:29;-1:-1:-1;;;;;4804:60:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;4779:85:31;;4925:23;;4779:22;;-1:-1:-1;;;;;4911:38:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4911:38:31;;4875:74;;4959:23;4999:16;:23;-1:-1:-1;;;;;4985:38:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4985:38:31;;4959:64;;5039:9;5034:1090;5058:16;:23;5054:1;:27;5034:1090;;;5106:5;:10;;;5102:358;;;5245:16;5262:1;5245:19;;;;;;;;:::i;:::-;;;;;;;:26;;;5178:16;5195:1;5178:19;;;;;;;;:::i;:::-;;;;;;;:29;;;:44;;;:93;;;;:::i;:::-;5136:16;5153:1;5136:19;;;;;;;;:::i;:::-;;;;;;:135;;;;;5102:358;;;5419:16;5436:1;5419:19;;;;;;;;:::i;:::-;;;;;;;:26;;;5352:16;5369:1;5352:19;;;;;;;;:::i;:::-;;;;;;;:29;;;:44;;;:93;;;;:::i;:::-;5310:16;5327:1;5310:19;;;;;;;;:::i;:::-;;;;;;:135;;;;;5102:358;5495:99;5542:16;5559:1;5542:19;;;;;;;;:::i;:::-;;;;;;;:29;;;:38;;;5495:16;5512:1;5495:19;;;;;;;;:::i;:::-;;;;;;;:29;;:99;;;;:::i;:::-;5473:16;5490:1;5473:19;;;;;;;;:::i;:::-;;;;;;:121;;;;;5643:16;5660:1;5643:19;;;;;;;;:::i;:::-;;;;;;;;;;;:29;:35;5609:22;;:25;;5632:1;;5609:25;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5609:69:31;;;;;5732:19;;:16;;5749:1;;5732:19;;;;;;:::i;:::-;;;;;;;:29;;;:41;;;5692:8;:22;;;5715:1;5692:25;;;;;;;;:::i;:::-;;;;;;;:37;;:81;;;;;5829:16;5846:1;5829:19;;;;;;;;:::i;:::-;;;;;;;:29;;;:43;;;5787:8;:22;;;5810:1;5787:25;;;;;;;;:::i;:::-;;;;;;;:39;;:85;;;;;5920:16;5937:1;5920:19;;;;;;;;:::i;:::-;;;;;;;:29;;;:35;;;5886:8;:22;;;5909:1;5886:25;;;;;;;;:::i;:::-;;;;;;;:31;;:69;;;;;6010:16;6027:1;6010:19;;;;;;;;:::i;:::-;;;;;;;:29;;;:42;;;5969:8;:22;;;5992:1;5969:25;;;;;;;;:::i;:::-;;;;;;;:38;;:83;;;;6078:16;6095:1;6078:19;;;;;;;;:::i;:::-;;;;;;;:29;;;:35;;;6066:6;6073:1;6066:9;;;;;;;;:::i;:::-;;;;;;;;;;:47;5083:3;;;;:::i;:::-;;;;5034:1090;;;;6135:33;6174:51;6200:16;6218:6;6174:25;:51::i;:::-;6134:91;;;6241:9;6236:148;6260:22;;:29;6256:33;;6236:148;;;6354:16;6371:1;6354:19;;;;;;;;:::i;:::-;;;;;;;6310:8;:22;;;6333:1;6310:25;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;:63;6291:3;;;;:::i;:::-;;;;6236:148;;;;4646:1744;;;;4505:1885;;;:::o;8985:686::-;9125:4;9085:37;;;:44;;;9139:40;;;:47;9085:44;9196:469;9220:22;;:29;9216:33;;9196:469;;;9270:40;9313:8;:22;;;9336:1;9313:25;;;;;;;;:::i;:::-;;;;;;;9270:68;;9352:38;9380:9;9352:27;:38::i;:::-;9409:9;:29;;;9404:114;;9498:5;9458:37;;;:45;9404:114;9536:9;:36;;;9531:124;;9635:5;9592:40;;;:48;9531:124;-1:-1:-1;9251:3:31;;;;:::i;:::-;;;;9196:469;;6670:705;6806:4;6772:31;;;:38;;6821:548;6845:22;;:29;6841:33;;6821:548;;;6895:40;6938:8;:22;;;6961:1;6938:25;;;;;;;;:::i;:::-;;;;;;;6895:68;;6977:21;7001:53;7029:24;;7001:9;:21;;;:27;;:53;;;;:::i;:::-;6977:77;;7068:18;7164:13;7089:55;7118:9;:25;;;7089:9;:21;;;:28;;:55;;;;:::i;:::-;:88;;7068:109;;7239:13;7192:8;:22;;;7215:1;7192:25;;;;;;;;:::i;:::-;;;;;;;;;;;:60;;;:44;;;;:60;7272:13;7267:92;;7339:5;7305:31;;;:39;7267:92;6881:488;;;6876:3;;;;;:::i;:::-;;;;6821:548;;10122:1061;10243:4;10518:9;10513:642;10533:22;;:29;10529:33;;10513:642;;;10583:44;10630:8;:22;;;10653:1;10630:25;;;;;;;;:::i;:::-;;;;;;;10583:72;;10674:13;:32;;;10670:79;;;10726:8;;;10670:79;10763:32;10798:93;10852:13;:25;;;10798:13;:29;;;:36;;:93;;;;:::i;:::-;10763:128;;10905:30;10938:91;10990:13;:25;;;10938:13;:27;;;:34;;:91;;;;:::i;:::-;10905:124;;11076:22;11048:24;:50;11044:101;;-1:-1:-1;11125:5:31;;10122:1061;-1:-1:-1;;;;;10122:1061:31:o;11044:101::-;10569:586;;;10513:642;10564:3;;;;:::i;:::-;;;;10513:642;;3363:514;3483:4;3508:9;3503:346;3523:22;;:29;3519:33;;3503:346;;;3573:40;3616:8;:22;;;3639:1;3616:25;;;;;;;;:::i;:::-;;;;;;;3573:68;;3678:9;:29;;;3677:30;:102;;;;;3756:9;:23;;;3727:9;:25;;;:52;;3677:102;3656:183;;;-1:-1:-1;3819:5:31;;3363:514;-1:-1:-1;;;3363:514:31:o;3656:183::-;-1:-1:-1;3554:3:31;;;;:::i;:::-;;;;3503:346;;2212:673;2345:16;2363:7;2386:24;2427:6;:13;-1:-1:-1;;;;;2413:28:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2413:28:31;;2386:55;;2452:13;2484:9;2479:155;2503:7;:14;2499:1;:18;2479:155;;;2538:19;2560:29;2579:6;2586:1;2579:9;;;;;;;;:::i;:::-;;;;;;;2560:7;2568:1;2560:10;;;;;;;;:::i;:::-;;;;;;;:18;;:29;;;;:::i;:::-;2538:51;-1:-1:-1;2603:20:31;2538:51;2603:20;;:::i;:::-;;;2524:110;2519:3;;;;;:::i;:::-;;;;2479:155;;;;2648:5;2657:1;2648:10;2644:64;;2682:7;;-1:-1:-1;2691:5:31;-1:-1:-1;2674:23:31;;2644:64;2723:9;2718:127;2742:7;:14;2738:1;:18;2718:127;;;2790:44;2828:5;2790:29;2809:6;2816:1;2809:9;;;;;;;;:::i;:::-;;;;;;;2790:7;2798:1;2790:10;;;;;;;;:::i;:29::-;:37;;:44::i;:::-;2777:7;2785:1;2777:10;;;;;;;;:::i;:::-;;;;;;;;;;:57;2758:3;;;;:::i;:::-;;;;2718:127;;;-1:-1:-1;2863:7:31;;;;-1:-1:-1;2212:673:31;-1:-1:-1;;;2212:673:31:o;628:116:158:-;689:7;720:1;715;:6;;:22;;732:5;736:1;732;:5;:::i;:::-;715:22;;;724:5;728:1;724;:5;:::i;:::-;708:29;628:116;-1:-1:-1;;;628:116:158:o;291:328:154:-;364:7;-1:-1:-1;;387:20:154;;;;383:230;;-1:-1:-1;430:5:154;423:12;;383:230;261:2;456:19;;;;452:161;;;511:19;261:2;511:8;:19;:::i;:::-;506:25;;:2;:25;:::i;:::-;498:33;;:5;:33;:::i;:::-;491:40;;;;452:161;582:19;593:8;261:2;582:19;:::i;:::-;577:25;;:2;:25;:::i;:::-;569:33;;:5;:33;:::i;898:550:158:-;958:7;;995:5;999:1;995;:5;:::i;:::-;977:23;;1015:7;1026:1;1015:12;1011:431;;1050:1;1043:8;;;;;1011:431;364:4;1408:11;1418:1;1408:7;:11;:::i;:::-;1407:19;;;;:::i;:::-;1406:25;;1430:1;1406:25;:::i;:::-;1399:32;;;;;750:142;812:7;;849:5;853:1;849;:5;:::i;:::-;831:23;-1:-1:-1;872:13:158;364:4;831:23;872:13;:::i;:::-;865:20;750:142;-1:-1:-1;;;;750:142:158:o;1662:273::-;1759:20;;;;;;;;;;;;-1:-1:-1;;;1759:20:158;;;;1724:7;;1751:6;1743:37;;;;-1:-1:-1;;;1743:37:158;;;;;;;;:::i;:::-;;1795:1;1800;1795:6;1791:138;;-1:-1:-1;1824:1:158;1817:8;;1791:138;1856:17;1876:7;364:4;1876:1;:7;:::i;:::-;1856:27;-1:-1:-1;1905:13:158;1917:1;1856:27;1905:13;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;222:127:166:-;283:10;278:3;274:20;271:1;264:31;314:4;311:1;304:15;338:4;335:1;328:15;354:253;426:2;420:9;468:4;456:17;;-1:-1:-1;;;;;488:34:166;;524:22;;;485:62;482:88;;;550:18;;:::i;:::-;586:2;579:22;354:253;:::o;612:255::-;684:2;678:9;726:6;714:19;;-1:-1:-1;;;;;748:34:166;;784:22;;;745:62;742:88;;;810:18;;:::i;872:257::-;944:4;938:11;;;976:17;;-1:-1:-1;;;;;1008:34:166;;1044:22;;;1005:62;1002:88;;;1070:18;;:::i;1134:253::-;1206:2;1200:9;1248:4;1236:17;;-1:-1:-1;;;;;1268:34:166;;1304:22;;;1265:62;1262:88;;;1330:18;;:::i;1392:275::-;1463:2;1457:9;1528:2;1509:13;;-1:-1:-1;;1505:27:166;1493:40;;-1:-1:-1;;;;;1548:34:166;;1584:22;;;1545:62;1542:88;;;1610:18;;:::i;:::-;1646:2;1639:22;1392:275;;-1:-1:-1;1392:275:166:o;1672:173::-;1740:20;;-1:-1:-1;;;;;1789:31:166;;1779:42;;1769:70;;1835:1;1832;1825:12;1769:70;1672:173;;;:::o;1850:160::-;1915:20;;1971:13;;1964:21;1954:32;;1944:60;;2000:1;1997;1990:12;2015:194;2086:4;-1:-1:-1;;;;;2111:6:166;2108:30;2105:56;;;2141:18;;:::i;:::-;-1:-1:-1;2186:1:166;2182:14;2198:4;2178:25;;2015:194::o;2214:1074::-;2279:5;2332:3;2325:4;2317:6;2313:17;2309:27;2299:55;;2350:1;2347;2340:12;2299:55;2386:6;2373:20;2412:4;2436:71;2452:54;2503:2;2452:54;:::i;:::-;2436:71;:::i;:::-;2541:15;;;2603:4;2646:11;;;2634:24;;2630:33;;;2572:12;;;;2529:3;2675:15;;;2672:35;;;2703:1;2700;2693:12;2672:35;2739:2;2731:6;2727:15;2751:508;2767:6;2762:3;2759:15;2751:508;;;2843:2;2837:3;2832;2828:13;2824:22;2821:112;;;2887:1;2916:2;2912;2905:14;2821:112;2959:22;;:::i;:::-;3008:23;3027:3;3008:23;:::i;:::-;3001:5;2994:38;3068:29;3093:2;3088:3;3084:12;3068:29;:::i;:::-;3052:14;;;3045:53;3121:2;3172:12;;;3159:26;3143:14;;;3136:50;3199:18;;3237:12;;;;2784;;2751:508;;;-1:-1:-1;3277:5:166;;2214:1074;-1:-1:-1;;;;;;;2214:1074:166:o;3293:940::-;3353:5;3401:6;3389:9;3384:3;3380:19;3376:32;3373:52;;;3421:1;3418;3411:12;3373:52;3443:22;;:::i;:::-;3434:31;;3488:29;3507:9;3488:29;:::i;:::-;3481:5;3474:44;3578:2;3567:9;3563:18;3550:32;3545:2;3538:5;3534:14;3527:56;3643:2;3632:9;3628:18;3615:32;3610:2;3603:5;3599:14;3592:56;3708:2;3697:9;3693:18;3680:32;3675:2;3668:5;3664:14;3657:56;3774:3;3763:9;3759:19;3746:33;3740:3;3733:5;3729:15;3722:58;3813:36;3844:3;3833:9;3829:19;3813:36;:::i;:::-;3807:3;3800:5;3796:15;3789:61;3883:36;3914:3;3903:9;3899:19;3883:36;:::i;:::-;3877:3;3870:5;3866:15;3859:61;3953:36;3984:3;3973:9;3969:19;3953:36;:::i;:::-;3947:3;3940:5;3936:15;3929:61;4009:3;4063:2;4052:9;4048:18;4035:32;-1:-1:-1;;;;;4082:6:166;4079:30;4076:50;;;4122:1;4119;4112:12;4076:50;4158:68;4222:3;4213:6;4202:9;4198:22;4158:68;:::i;:::-;4153:2;4146:5;4142:14;4135:92;;;3293:940;;;;:::o;4238:358::-;4329:6;4382:2;4370:9;4361:7;4357:23;4353:32;4350:52;;;4398:1;4395;4388:12;4350:52;4438:9;4425:23;-1:-1:-1;;;;;4463:6:166;4460:30;4457:50;;;4503:1;4500;4493:12;4457:50;4526:64;4582:7;4573:6;4562:9;4558:22;4526:64;:::i;4697:655::-;4761:3;4799:5;4793:12;4826:6;4821:3;4814:19;4852:4;4881:2;4876:3;4872:12;4865:19;;4918:2;4911:5;4907:14;4939:1;4949:378;4963:6;4960:1;4957:13;4949:378;;;5022:13;;5064:9;;-1:-1:-1;;;;;5060:35:166;5048:48;;5150:11;;;5144:18;5137:26;5130:34;5116:12;;;5109:56;5188:4;5232:11;;;5226:18;5212:12;;;5205:40;5274:4;5265:14;;;;5302:15;;;;5092:1;4978:9;4949:378;;;-1:-1:-1;5343:3:166;;4697:655;-1:-1:-1;;;;;4697:655:166:o;5357:901::-;5413:3;5441:6;5503:1;5499;5494:3;5490:11;5486:19;5478:5;5472:12;5468:38;5463:3;5456:51;5556:4;5549:5;5545:16;5539:23;5532:4;5527:3;5523:14;5516:47;5612:4;5605:5;5601:16;5595:23;5588:4;5583:3;5579:14;5572:47;5668:4;5661:5;5657:16;5651:23;5644:4;5639:3;5635:14;5628:47;5724:4;5717:5;5713:16;5707:23;5700:4;5695:3;5691:14;5684:47;5777:4;5770:5;5766:16;5760:23;5792:45;5831:4;5826:3;5822:14;5808:12;4671:13;4664:21;4652:34;;4601:91;5792:45;;5885:4;5878:5;5874:16;5868:23;5900:47;5941:4;5936:3;5932:14;5916;4671:13;4664:21;4652:34;;4601:91;5900:47;;5995:4;5988:5;5984:16;5978:23;6010:47;6051:4;6046:3;6042:14;6026;4671:13;4664:21;4652:34;;4601:91;6010:47;;6076:6;6130:2;6123:5;6119:14;6113:21;6164:2;6159;6154:3;6150:12;6143:24;6183:69;6248:2;6243:3;6239:12;6223:14;6183:69;:::i;:::-;6176:76;5357:901;-1:-1:-1;;;;;;5357:901:166:o;6263:278::-;6456:2;6445:9;6438:21;6419:4;6476:59;6531:2;6520:9;6516:18;6508:6;6476:59;:::i;6728:156::-;6794:20;;6854:4;6843:16;;6833:27;;6823:55;;6874:1;6871;6864:12;6889:619;6958:5;7006:4;6994:9;6989:3;6985:19;6981:30;6978:50;;;7024:1;7021;7014:12;6978:50;7057:2;7051:9;7099:4;7091:6;7087:17;7170:6;7158:10;7155:22;-1:-1:-1;;;;;7122:10:166;7119:34;7116:62;7113:88;;;7181:18;;:::i;:::-;7221:10;7217:2;7210:22;;7250:6;7241:15;;7293:9;7280:23;7272:6;7265:39;7365:2;7354:9;7350:18;7337:32;7332:2;7324:6;7320:15;7313:57;7431:2;7420:9;7416:18;7403:32;7398:2;7390:6;7386:15;7379:57;7497:2;7486:9;7482:18;7469:32;7464:2;7456:6;7452:15;7445:57;;6889:619;;;;:::o;7513:2704::-;7596:6;7649:2;7637:9;7628:7;7624:23;7620:32;7617:52;;;7665:1;7662;7655:12;7617:52;-1:-1:-1;;;;;7746:2:166;7734:9;7721:23;7718:31;7715:51;;;7762:1;7759;7752:12;7715:51;7837:4;7823:9;7810:23;7799:9;7795:39;7786:7;7782:53;7778:64;7775:84;;;7855:1;7852;7845:12;7775:84;7881:22;;:::i;:::-;7973:2;7959:9;7946:23;7935:9;7931:39;7918:53;7915:61;7912:81;;;7989:1;7986;7979:12;7912:81;8085:23;;8070:39;;8057:53;;8012:99;8142:4;8134:13;;8130:27;-1:-1:-1;8120:55:166;;8171:1;8168;8161:12;8120:55;8195:85;8211:68;8275:2;8262:16;8211:68;:::i;8195:85::-;8326:16;;8314:29;;;8368:2;8359:12;;;;8302:3;8402:1;8398:24;8390:33;;8386:42;8383:55;-1:-1:-1;8380:75:166;;;8451:1;8448;8441:12;8380:75;8483:2;8479;8475:11;8495:1565;8558:2;8551;8538:16;8535:1;8531:24;8527:2;8523:33;8519:42;8514:3;8511:51;8495:1565;;;8642:2;8636:3;8623:17;8620:25;8617:45;;;8658:1;8655;8648:12;8617:45;8693:17;;8685:26;;-1:-1:-1;;8788:4:166;8765:16;;;8761:25;;8757:36;8754:56;;;8806:1;8803;8796:12;8754:56;8838:22;;:::i;:::-;8906:2;8900;8896;8892:11;8879:25;8876:33;8873:53;;;8922:1;8919;8912:12;8873:53;8978:2;8974;8970:11;8957:25;8953:2;8949:34;9030:6;9025:2;9020;9011:7;9007:16;9003:25;8999:38;8996:58;;;9050:1;9047;9040:12;8996:58;9082:22;;:::i;:::-;9067:37;;9133:31;9160:2;9156;9152:11;9133:31;:::i;:::-;9124:7;9117:48;9203:31;9228:4;9224:2;9220:13;9203:31;:::i;:::-;9198:2;9189:7;9185:16;9178:57;9275:31;9302:2;9298;9294:11;9275:31;:::i;:::-;9268:4;9259:7;9255:18;9248:59;9366:3;9362:2;9358:12;9345:26;9340:2;9331:7;9327:16;9320:52;9411:63;9466:7;9460:3;9456:2;9452:12;9411:63;:::i;:::-;9405:3;9396:7;9392:17;9385:90;9535:3;9531:2;9527:12;9514:26;9508:3;9499:7;9495:17;9488:53;9602:3;9598:2;9594:12;9581:26;9574:4;9565:7;9561:18;9554:54;9669:3;9665:2;9661:12;9648:26;9641:4;9632:7;9628:18;9621:54;9725:2;9715:6;9711:2;9707:15;9694:29;9691:37;9688:57;;;9741:1;9738;9731:12;9688:57;9784:97;9873:7;9868:2;9857:6;9853:2;9849:15;9836:29;9832:2;9828:38;9824:47;9784:97;:::i;:::-;9778:3;9765:17;;9758:124;-1:-1:-1;9895:24:166;;;9978:4;9970:13;;;;9957:27;9952:2;9939:16;;;9932:53;;;;9998:20;;;10038:12;;;;8580;8495:1565;;;-1:-1:-1;10069:20:166;;-1:-1:-1;10121:65:166;;-1:-1:-1;10156:23:166;;10141:39;;10182:2;10137:48;10121:65;:::i;:::-;10116:2;10105:14;;10098:89;10109:5;7513:2704;-1:-1:-1;;;;7513:2704:166:o;10222:548::-;10334:4;10363:2;10392;10381:9;10374:21;10424:6;10418:13;10467:6;10462:2;10451:9;10447:18;10440:34;10492:1;10502:140;10516:6;10513:1;10510:13;10502:140;;;10611:14;;;10607:23;;10601:30;10577:17;;;10596:2;10573:26;10566:66;10531:10;;10502:140;;;10506:3;10691:1;10686:2;10677:6;10666:9;10662:22;10658:31;10651:42;10761:2;10754;10750:7;10745:2;10737:6;10733:15;10729:29;10718:9;10714:45;10710:54;10702:62;;;;10222:548;;;;:::o;10775:1647::-;10861:6;10892:2;10935;10923:9;10914:7;10910:23;10906:32;10903:52;;;10951:1;10948;10941:12;10903:52;10991:9;10978:23;-1:-1:-1;;;;;11061:2:166;11053:6;11050:14;11047:34;;;11077:1;11074;11067:12;11047:34;11100:22;;;;11156:4;11138:16;;;11134:27;11131:47;;;11174:1;11171;11164:12;11131:47;11200:22;;:::i;:::-;11260:2;11247:16;11288:2;11278:8;11275:16;11272:36;;;11304:1;11301;11294:12;11272:36;11327:17;;11375:4;11367:13;;11363:27;-1:-1:-1;11353:55:166;;11404:1;11401;11394:12;11353:55;11440:2;11427:16;11463:71;11479:54;11530:2;11479:54;:::i;11463:71::-;11568:15;;;11650:1;11646:10;;;;11638:19;;11634:28;;;11599:12;;;;11674:19;;;11671:39;;;11706:1;11703;11696:12;11671:39;11738:2;11734;11730:11;11750:367;11766:6;11761:3;11758:15;11750:367;;;11852:3;11839:17;11888:2;11875:11;11872:19;11869:109;;;11932:1;11961:2;11957;11950:14;11869:109;12003:71;12066:7;12061:2;12047:11;12043:2;12039:20;12035:29;12003:71;:::i;:::-;11991:84;;-1:-1:-1;12095:12:166;;;;11783;;11750:367;;;-1:-1:-1;12126:20:166;;-1:-1:-1;12178:28:166;;-1:-1:-1;;12194:11:166;;;12178:28;:::i;:::-;12173:2;12166:5;12162:14;12155:52;12239:28;12263:2;12259;12255:11;12239:28;:::i;:::-;12234:2;12227:5;12223:14;12216:52;12300:28;12324:2;12320;12316:11;12300:28;:::i;:::-;12295:2;12288:5;12284:14;12277:52;12362:29;12386:3;12382:2;12378:12;12362:29;:::i;:::-;12356:3;12345:15;;12338:54;12349:5;10775:1647;-1:-1:-1;;;;;;10775:1647:166:o;12619:180::-;12678:6;12731:2;12719:9;12710:7;12706:23;12702:32;12699:52;;;12747:1;12744;12737:12;12699:52;-1:-1:-1;12770:23:166;;12619:180;-1:-1:-1;12619:180:166:o;12804:1356::-;12950:4;12979:2;13008;12997:9;12990:21;13049:3;13038:9;13034:19;13088:6;13082:13;13131:4;13126:2;13115:9;13111:18;13104:32;13156:6;13191:12;13185:19;13228:6;13220;13213:22;13266:3;13255:9;13251:19;13244:26;;13329:3;13319:6;13316:1;13312:14;13301:9;13297:30;13293:40;13279:54;;13374:2;13360:12;13356:21;13342:35;;13395:1;13405:270;13419:6;13416:1;13413:13;13405:270;;;13512:3;13508:8;13496:9;13488:6;13484:22;13480:37;13475:3;13468:50;13541:54;13588:6;13579;13573:13;13541:54;:::i;:::-;13531:64;-1:-1:-1;13618:15:166;;;;13653:12;;;;13441:1;13434:9;13405:270;;;-1:-1:-1;;;;13712:15:166;;;13706:22;4671:13;4664:21;13784:2;13769:18;;;4652:34;;;;13825:15;;13819:22;4671:13;4664:21;13897:2;13882:18;;;4652:34;;;;13938:15;;13932:22;4671:13;4664:21;14010:3;13995:19;;;4652:34;;;;14052:16;;;14046:23;4671:13;4664:21;14125:4;14110:20;;;4652:34;;;;-1:-1:-1;13712:15:166;12804:1356::o;14165:673::-;14219:5;14272:3;14265:4;14257:6;14253:17;14249:27;14239:55;;14290:1;14287;14280:12;14239:55;14326:6;14313:20;14352:4;14376:71;14392:54;14443:2;14392:54;:::i;14376:71::-;14481:15;;;14567:1;14563:10;;;;14551:23;;14547:32;;;14512:12;;;;14591:15;;;14588:35;;;14619:1;14616;14609:12;14588:35;14655:2;14647:6;14643:15;14667:142;14683:6;14678:3;14675:15;14667:142;;;14749:17;;14737:30;;14787:12;;;;14700;;14667:142;;;-1:-1:-1;14827:5:166;14165:673;-1:-1:-1;;;;;;14165:673:166:o;14843:595::-;14961:6;14969;15022:2;15010:9;15001:7;14997:23;14993:32;14990:52;;;15038:1;15035;15028:12;14990:52;15078:9;15065:23;-1:-1:-1;;;;;15148:2:166;15140:6;15137:14;15134:34;;;15164:1;15161;15154:12;15134:34;15187:61;15240:7;15231:6;15220:9;15216:22;15187:61;:::i;:::-;15177:71;;15301:2;15290:9;15286:18;15273:32;15257:48;;15330:2;15320:8;15317:16;15314:36;;;15346:1;15343;15336:12;15314:36;;15369:63;15424:7;15413:8;15402:9;15398:24;15369:63;:::i;:::-;15359:73;;;14843:595;;;;;:::o;15443:705::-;15661:2;15673:21;;;15743:13;;15646:18;;;15765:22;;;15613:4;;15840;;15818:2;15803:18;;;15867:15;;;15613:4;15910:169;15924:6;15921:1;15918:13;15910:169;;;15985:13;;15973:26;;16019:12;;;;16054:15;;;;15946:1;15939:9;15910:169;;;-1:-1:-1;;;16115:18:166;;16108:34;;;;16096:3;15443:705;-1:-1:-1;;15443:705:166:o;16153:186::-;16212:6;16265:2;16253:9;16244:7;16240:23;16236:32;16233:52;;;16281:1;16278;16271:12;16233:52;16304:29;16323:9;16304:29;:::i;16653:127::-;16714:10;16709:3;16705:20;16702:1;16695:31;16745:4;16742:1;16735:15;16769:4;16766:1;16759:15;16785:127;16846:10;16841:3;16837:20;16834:1;16827:31;16877:4;16874:1;16867:15;16901:4;16898:1;16891:15;16917:135;16956:3;16977:17;;;16974:43;;16997:18;;:::i;:::-;-1:-1:-1;17044:1:166;17033:13;;16917:135::o;17057:125::-;17122:9;;;17143:10;;;17140:36;;;17156:18;;:::i;17187:128::-;17254:9;;;17275:11;;;17272:37;;;17289:18;;:::i;17320:151::-;17410:4;17403:12;;;17389;;;17385:31;;17428:14;;17425:40;;;17445:18;;:::i;17476:422::-;17565:1;17608:5;17565:1;17622:270;17643:7;17633:8;17630:21;17622:270;;;17702:4;17698:1;17694:6;17690:17;17684:4;17681:27;17678:53;;;17711:18;;:::i;:::-;17761:7;17751:8;17747:22;17744:55;;;17781:16;;;;17744:55;17860:22;;;;17820:15;;;;17622:270;;;17626:3;17476:422;;;;;:::o;17903:806::-;17952:5;17982:8;17972:80;;-1:-1:-1;18023:1:166;18037:5;;17972:80;18071:4;18061:76;;-1:-1:-1;18108:1:166;18122:5;;18061:76;18153:4;18171:1;18166:59;;;;18239:1;18234:130;;;;18146:218;;18166:59;18196:1;18187:10;;18210:5;;;18234:130;18271:3;18261:8;18258:17;18255:43;;;18278:18;;:::i;:::-;-1:-1:-1;;18334:1:166;18320:16;;18349:5;;18146:218;;18448:2;18438:8;18435:16;18429:3;18423:4;18420:13;18416:36;18410:2;18400:8;18397:16;18392:2;18386:4;18383:12;18379:35;18376:77;18373:159;;;-1:-1:-1;18485:19:166;;;18517:5;;18373:159;18564:34;18589:8;18583:4;18564:34;:::i;:::-;18634:6;18630:1;18626:6;18622:19;18613:7;18610:32;18607:58;;;18645:18;;:::i;:::-;18683:20;;17903:806;-1:-1:-1;;;17903:806:166:o;18714:140::-;18772:5;18801:47;18842:4;18832:8;18828:19;18822:4;18801:47;:::i;18859:217::-;18899:1;18925;18915:132;;18969:10;18964:3;18960:20;18957:1;18950:31;19004:4;19001:1;18994:15;19032:4;19029:1;19022:15;18915:132;-1:-1:-1;19061:9:166;;18859:217::o;19081:168::-;19154:9;;;19185;;19202:15;;;19196:22;;19182:37;19172:71;;19223:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "STABLECOIN_IDEAL_PRICE()": "888ad112",
    "acceptGovernance()": "238efcbc",
    "buildMetaData((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "ce5537c2",
    "calculateWeightsAndTotal(uint256[],uint256[])": "d993f6a2",
    "changeGovernor(address)": "e4c0aaf4",
    "checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "d625436c",
    "checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "a0763820",
    "governor()": "0c340a24",
    "isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "e2cc8679",
    "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": "6382b296",
    "maxAllowedVaultDeviation()": "c203c831",
    "minTokenPrice()": "5dabb20e",
    "pendingGovernor()": "e3056a34",
    "safeToExecuteOutsideEpsilon(((address,uint256,uint256,uint256,uint256,bool,bool,bool,(address,bool,uint256)[])[],bool,bool,bool,bool))": "dbc1d617",
    "setMinTokenPrice(uint256)": "bcbef650",
    "setStablecoinMaxDeviation(uint256)": "d0261544",
    "setVaultMaxDeviation(uint256)": "bd162bdd",
    "stablecoinMaxDeviation()": "14df3dd8",
    "updateMetaDataWithEpsilonStatus(((address,uint256,uint256,uint256,uint256,bool,bool,bool,(address,bool,uint256)[])[],bool,bool,bool,bool))": "d9a9abfa",
    "updateMetadataWithPriceSafety(((address,uint256,uint256,uint256,uint256,bool,bool,bool,(address,bool,uint256)[])[],bool,bool,bool,bool))": "cd56525a",
    "updateVaultWithPriceSafety((address,uint256,uint256,uint256,uint256,bool,bool,bool,(address,bool,uint256)[]))": "0d175752",
    "vaultWeightWithOffPegFalls(((address,uint256,uint256,uint256,uint256,bool,bool,bool,(address,bool,uint256)[])[],bool,bool,bool,bool))": "6608ddc7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxAllowedVaultDeviation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stablecoinMaxDeviation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minTokenPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorChangeRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"STABLECOIN_IDEAL_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"buildMetaData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata[]\",\"name\":\"vaultMetadata\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"allVaultsWithinEpsilon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsAllVaultsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allVaultsUsingLargeEnoughPrices\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Metadata\",\"name\":\"metaData\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"calculateWeightsAndTotal\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"checkAndPersistMint\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"checkAndPersistRedeem\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"isMintSafe\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowMemory\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortFlowThreshold\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PersistedVaultMetadata\",\"name\":\"persistedMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"reserveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultInfo\",\"name\":\"vaultInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.VaultWithAmount[]\",\"name\":\"vaultsWithAmount\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"isRedeemSafe\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAllowedVaultDeviation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata[]\",\"name\":\"vaultMetadata\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"allVaultsWithinEpsilon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsAllVaultsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allVaultsUsingLargeEnoughPrices\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Metadata\",\"name\":\"metaData\",\"type\":\"tuple\"}],\"name\":\"safeToExecuteOutsideEpsilon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minTokenPrice\",\"type\":\"uint256\"}],\"name\":\"setMinTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stablecoinMaxDeviation\",\"type\":\"uint256\"}],\"name\":\"setStablecoinMaxDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAllowedVaultDeviation\",\"type\":\"uint256\"}],\"name\":\"setVaultMaxDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoinMaxDeviation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata[]\",\"name\":\"vaultMetadata\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"allVaultsWithinEpsilon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsAllVaultsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allVaultsUsingLargeEnoughPrices\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Metadata\",\"name\":\"metaData\",\"type\":\"tuple\"}],\"name\":\"updateMetaDataWithEpsilonStatus\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata[]\",\"name\":\"vaultMetadata\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"allVaultsWithinEpsilon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsAllVaultsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allVaultsUsingLargeEnoughPrices\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Metadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata[]\",\"name\":\"vaultMetadata\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"allVaultsWithinEpsilon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsAllVaultsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allVaultsUsingLargeEnoughPrices\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Metadata\",\"name\":\"metaData\",\"type\":\"tuple\"}],\"name\":\"updateMetadataWithPriceSafety\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata[]\",\"name\":\"vaultMetadata\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"allVaultsWithinEpsilon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsAllVaultsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allVaultsUsingLargeEnoughPrices\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Metadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata\",\"name\":\"vaultData\",\"type\":\"tuple\"}],\"name\":\"updateVaultWithPriceSafety\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idealWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"atLeastOnePriceLargeEnough\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vaultWithinEpsilon\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.PricedToken[]\",\"name\":\"pricedTokens\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DataTypes.VaultMetadata[]\",\"name\":\"vaultMetadata\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"allVaultsWithinEpsilon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allStablecoinsAllVaultsOnPeg\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"allVaultsUsingLargeEnoughPrices\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"mint\",\"type\":\"bool\"}],\"internalType\":\"struct DataTypes.Metadata\",\"name\":\"metaData\",\"type\":\"tuple\"}],\"name\":\"vaultWeightWithOffPegFalls\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"returns\":{\"_0\":\"empty string if it is safe, otherwise the reason why it is not safe\"}},\"isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"returns\":{\"_0\":\"empty string if it is safe, otherwise the reason why it is not safe\"}}},\"version\":1},\"userdoc\":{\"events\":{\"GovernorChangeRequested(address)\":{\"notice\":\"Emmited when the governor is change is requested\"},\"GovernorChanged(address,address)\":{\"notice\":\"Emmited when the governor is changed\"}},\"kind\":\"user\",\"methods\":{\"STABLECOIN_IDEAL_PRICE()\":{\"notice\":\"a stablecoin should be equal to 1 USD\"},\"acceptGovernance()\":{\"notice\":\"Called by the pending governor to approve the change\"},\"changeGovernor(address)\":{\"notice\":\"Changes the governor can only be called by the current governor\"},\"checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"notice\":\"Checks whether a mint operation is safe and reverts otherwise This is only called when an actual mint is performed The implementation should store any relevant information for the mint\"},\"checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"notice\":\"Checks whether a redeem operation is safe and reverts otherwise This is only called when an actual redeem is performed The implementation should store any relevant information for the redeem\"},\"governor()\":{\"notice\":\"Returns the current governor\"},\"isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"notice\":\"Checks whether a mint operation is safe\"},\"isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))\":{\"notice\":\"Checks whether a redeem operation is safe\"},\"pendingGovernor()\":{\"notice\":\"Returns the pending governor\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/testing/TestingReserveSafetyManager.sol\":\"TestingReserveSafetyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/auth/Governable.sol\":{\"keccak256\":\"0x8e35f59c8df176f2f2ec0b27bc567106f419942f28b317c4aeb459572c7cddc9\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://2bbe14ec52921d7a1a67116dbfa1729647f94aded19b4949765f4260c46b99fd\",\"dweb:/ipfs/QmXhqMmvwZRUgAFNCxifNKPE2FkDEDVpCBMQNs2LBEQsFi\"]},\"contracts/auth/GovernableBase.sol\":{\"keccak256\":\"0x076c1535458771c52ae11bdd7747704ff990bb8e778c678c5963d4453c43eff0\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://90296c3c42624636dc61c63dccb91807566d905607e13cf3f85dadde65e4ef9f\",\"dweb:/ipfs/QmNdL6uFNGLgwvgwuGVqp2wmmdsKViQhuFeMGNgHsdCeQ6\"]},\"contracts/safety/ReserveSafetyManager.sol\":{\"keccak256\":\"0xf7fc737b89b0007d051528000ba5afa429a81eb993e2b993b5c72d9142d27f91\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://d57760c0be657d05e116254840dc58d67c96388a32379f9ce94166429831ff3a\",\"dweb:/ipfs/QmT4iKgVm5ckBe3bzGw6sCqDfM7ZVRm2EstmXFj34cUAmQ\"]},\"contracts/testing/TestingReserveSafetyManager.sol\":{\"keccak256\":\"0x43e4830123d71a74aef7c1a3c3a9b515fdcf6b9fabea0230ded63b4be100e8b8\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://301c1b0dc395f73efb0576085950b24054df728a4fe522a6d2a899a97e8e1501\",\"dweb:/ipfs/QmNey4Ed5gyNPEqiu2Djjf75v5VnDve8Q1BX4eimaBv7UR\"]},\"interfaces/IGovernable.sol\":{\"keccak256\":\"0x5e0804b45ef3fb3cfd9bf24999ea98307d157dd1e3fb4965ab902f16a8a7a834\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cc9a2bcf74ff86ae5c89873dd7eea6bb4d9c71bf67f63414cf6519a17bb60066\",\"dweb:/ipfs/QmT45sh3fadFtq6gD1STeTxtFgE1AQ6SNVtCbChoWdRkid\"]},\"interfaces/IGyroVault.sol\":{\"keccak256\":\"0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4\",\"dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL\"]},\"interfaces/ISafetyCheck.sol\":{\"keccak256\":\"0xa25aa366374e1c583b6d44ed7da0eed3b94145e013f6b29bd748612d93f5d684\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://dda510dcba46233d7dcb3d87a0fa5e04d3b69c26a9d1fffc7a8ebefa8221f9c4\",\"dweb:/ipfs/Qmdy8TTsvAwDoaCmdNWHUGaBWtoDNoCP4CDtEwmuCeLBhR\"]},\"interfaces/balancer/IAsset.sol\":{\"keccak256\":\"0x620a03c52641b8e1732123f17d23b84c1f82120c74ff7cd87e752f797740ad25\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://5c90daea9d62b92331bed096990fa73cdeb912ccbe46d83732e1cdd1652c5658\",\"dweb:/ipfs/QmQaVRCo2ttZj8QqtKPMfMux5w816nPyFQhLVPm81Do9UC\"]},\"interfaces/balancer/IAuthorizer.sol\":{\"keccak256\":\"0x9d6ac02e7069ded94f5142e8c5ad7981dad84f9e1e5dcd715da880de08cd080d\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4045080e6b12749bd82eb1cb24736efdb59c81e044b1b9c4607ac2b6d460ce3f\",\"dweb:/ipfs/Qma1KE11aq8nuNBSMQxW6bY2b7atBoSZr6EBZ8xSP1by28\"]},\"interfaces/balancer/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x4d948a2d8d3f52b5184d947049871ad351aa63156c32229a2dc7f5e6d324c7e5\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://5281b98c23c7b39ecb81981697ce0602162d2c7c0a0c53c6f65d609edb9a9eb4\",\"dweb:/ipfs/QmSLdi64nRpmey1JKhvnkiSqX2EmtAs15RetU3eMZjVa7Y\"]},\"interfaces/balancer/ISignaturesValidator.sol\":{\"keccak256\":\"0x69ec4ebe37eec8374c9c3681d4636ccf0e399ff599f9d4622428df57d4e77cba\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://7dd06778cbed2b7c800967f711d3bc71b4d44171372139e884d74ef7f71e0166\",\"dweb:/ipfs/QmeAeUostyapZeMHkrdwfxUtmFR6tZuLUro17LCH6cB1Wo\"]},\"interfaces/balancer/ITemporarilyPausable.sol\":{\"keccak256\":\"0xeb68d86c8bf05f164abf5db93937f4e7a574c82193e5b6b72c6722e986fa2e26\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cd83c8327b77acbfd77fc4c6027a2df39c3257d17b43fe9ca619174b550393dd\",\"dweb:/ipfs/QmXdhoZKTBgnVNgU8efT3jDpXqDJt5rDtrhbag6Qb447AK\"]},\"interfaces/balancer/IVault.sol\":{\"keccak256\":\"0x2cf5253065be223b5aba19cc04371bc6972112c7d5ee5c1c6c3272acb09553c8\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://c5996526c2fc484ea3834da36079515cf35bdc29e700d450a1b61fbdfdedcdc8\",\"dweb:/ipfs/QmSauWgbgTza9wBBJ4CNz6WKx6A1E6zNXqQGrZZabwwV4W\"]},\"interfaces/balancer/IWETH.sol\":{\"keccak256\":\"0xd1ca6e0e7b1aabb3b7cc84c4988a831f4cebb5e6c70e7368ef19d0e1f1444c25\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://73a55d58dc3e9168ac6da08c87c0803e7541fe92ed4068d3229820be9f2384ad\",\"dweb:/ipfs/QmYDEUpvHPRXrA6VnTmdYETSaYHKBSkApx38aQga1cVwHc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"libraries/DataTypes.sol\":{\"keccak256\":\"0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494\",\"dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC\"]},\"libraries/DecimalScale.sol\":{\"keccak256\":\"0x425db7e4ba62b2baa15fddd2e476977b4e274eac0e1728243c3321724cc080dd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://c431c4135b48990e36c5b26bf7b2bddc2dcd7b03a5f19cb0bfaa1082345cd5a2\",\"dweb:/ipfs/QmQ4LmacvcaxBQ3cQNPZATH1RbSBxx8aGsgZmzvR2DELhn\"]},\"libraries/Errors.sol\":{\"keccak256\":\"0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55\",\"dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC\"]},\"libraries/FixedPoint.sol\":{\"keccak256\":\"0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235\",\"dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz\"]},\"libraries/LogExpMath.sol\":{\"keccak256\":\"0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4\",\"dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm\"]},\"libraries/Vaults.sol\":{\"keccak256\":\"0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b\",\"dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_governor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxAllowedVaultDeviation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_stablecoinMaxDeviation",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minTokenPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GovernorChangeRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldGovernor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GovernorChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STABLECOIN_IDEAL_PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptGovernance"
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "buildMetaData",
          "outputs": [
            {
              "internalType": "struct DataTypes.Metadata",
              "name": "metaData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultMetadata[]",
                  "name": "vaultMetadata",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "resultingWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allStablecoinsOnPeg",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "atLeastOnePriceLargeEnough",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "vaultWithinEpsilon",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsAllVaultsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsUsingLargeEnoughPrices",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "prices",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWeightsAndTotal",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeGovernor"
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkAndPersistMint"
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkAndPersistRedeem"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "governor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMintSafe",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Order",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultWithAmount[]",
                  "name": "vaultsWithAmount",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct DataTypes.VaultInfo",
                      "name": "vaultInfo",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "underlying",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PersistedVaultMetadata",
                          "name": "persistedMetadata",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "initialPrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "initialWeight",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowMemory",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "shortFlowThreshold",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "uint256",
                          "name": "reserveBalance",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "currentWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "idealWeight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct DataTypes.PricedToken[]",
                          "name": "pricedTokens",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "tokenAddress",
                              "type": "address"
                            },
                            {
                              "internalType": "bool",
                              "name": "isStable",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "price",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRedeemSafe",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAllowedVaultDeviation",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minTokenPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingGovernor",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Metadata",
              "name": "metaData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultMetadata[]",
                  "name": "vaultMetadata",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "resultingWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allStablecoinsOnPeg",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "atLeastOnePriceLargeEnough",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "vaultWithinEpsilon",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsAllVaultsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsUsingLargeEnoughPrices",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "safeToExecuteOutsideEpsilon",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_minTokenPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinTokenPrice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_stablecoinMaxDeviation",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStablecoinMaxDeviation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxAllowedVaultDeviation",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVaultMaxDeviation"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stablecoinMaxDeviation",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Metadata",
              "name": "metaData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultMetadata[]",
                  "name": "vaultMetadata",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "resultingWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allStablecoinsOnPeg",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "atLeastOnePriceLargeEnough",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "vaultWithinEpsilon",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsAllVaultsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsUsingLargeEnoughPrices",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "updateMetaDataWithEpsilonStatus",
          "outputs": [
            {
              "internalType": "struct DataTypes.Metadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultMetadata[]",
                  "name": "vaultMetadata",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "resultingWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allStablecoinsOnPeg",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "atLeastOnePriceLargeEnough",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "vaultWithinEpsilon",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsAllVaultsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsUsingLargeEnoughPrices",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Metadata",
              "name": "metaData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultMetadata[]",
                  "name": "vaultMetadata",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "resultingWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allStablecoinsOnPeg",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "atLeastOnePriceLargeEnough",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "vaultWithinEpsilon",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsAllVaultsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsUsingLargeEnoughPrices",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "updateMetadataWithPriceSafety",
          "outputs": [
            {
              "internalType": "struct DataTypes.Metadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultMetadata[]",
                  "name": "vaultMetadata",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "resultingWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allStablecoinsOnPeg",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "atLeastOnePriceLargeEnough",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "vaultWithinEpsilon",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsAllVaultsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsUsingLargeEnoughPrices",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.VaultMetadata",
              "name": "vaultData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "updateVaultWithPriceSafety",
          "outputs": [
            {
              "internalType": "struct DataTypes.VaultMetadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "idealWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "currentWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "resultingWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "atLeastOnePriceLargeEnough",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "vaultWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "struct DataTypes.PricedToken[]",
                  "name": "pricedTokens",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStable",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DataTypes.Metadata",
              "name": "metaData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataTypes.VaultMetadata[]",
                  "name": "vaultMetadata",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "idealWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "currentWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "resultingWeight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allStablecoinsOnPeg",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "atLeastOnePriceLargeEnough",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "vaultWithinEpsilon",
                      "type": "bool"
                    },
                    {
                      "internalType": "struct DataTypes.PricedToken[]",
                      "name": "pricedTokens",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "tokenAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "isStable",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsWithinEpsilon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allStablecoinsAllVaultsOnPeg",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "allVaultsUsingLargeEnoughPrices",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "mint",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "vaultWeightWithOffPegFalls",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "returns": {
              "_0": "empty string if it is safe, otherwise the reason why it is not safe"
            }
          },
          "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "returns": {
              "_0": "empty string if it is safe, otherwise the reason why it is not safe"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "STABLECOIN_IDEAL_PRICE()": {
            "notice": "a stablecoin should be equal to 1 USD"
          },
          "acceptGovernance()": {
            "notice": "Called by the pending governor to approve the change"
          },
          "changeGovernor(address)": {
            "notice": "Changes the governor can only be called by the current governor"
          },
          "checkAndPersistMint((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "notice": "Checks whether a mint operation is safe and reverts otherwise This is only called when an actual mint is performed The implementation should store any relevant information for the mint"
          },
          "checkAndPersistRedeem((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "notice": "Checks whether a redeem operation is safe and reverts otherwise This is only called when an actual redeem is performed The implementation should store any relevant information for the redeem"
          },
          "governor()": {
            "notice": "Returns the current governor"
          },
          "isMintSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "notice": "Checks whether a mint operation is safe"
          },
          "isRedeemSafe((((address,uint8,address,uint256,(uint256,uint256,uint256,uint256),uint256,uint256,uint256,(address,bool,uint256)[]),uint256)[],bool))": {
            "notice": "Checks whether a redeem operation is safe"
          },
          "pendingGovernor()": {
            "notice": "Returns the pending governor"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/testing/TestingReserveSafetyManager.sol": "TestingReserveSafetyManager"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/auth/Governable.sol": {
        "keccak256": "0x8e35f59c8df176f2f2ec0b27bc567106f419942f28b317c4aeb459572c7cddc9",
        "urls": [
          "bzz-raw://2bbe14ec52921d7a1a67116dbfa1729647f94aded19b4949765f4260c46b99fd",
          "dweb:/ipfs/QmXhqMmvwZRUgAFNCxifNKPE2FkDEDVpCBMQNs2LBEQsFi"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/auth/GovernableBase.sol": {
        "keccak256": "0x076c1535458771c52ae11bdd7747704ff990bb8e778c678c5963d4453c43eff0",
        "urls": [
          "bzz-raw://90296c3c42624636dc61c63dccb91807566d905607e13cf3f85dadde65e4ef9f",
          "dweb:/ipfs/QmNdL6uFNGLgwvgwuGVqp2wmmdsKViQhuFeMGNgHsdCeQ6"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/safety/ReserveSafetyManager.sol": {
        "keccak256": "0xf7fc737b89b0007d051528000ba5afa429a81eb993e2b993b5c72d9142d27f91",
        "urls": [
          "bzz-raw://d57760c0be657d05e116254840dc58d67c96388a32379f9ce94166429831ff3a",
          "dweb:/ipfs/QmT4iKgVm5ckBe3bzGw6sCqDfM7ZVRm2EstmXFj34cUAmQ"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "contracts/testing/TestingReserveSafetyManager.sol": {
        "keccak256": "0x43e4830123d71a74aef7c1a3c3a9b515fdcf6b9fabea0230ded63b4be100e8b8",
        "urls": [
          "bzz-raw://301c1b0dc395f73efb0576085950b24054df728a4fe522a6d2a899a97e8e1501",
          "dweb:/ipfs/QmNey4Ed5gyNPEqiu2Djjf75v5VnDve8Q1BX4eimaBv7UR"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGovernable.sol": {
        "keccak256": "0x5e0804b45ef3fb3cfd9bf24999ea98307d157dd1e3fb4965ab902f16a8a7a834",
        "urls": [
          "bzz-raw://cc9a2bcf74ff86ae5c89873dd7eea6bb4d9c71bf67f63414cf6519a17bb60066",
          "dweb:/ipfs/QmT45sh3fadFtq6gD1STeTxtFgE1AQ6SNVtCbChoWdRkid"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/IGyroVault.sol": {
        "keccak256": "0x45c20b3dac7f90b7d0eba2dc9aff1c47d5f140ec78535d6448c9e5dea6f58644",
        "urls": [
          "bzz-raw://e5827a85fc4bb5ef85d332d05d331a5f878c6a96acc2d24eb66e23c82d876fe4",
          "dweb:/ipfs/QmXd8sTdoYFhQTaM5yrFhpHGsTpBa3w4NmLsoX2JSLBHzL"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/ISafetyCheck.sol": {
        "keccak256": "0xa25aa366374e1c583b6d44ed7da0eed3b94145e013f6b29bd748612d93f5d684",
        "urls": [
          "bzz-raw://dda510dcba46233d7dcb3d87a0fa5e04d3b69c26a9d1fffc7a8ebefa8221f9c4",
          "dweb:/ipfs/Qmdy8TTsvAwDoaCmdNWHUGaBWtoDNoCP4CDtEwmuCeLBhR"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IAsset.sol": {
        "keccak256": "0x620a03c52641b8e1732123f17d23b84c1f82120c74ff7cd87e752f797740ad25",
        "urls": [
          "bzz-raw://5c90daea9d62b92331bed096990fa73cdeb912ccbe46d83732e1cdd1652c5658",
          "dweb:/ipfs/QmQaVRCo2ttZj8QqtKPMfMux5w816nPyFQhLVPm81Do9UC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IAuthorizer.sol": {
        "keccak256": "0x9d6ac02e7069ded94f5142e8c5ad7981dad84f9e1e5dcd715da880de08cd080d",
        "urls": [
          "bzz-raw://4045080e6b12749bd82eb1cb24736efdb59c81e044b1b9c4607ac2b6d460ce3f",
          "dweb:/ipfs/Qma1KE11aq8nuNBSMQxW6bY2b7atBoSZr6EBZ8xSP1by28"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IFlashLoanRecipient.sol": {
        "keccak256": "0x4d948a2d8d3f52b5184d947049871ad351aa63156c32229a2dc7f5e6d324c7e5",
        "urls": [
          "bzz-raw://5281b98c23c7b39ecb81981697ce0602162d2c7c0a0c53c6f65d609edb9a9eb4",
          "dweb:/ipfs/QmSLdi64nRpmey1JKhvnkiSqX2EmtAs15RetU3eMZjVa7Y"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/ISignaturesValidator.sol": {
        "keccak256": "0x69ec4ebe37eec8374c9c3681d4636ccf0e399ff599f9d4622428df57d4e77cba",
        "urls": [
          "bzz-raw://7dd06778cbed2b7c800967f711d3bc71b4d44171372139e884d74ef7f71e0166",
          "dweb:/ipfs/QmeAeUostyapZeMHkrdwfxUtmFR6tZuLUro17LCH6cB1Wo"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/ITemporarilyPausable.sol": {
        "keccak256": "0xeb68d86c8bf05f164abf5db93937f4e7a574c82193e5b6b72c6722e986fa2e26",
        "urls": [
          "bzz-raw://cd83c8327b77acbfd77fc4c6027a2df39c3257d17b43fe9ca619174b550393dd",
          "dweb:/ipfs/QmXdhoZKTBgnVNgU8efT3jDpXqDJt5rDtrhbag6Qb447AK"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IVault.sol": {
        "keccak256": "0x2cf5253065be223b5aba19cc04371bc6972112c7d5ee5c1c6c3272acb09553c8",
        "urls": [
          "bzz-raw://c5996526c2fc484ea3834da36079515cf35bdc29e700d450a1b61fbdfdedcdc8",
          "dweb:/ipfs/QmSauWgbgTza9wBBJ4CNz6WKx6A1E6zNXqQGrZZabwwV4W"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "interfaces/balancer/IWETH.sol": {
        "keccak256": "0xd1ca6e0e7b1aabb3b7cc84c4988a831f4cebb5e6c70e7368ef19d0e1f1444c25",
        "urls": [
          "bzz-raw://73a55d58dc3e9168ac6da08c87c0803e7541fe92ed4068d3229820be9f2384ad",
          "dweb:/ipfs/QmYDEUpvHPRXrA6VnTmdYETSaYHKBSkApx38aQga1cVwHc"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "libraries/DataTypes.sol": {
        "keccak256": "0xa4d3c14e22a3a2fe30d590e9693876f7c9ebc9fb636ba068bd1b1fec8b22ec29",
        "urls": [
          "bzz-raw://f29fbfbcb8a97bf3b280831e5735dfb26616a41c981b1648244f77d74c469494",
          "dweb:/ipfs/Qme48mo4T2CfVKRXKVMmX6x5VE4j2BmAErt9tPeacw4PPC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/DecimalScale.sol": {
        "keccak256": "0x425db7e4ba62b2baa15fddd2e476977b4e274eac0e1728243c3321724cc080dd",
        "urls": [
          "bzz-raw://c431c4135b48990e36c5b26bf7b2bddc2dcd7b03a5f19cb0bfaa1082345cd5a2",
          "dweb:/ipfs/QmQ4LmacvcaxBQ3cQNPZATH1RbSBxx8aGsgZmzvR2DELhn"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Errors.sol": {
        "keccak256": "0x771ff83586512e92e677f886216cf85fae5441fe40817bc22eda7d46c70b98bd",
        "urls": [
          "bzz-raw://61879ffdaa1d9ef27af0d9da62915059eb44db5d0ba98d3f83a864c517b45a55",
          "dweb:/ipfs/QmX9nfSMgt5LsisqaxWjT4LFsaPirC1h9RfqcLGybFmAzC"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/FixedPoint.sol": {
        "keccak256": "0x568a825b9e1c4ecbbd63e066ae2b4c668eb65a10b0cbe0a63adacb0448e8ec3f",
        "urls": [
          "bzz-raw://4e0e07efe3b4b43e50d91f23212671f713eaf9714ae9a6bbdbdbe88c0bb28235",
          "dweb:/ipfs/QmXTdFRiJwkBvHKVbUMynafrvkdAvDwYFw5CL2LR31DHUz"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/LogExpMath.sol": {
        "keccak256": "0xf5d7e3b373595b85286b9a44e92acc297e2bbc9c4bf00866c97718b7e3175ea6",
        "urls": [
          "bzz-raw://d0ee84b67f1f56e040168ff81a5adae6654e2d854b6780dabe7289993a9313c4",
          "dweb:/ipfs/QmbKa7apomK1mwxiDn8N1aohKcuKsZVGNthyhVpDP6gffm"
        ],
        "license": "LicenseRef-Gyro-1.0"
      },
      "libraries/Vaults.sol": {
        "keccak256": "0xca2e1dd312d97f50ac55c8846e3c367e0c1d4b8685153eb328a577767adb569f",
        "urls": [
          "bzz-raw://3ecf23d20dd2863c3bae6e8f57584e90fbc8af676856a6bad8791d4d5c477d3b",
          "dweb:/ipfs/QmRJJu3smYYiCMQrXTXPjCWi3xRvbebi2exDbm9eK739o3"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/testing/TestingReserveSafetyManager.sol",
    "id": 14171,
    "exportedSymbols": {
      "Address": [
        49309
      ],
      "Context": [
        49331
      ],
      "DataTypes": [
        54519
      ],
      "DecimalScale": [
        54607
      ],
      "ERC20": [
        47453
      ],
      "Errors": [
        56056
      ],
      "FixedPoint": [
        56426
      ],
      "Governable": [
        5458
      ],
      "GovernableBase": [
        5552
      ],
      "IAsset": [
        16864
      ],
      "IAuthorizer": [
        16879
      ],
      "IERC20": [
        47531
      ],
      "IERC20Metadata": [
        47556
      ],
      "IERC20Permit": [
        47592
      ],
      "IFlashLoanRecipient": [
        17005
      ],
      "IGovernable": [
        16176
      ],
      "IGyroVault": [
        16414
      ],
      "ISafetyCheck": [
        16756
      ],
      "ISignaturesValidator": [
        17087
      ],
      "ITemporarilyPausable": [
        17106
      ],
      "IVault": [
        17607
      ],
      "IWETH": [
        17622
      ],
      "LogExpMath": [
        57808
      ],
      "ReserveSafetyManager": [
        11318
      ],
      "SafeERC20": [
        47873
      ],
      "TestingReserveSafetyManager": [
        14170
      ],
      "Vaults": [
        58229
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:2069:47",
    "nodes": [
      {
        "id": 14039,
        "nodeType": "PragmaDirective",
        "src": "174:24:47",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 14040,
        "nodeType": "ImportDirective",
        "src": "200:44:47",
        "nodes": [],
        "absolutePath": "contracts/safety/ReserveSafetyManager.sol",
        "file": "../safety/ReserveSafetyManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14171,
        "sourceUnit": 11319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14041,
        "nodeType": "ImportDirective",
        "src": "245:39:47",
        "nodes": [],
        "absolutePath": "libraries/DataTypes.sol",
        "file": "../../libraries/DataTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14171,
        "sourceUnit": 54520,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14170,
        "nodeType": "ContractDefinition",
        "src": "286:1956:47",
        "nodes": [
          {
            "id": 14061,
            "nodeType": "FunctionDefinition",
            "src": "353:333:47",
            "nodes": [],
            "body": {
              "id": 14060,
              "nodeType": "Block",
              "src": "684:2:47",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14054,
                    "name": "_governor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14045,
                    "src": "556:9:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 14055,
                    "name": "_maxAllowedVaultDeviation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14047,
                    "src": "579:25:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 14056,
                    "name": "_stablecoinMaxDeviation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14049,
                    "src": "618:23:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 14057,
                    "name": "_minTokenPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14051,
                    "src": "655:14:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 14058,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 14053,
                  "name": "ReserveSafetyManager",
                  "nameLocations": [
                    "522:20:47"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11318,
                  "src": "522:20:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "522:157:47"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 14052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14045,
                  "mutability": "mutable",
                  "name": "_governor",
                  "nameLocation": "382:9:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14061,
                  "src": "374:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14047,
                  "mutability": "mutable",
                  "name": "_maxAllowedVaultDeviation",
                  "nameLocation": "409:25:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14061,
                  "src": "401:33:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14049,
                  "mutability": "mutable",
                  "name": "_stablecoinMaxDeviation",
                  "nameLocation": "452:23:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14061,
                  "src": "444:31:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14051,
                  "mutability": "mutable",
                  "name": "_minTokenPrice",
                  "nameLocation": "493:14:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14061,
                  "src": "485:22:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:149:47"
            },
            "returnParameters": {
              "id": 14059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:0:47"
            },
            "scope": 14170,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 14081,
            "nodeType": "FunctionDefinition",
            "src": "692:229:47",
            "nodes": [],
            "body": {
              "id": 14080,
              "nodeType": "Block",
              "src": "855:66:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14076,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14064,
                        "src": "898:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 14077,
                        "name": "prices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14067,
                        "src": "907:6:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 14075,
                      "name": "_calculateWeightsAndTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10526,
                      "src": "872:25:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                        "typeString": "function (uint256[] memory,uint256[] memory) pure returns (uint256[] memory,uint256)"
                      }
                    },
                    "id": 14078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:42:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(uint256[] memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 14074,
                  "id": 14079,
                  "nodeType": "Return",
                  "src": "865:49:47"
                }
              ]
            },
            "functionSelector": "d993f6a2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWeightsAndTotal",
            "nameLocation": "701:24:47",
            "parameters": {
              "id": 14068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14064,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "743:7:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14081,
                  "src": "726:24:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14062,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "726:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14063,
                    "nodeType": "ArrayTypeName",
                    "src": "726:9:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14067,
                  "mutability": "mutable",
                  "name": "prices",
                  "nameLocation": "769:6:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14081,
                  "src": "752:23:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14065,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "752:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14066,
                    "nodeType": "ArrayTypeName",
                    "src": "752:9:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:51:47"
            },
            "returnParameters": {
              "id": 14074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14071,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14081,
                  "src": "824:16:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14069,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "824:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14070,
                    "nodeType": "ArrayTypeName",
                    "src": "824:9:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14081,
                  "src": "842:7:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "823:27:47"
            },
            "scope": 14170,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14095,
            "nodeType": "FunctionDefinition",
            "src": "927:185:47",
            "nodes": [],
            "body": {
              "id": 14094,
              "nodeType": "Block",
              "src": "1067:45:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14091,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14084,
                        "src": "1099:5:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$54505_memory_ptr",
                          "typeString": "struct DataTypes.Order memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$54505_memory_ptr",
                          "typeString": "struct DataTypes.Order memory"
                        }
                      ],
                      "id": 14090,
                      "name": "_buildMetaData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10852,
                      "src": "1084:14:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$54505_memory_ptr_$returns$_t_struct$_Metadata_$54498_memory_ptr_$",
                        "typeString": "function (struct DataTypes.Order memory) pure returns (struct DataTypes.Metadata memory)"
                      }
                    },
                    "id": 14092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:21:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                      "typeString": "struct DataTypes.Metadata memory"
                    }
                  },
                  "functionReturnParameters": 14089,
                  "id": 14093,
                  "nodeType": "Return",
                  "src": "1077:28:47"
                }
              ]
            },
            "functionSelector": "ce5537c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buildMetaData",
            "nameLocation": "936:13:47",
            "parameters": {
              "id": 14085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14084,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "973:5:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14095,
                  "src": "950:28:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$54505_memory_ptr",
                    "typeString": "struct DataTypes.Order"
                  },
                  "typeName": {
                    "id": 14083,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14082,
                      "name": "DataTypes.Order",
                      "nameLocations": [
                        "950:9:47",
                        "960:5:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54505,
                      "src": "950:15:47"
                    },
                    "referencedDeclaration": 54505,
                    "src": "950:15:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$54505_storage_ptr",
                      "typeString": "struct DataTypes.Order"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "949:30:47"
            },
            "returnParameters": {
              "id": 14089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14088,
                  "mutability": "mutable",
                  "name": "metaData",
                  "nameLocation": "1053:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14095,
                  "src": "1027:34:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                    "typeString": "struct DataTypes.Metadata"
                  },
                  "typeName": {
                    "id": 14087,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14086,
                      "name": "DataTypes.Metadata",
                      "nameLocations": [
                        "1027:9:47",
                        "1037:8:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54498,
                      "src": "1027:18:47"
                    },
                    "referencedDeclaration": 54498,
                    "src": "1027:18:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_storage_ptr",
                      "typeString": "struct DataTypes.Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1026:36:47"
            },
            "scope": 14170,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14111,
            "nodeType": "FunctionDefinition",
            "src": "1118:239:47",
            "nodes": [],
            "body": {
              "id": 14110,
              "nodeType": "Block",
              "src": "1273:84:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14105,
                        "name": "metaData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14098,
                        "src": "1316:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                          "typeString": "struct DataTypes.Metadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                          "typeString": "struct DataTypes.Metadata memory"
                        }
                      ],
                      "id": 14104,
                      "name": "_updateMetaDataWithEpsilonStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10928,
                      "src": "1283:32:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Metadata_$54498_memory_ptr_$returns$__$",
                        "typeString": "function (struct DataTypes.Metadata memory) view"
                      }
                    },
                    "id": 14106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:42:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14107,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:42:47"
                },
                {
                  "expression": {
                    "id": 14108,
                    "name": "metaData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14098,
                    "src": "1342:8:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                      "typeString": "struct DataTypes.Metadata memory"
                    }
                  },
                  "functionReturnParameters": 14103,
                  "id": 14109,
                  "nodeType": "Return",
                  "src": "1335:15:47"
                }
              ]
            },
            "functionSelector": "d9a9abfa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateMetaDataWithEpsilonStatus",
            "nameLocation": "1127:31:47",
            "parameters": {
              "id": 14099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14098,
                  "mutability": "mutable",
                  "name": "metaData",
                  "nameLocation": "1185:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14111,
                  "src": "1159:34:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                    "typeString": "struct DataTypes.Metadata"
                  },
                  "typeName": {
                    "id": 14097,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14096,
                      "name": "DataTypes.Metadata",
                      "nameLocations": [
                        "1159:9:47",
                        "1169:8:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54498,
                      "src": "1159:18:47"
                    },
                    "referencedDeclaration": 54498,
                    "src": "1159:18:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_storage_ptr",
                      "typeString": "struct DataTypes.Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:36:47"
            },
            "returnParameters": {
              "id": 14103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14111,
                  "src": "1242:25:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                    "typeString": "struct DataTypes.Metadata"
                  },
                  "typeName": {
                    "id": 14101,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14100,
                      "name": "DataTypes.Metadata",
                      "nameLocations": [
                        "1242:9:47",
                        "1252:8:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54498,
                      "src": "1242:18:47"
                    },
                    "referencedDeclaration": 54498,
                    "src": "1242:18:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_storage_ptr",
                      "typeString": "struct DataTypes.Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:27:47"
            },
            "scope": 14170,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14127,
            "nodeType": "FunctionDefinition",
            "src": "1363:242:47",
            "nodes": [],
            "body": {
              "id": 14126,
              "nodeType": "Block",
              "src": "1524:81:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14121,
                        "name": "vaultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14114,
                        "src": "1562:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultMetadata_$54485_memory_ptr",
                          "typeString": "struct DataTypes.VaultMetadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_VaultMetadata_$54485_memory_ptr",
                          "typeString": "struct DataTypes.VaultMetadata memory"
                        }
                      ],
                      "id": 14120,
                      "name": "_updateVaultWithPriceSafety",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11012,
                      "src": "1534:27:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_VaultMetadata_$54485_memory_ptr_$returns$__$",
                        "typeString": "function (struct DataTypes.VaultMetadata memory) view"
                      }
                    },
                    "id": 14122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:38:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14123,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:38:47"
                },
                {
                  "expression": {
                    "id": 14124,
                    "name": "vaultData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14114,
                    "src": "1589:9:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultMetadata_$54485_memory_ptr",
                      "typeString": "struct DataTypes.VaultMetadata memory"
                    }
                  },
                  "functionReturnParameters": 14119,
                  "id": 14125,
                  "nodeType": "Return",
                  "src": "1582:16:47"
                }
              ]
            },
            "functionSelector": "0d175752",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateVaultWithPriceSafety",
            "nameLocation": "1372:26:47",
            "parameters": {
              "id": 14115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14114,
                  "mutability": "mutable",
                  "name": "vaultData",
                  "nameLocation": "1430:9:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14127,
                  "src": "1399:40:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultMetadata_$54485_memory_ptr",
                    "typeString": "struct DataTypes.VaultMetadata"
                  },
                  "typeName": {
                    "id": 14113,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14112,
                      "name": "DataTypes.VaultMetadata",
                      "nameLocations": [
                        "1399:9:47",
                        "1409:13:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "1399:23:47"
                    },
                    "referencedDeclaration": 54485,
                    "src": "1399:23:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultMetadata_$54485_storage_ptr",
                      "typeString": "struct DataTypes.VaultMetadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:42:47"
            },
            "returnParameters": {
              "id": 14119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14127,
                  "src": "1488:30:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultMetadata_$54485_memory_ptr",
                    "typeString": "struct DataTypes.VaultMetadata"
                  },
                  "typeName": {
                    "id": 14117,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14116,
                      "name": "DataTypes.VaultMetadata",
                      "nameLocations": [
                        "1488:9:47",
                        "1498:13:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54485,
                      "src": "1488:23:47"
                    },
                    "referencedDeclaration": 54485,
                    "src": "1488:23:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultMetadata_$54485_storage_ptr",
                      "typeString": "struct DataTypes.VaultMetadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1487:32:47"
            },
            "scope": 14170,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14143,
            "nodeType": "FunctionDefinition",
            "src": "1611:235:47",
            "nodes": [],
            "body": {
              "id": 14142,
              "nodeType": "Block",
              "src": "1764:82:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14137,
                        "name": "metaData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14130,
                        "src": "1805:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                          "typeString": "struct DataTypes.Metadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                          "typeString": "struct DataTypes.Metadata memory"
                        }
                      ],
                      "id": 14136,
                      "name": "_updateMetadataWithPriceSafety",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11082,
                      "src": "1774:30:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Metadata_$54498_memory_ptr_$returns$__$",
                        "typeString": "function (struct DataTypes.Metadata memory) view"
                      }
                    },
                    "id": 14138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:40:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14139,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:40:47"
                },
                {
                  "expression": {
                    "id": 14140,
                    "name": "metaData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14130,
                    "src": "1831:8:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                      "typeString": "struct DataTypes.Metadata memory"
                    }
                  },
                  "functionReturnParameters": 14135,
                  "id": 14141,
                  "nodeType": "Return",
                  "src": "1824:15:47"
                }
              ]
            },
            "functionSelector": "cd56525a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateMetadataWithPriceSafety",
            "nameLocation": "1620:29:47",
            "parameters": {
              "id": 14131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14130,
                  "mutability": "mutable",
                  "name": "metaData",
                  "nameLocation": "1676:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14143,
                  "src": "1650:34:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                    "typeString": "struct DataTypes.Metadata"
                  },
                  "typeName": {
                    "id": 14129,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14128,
                      "name": "DataTypes.Metadata",
                      "nameLocations": [
                        "1650:9:47",
                        "1660:8:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54498,
                      "src": "1650:18:47"
                    },
                    "referencedDeclaration": 54498,
                    "src": "1650:18:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_storage_ptr",
                      "typeString": "struct DataTypes.Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1649:36:47"
            },
            "returnParameters": {
              "id": 14135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14143,
                  "src": "1733:25:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                    "typeString": "struct DataTypes.Metadata"
                  },
                  "typeName": {
                    "id": 14133,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14132,
                      "name": "DataTypes.Metadata",
                      "nameLocations": [
                        "1733:9:47",
                        "1743:8:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54498,
                      "src": "1733:18:47"
                    },
                    "referencedDeclaration": 54498,
                    "src": "1733:18:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_storage_ptr",
                      "typeString": "struct DataTypes.Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1732:27:47"
            },
            "scope": 14170,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14156,
            "nodeType": "FunctionDefinition",
            "src": "1852:190:47",
            "nodes": [],
            "body": {
              "id": 14155,
              "nodeType": "Block",
              "src": "1981:61:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14152,
                        "name": "metaData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14146,
                        "src": "2026:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                          "typeString": "struct DataTypes.Metadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                          "typeString": "struct DataTypes.Metadata memory"
                        }
                      ],
                      "id": 14151,
                      "name": "_vaultWeightWithOffPegFalls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10574,
                      "src": "1998:27:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Metadata_$54498_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct DataTypes.Metadata memory) pure returns (bool)"
                      }
                    },
                    "id": 14153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:37:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14150,
                  "id": 14154,
                  "nodeType": "Return",
                  "src": "1991:44:47"
                }
              ]
            },
            "functionSelector": "6608ddc7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaultWeightWithOffPegFalls",
            "nameLocation": "1861:26:47",
            "parameters": {
              "id": 14147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14146,
                  "mutability": "mutable",
                  "name": "metaData",
                  "nameLocation": "1914:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14156,
                  "src": "1888:34:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                    "typeString": "struct DataTypes.Metadata"
                  },
                  "typeName": {
                    "id": 14145,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14144,
                      "name": "DataTypes.Metadata",
                      "nameLocations": [
                        "1888:9:47",
                        "1898:8:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54498,
                      "src": "1888:18:47"
                    },
                    "referencedDeclaration": 54498,
                    "src": "1888:18:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_storage_ptr",
                      "typeString": "struct DataTypes.Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1887:36:47"
            },
            "returnParameters": {
              "id": 14150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14156,
                  "src": "1971:4:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:4:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1970:6:47"
            },
            "scope": 14170,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 14169,
            "nodeType": "FunctionDefinition",
            "src": "2048:192:47",
            "nodes": [],
            "body": {
              "id": 14168,
              "nodeType": "Block",
              "src": "2178:62:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14165,
                        "name": "metaData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14159,
                        "src": "2224:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                          "typeString": "struct DataTypes.Metadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                          "typeString": "struct DataTypes.Metadata memory"
                        }
                      ],
                      "id": 14164,
                      "name": "_safeToExecuteOutsideEpsilon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11147,
                      "src": "2195:28:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Metadata_$54498_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct DataTypes.Metadata memory) pure returns (bool)"
                      }
                    },
                    "id": 14166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:38:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14163,
                  "id": 14167,
                  "nodeType": "Return",
                  "src": "2188:45:47"
                }
              ]
            },
            "functionSelector": "dbc1d617",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeToExecuteOutsideEpsilon",
            "nameLocation": "2057:27:47",
            "parameters": {
              "id": 14160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14159,
                  "mutability": "mutable",
                  "name": "metaData",
                  "nameLocation": "2111:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14169,
                  "src": "2085:34:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$54498_memory_ptr",
                    "typeString": "struct DataTypes.Metadata"
                  },
                  "typeName": {
                    "id": 14158,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14157,
                      "name": "DataTypes.Metadata",
                      "nameLocations": [
                        "2085:9:47",
                        "2095:8:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54498,
                      "src": "2085:18:47"
                    },
                    "referencedDeclaration": 54498,
                    "src": "2085:18:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$54498_storage_ptr",
                      "typeString": "struct DataTypes.Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:36:47"
            },
            "returnParameters": {
              "id": 14163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14169,
                  "src": "2168:4:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14161,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2168:4:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2167:6:47"
            },
            "scope": 14170,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14042,
              "name": "ReserveSafetyManager",
              "nameLocations": [
                "326:20:47"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11318,
              "src": "326:20:47"
            },
            "id": 14043,
            "nodeType": "InheritanceSpecifier",
            "src": "326:20:47"
          }
        ],
        "canonicalName": "TestingReserveSafetyManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          14170,
          11318,
          16756,
          5458,
          5552,
          16176
        ],
        "name": "TestingReserveSafetyManager",
        "nameLocation": "295:27:47",
        "scope": 14171,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 47
}