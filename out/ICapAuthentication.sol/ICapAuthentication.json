{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAuthenticated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isAuthenticated(address)": "d15d4150"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAuthenticated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAuthenticated(address)\":{\"returns\":{\"_0\":\"`true` if the account is authenticated\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ICapAuthentication handles cap authentication for the capped protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ICapAuthentication.sol\":\"ICapAuthentication\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"interfaces/ICapAuthentication.sol\":{\"keccak256\":\"0xbc83c6eba7031ebddecb4cf64f8f2026cca8014a85bc06663e9a204640229d81\",\"license\":\"LicenseRef-Gyro-1.0\",\"urls\":[\"bzz-raw://cec43818c95a84509027171a5ad1cd4a812ba8a5cd9670f423f5a3e70ecc9797\",\"dweb:/ipfs/QmWoqxc2A7Fm3jSCZBEb4pqvLCZb6EwkgeSWPAhZKQ88mG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAuthenticated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isAuthenticated(address)": {
            "returns": {
              "_0": "`true` if the account is authenticated"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "interfaces/ICapAuthentication.sol": "ICapAuthentication"
      },
      "libraries": {}
    },
    "sources": {
      "interfaces/ICapAuthentication.sol": {
        "keccak256": "0xbc83c6eba7031ebddecb4cf64f8f2026cca8014a85bc06663e9a204640229d81",
        "urls": [
          "bzz-raw://cec43818c95a84509027171a5ad1cd4a812ba8a5cd9670f423f5a3e70ecc9797",
          "dweb:/ipfs/QmWoqxc2A7Fm3jSCZBEb4pqvLCZb6EwkgeSWPAhZKQ88mG"
        ],
        "license": "LicenseRef-Gyro-1.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "interfaces/ICapAuthentication.sol",
    "id": 16108,
    "exportedSymbols": {
      "ICapAuthentication": [
        16107
      ]
    },
    "nodeType": "SourceUnit",
    "src": "174:271:64",
    "nodes": [
      {
        "id": 16097,
        "nodeType": "PragmaDirective",
        "src": "174:23:64",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 16107,
        "nodeType": "ContractDefinition",
        "src": "281:163:64",
        "nodes": [
          {
            "id": 16106,
            "nodeType": "FunctionDefinition",
            "src": "371:71:64",
            "nodes": [],
            "documentation": {
              "id": 16099,
              "nodeType": "StructuredDocumentation",
              "src": "316:50:64",
              "text": "@return `true` if the account is authenticated"
            },
            "functionSelector": "d15d4150",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthenticated",
            "nameLocation": "380:15:64",
            "parameters": {
              "id": 16102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16101,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "404:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 16106,
                  "src": "396:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:17:64"
            },
            "returnParameters": {
              "id": 16105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16106,
                  "src": "436:4:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:6:64"
            },
            "scope": 16107,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICapAuthentication",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 16098,
          "nodeType": "StructuredDocumentation",
          "src": "199:82:64",
          "text": "@notice ICapAuthentication handles cap authentication for the capped protocol"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          16107
        ],
        "name": "ICapAuthentication",
        "nameLocation": "291:18:64",
        "scope": 16108,
        "usedErrors": []
      }
    ],
    "license": "LicenseRef-Gyro-1.0"
  },
  "id": 64
}